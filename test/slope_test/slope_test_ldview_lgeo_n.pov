// Generated By: LDView 4.4 Alpha 5 Copyright (C) 2019 Travis Cobbs & Peter Bartfai
// See: https://tcobbs.github.io/ldview/
// Date: Mon Jul  1 04:54:01 2019
// Input LDraw File: slope_test.ldr
// LDraw File Author: MLCad
//
// This file was automatically generated from an LDraw file by the program
// LDView.  See comments above for further details.

#version 3.7;

#if (version >= 3.7) global_settings {assumed_gamma 1} #end

#ifndef (LDXQual) #declare LDXQual = 3; #end	// Quality (0 = Bounding Box; 1 = No Refraction; 2 = Normal; 3 = Stud Logos)
#ifndef (LDXSW) #declare LDXSW = 0.5; #end	// Seam Width (0 for no seams)
#ifndef (LDXStuds) #declare LDXStuds = 1; #end	// Show studs? (1 = YES; 0 = NO)
#ifndef (LDXRefls) #declare LDXRefls = 1; #end	// Reflections? (1 = YES; 0 = NO)
#ifndef (LDXShads) #declare LDXShads = 1; #end	// Shadows? (1 = YES; 0 = NO)
#ifndef (LDXBackground) #declare LDXBackground = 0; #end	// Include Background? (1 = YES; 0 = NO)
#ifndef (LDXFloor) #declare LDXFloor = 0; #end	// Include Floor? (1 = YES; 0 = NO)

// Model bounds information
#ifndef (LDXMinX) #declare LDXMinX = -19.75; #end
#ifndef (LDXMinY) #declare LDXMinY = -27.75; #end
#ifndef (LDXMinZ) #declare LDXMinZ = -19.75; #end
#ifndef (LDXMaxX) #declare LDXMaxX = 19.75; #end
#ifndef (LDXMaxY) #declare LDXMaxY = -0.25; #end
#ifndef (LDXMaxZ) #declare LDXMaxZ = 19.75; #end
#ifndef (LDXCenterX) #declare LDXCenterX = 0; #end
#ifndef (LDXCenterY) #declare LDXCenterY = -14; #end
#ifndef (LDXCenterZ) #declare LDXCenterZ = 0; #end
#ifndef (LDXCenter) #declare LDXCenter = <LDXCenterX,LDXCenterY,LDXCenterZ>; #end
#ifndef (LDXRadius) #declare LDXRadius = 31.131777; #end

// Camera settings
#ifndef (LDXCameraLoc) #declare LDXCameraLoc = < 49.817265,-54.675625,-49.817265 >; #end	// Camera Location vector
#ifndef (LDXCameraLookAt) #declare LDXCameraLookAt = < -4.79366770383710161241,-10.08598699795276587565,4.79366770383710161241 >; #end	// Camera look-at point vector
#ifndef (LDXCameraSky) #declare LDXCameraSky = < -0.35355339491603171576,-0.8660254002549215846,0.35355339491603171576 >; #end	// Camera sky vector (<0,-1,0> will usually work for standard "up")
#ifndef (LDXCameraAngle) #declare LDXCameraAngle = 76.900337; #end
#ifndef (LDXCameraAspect) #declare LDXCameraAspect = image_width/image_height; #end
#ifndef (LDXCameraTransform) #declare LDXCameraTransform = transform {}; #end

#ifndef (LDXFloorLoc) #declare LDXFloorLoc = LDXMaxY; #end	// Floor location. (Dependent on floor axis; MAX_Y is bottom of model)
#ifndef (LDXFloorAxis) #declare LDXFloorAxis = y; #end	// Floor axis (x, y, or z)
#ifndef (LDXFloorR) #declare LDXFloorR = 0.8; #end	// Floor Red
#ifndef (LDXFloorG) #declare LDXFloorG = 0.8; #end	// Floor Green
#ifndef (LDXFloorB) #declare LDXFloorB = 0.8; #end	// Floor Blue
#ifndef (LDXFloorAmb) #declare LDXFloorAmb = 0.4; #end	// Floor Ambient
#ifndef (LDXFloorDif) #declare LDXFloorDif = 0.4; #end	// Floor Diffuse
#ifndef (LDXAmb) #declare LDXAmb = 0.4; #end
#ifndef (LDXDif) #declare LDXDif = 0.4; #end
#ifndef (LDXRefl) #declare LDXRefl = 0.08; #end
#ifndef (LDXPhong) #declare LDXPhong = 0.5; #end
#ifndef (LDXPhongS) #declare LDXPhongS = 40; #end
#ifndef (LDXTRefl) #declare LDXTRefl = 0.2; #end
#ifndef (LDXTFilt) #declare LDXTFilt = 0.85; #end
#ifndef (LDXIoR) #declare LDXIoR = 1.25; #end
#ifndef (LDXRubberRefl) #declare LDXRubberRefl = 0; #end
#ifndef (LDXRubberPhong) #declare LDXRubberPhong = 0.1; #end
#ifndef (LDXRubberPhongS) #declare LDXRubberPhongS = 10; #end
#ifndef (LDXChromeRefl) #declare LDXChromeRefl = 0.85; #end
#ifndef (LDXChromeBril) #declare LDXChromeBril = 5; #end
#ifndef (LDXChromeSpec) #declare LDXChromeSpec = 0.8; #end
#ifndef (LDXChromeRough) #declare LDXChromeRough = 0.01; #end
#ifndef (LDXOpaqueNormal) #declare LDXOpaqueNormal = normal { bumps 0.001 scale 0.5 }; #end
#ifndef (LDXTransNormal) #declare LDXTransNormal = normal { bumps 0.001 scale 0.5 }; #end
#ifndef (LDXIPov) #declare LDXIPov = 0; #end	// Use inline POV code from LDraw file? (1 = YES; 0 = NO)
#ifndef (LDXBgR) #declare LDXBgR = 0.752941; #end	// Background Red
#ifndef (LDXBgG) #declare LDXBgG = 0.752941; #end	// Background Green
#ifndef (LDXBgB) #declare LDXBgB = 0.752941; #end	// Background Blue

// Camera
#ifndef (LDXSkipCamera)
camera {
	location LDXCameraLoc
	sky LDXCameraSky
	right LDXCameraAspect * < -1,0,0 >
	look_at LDXCameraLookAt
	angle LDXCameraAngle
	transform {LDXCameraTransform}
}
#end

// Lights
#ifndef (LDXSkipLight1)
light_source {	// Latitude,Longitude: 45,0,LDXRadius*2
	<0*LDXRadius,-1.414214*LDXRadius,-1.414214*LDXRadius> + LDXCenter
	color rgb <1,1,1>
}
#end
#ifndef (LDXSkipLight2)
light_source {	// Latitude,Longitude: 30,120,LDXRadius*2
	<1.5*LDXRadius,-1*LDXRadius,0.866026*LDXRadius> + LDXCenter
	color rgb <1,1,1>
}
#end
#ifndef (LDXSkipLight3)
light_source {	// Latitude,Longitude: 60,-120,LDXRadius*2
	<-0.866025*LDXRadius,-1.732051*LDXRadius,0.5*LDXRadius> + LDXCenter
	color rgb <1,1,1>
}
#end

#macro LDXSeamMatrix(Width, Height, Depth, CenterX, CenterY, CenterZ)
#local aw = 0;
#local ah = 0;
#local ad = 0;
#local ax = 0;
#local ay = 0;
#local az = 0;
#if (Width != 0)
#local aw = 1-LDXSW/Width;
#end
#if (Height != 0)
#local ah = 1-LDXSW/Height;
#end
#if (Depth != 0)
#local ad = 1-LDXSW/Depth;
#end
#if (Width != 0 & CenterX != 0)
#local ax = LDXSW/(Width / CenterX);
#end
#if (Height != 0 & CenterY != 0)
#local ay = LDXSW/(Height / CenterY);
#end
#if (Depth != 0 & CenterZ != 0)
#local az = LDXSW/(Depth / CenterZ);
#end
#if (aw <= 0)
#local aw = 1;
#local ax = 0;
#end
#if (ah <= 0)
#local ah = 1;
#local ay = 0;
#end
#if (ad <= 0)
#local ad = 1;
#local az = 0;
#end
matrix <aw,0,0,0,ah,0,0,0,ad,ax,ay,az>
#end


#if (LDXBackground != 0)
#if (version >= 3.7)
background { color srgb <LDXBgR,LDXBgG,LDXBgB> }
#else
background { color rgb <LDXBgR,LDXBgG,LDXBgB> }
#end
#end

#ifndef (LDXSkipOpaqueColorMacro)
#macro LDXOpaqueColor(r, g, b)
#if (version >= 3.1) material { #end
	texture {
#if (version >= 3.7)
		pigment { srgbf <r,g,b,0> }
#else
		pigment { rgbf <r,g,b,0> }
#end
#if (LDXQual > 1)
		finish { ambient LDXAmb diffuse LDXDif }
		finish { phong LDXPhong phong_size LDXPhongS reflection LDXRefl }
		normal { LDXOpaqueNormal }
#end
	}
#if (version >= 3.1) } #end
#end
#end

#ifndef (LDXColor1) // Blue
#declare LDXColor1 = LDXOpaqueColor(0,0.333333,0.74902)
#end

#ifndef (LDXColor7) // Light Grey
#declare LDXColor7 = LDXOpaqueColor(0.607843,0.631373,0.615686)
#end

#declare LDX_4_dash_4cyli_dot_dat_in_part = cylinder // Cylinder 1
{
	<0,0,0>,<0,1,0>,1 open
}

#declare LDX_4_dash_4cyli_dot_dat = cylinder // Cylinder 1
{
	<0,0,0>,<0,1,0>,1 open
}

#declare LDX_4_dash_4ring3_dot_dat_in_part = disc // Ring 1
{
	<0,0,0>,<0,1,0>,4,3
}

#declare LDX_4_dash_4ring3_dot_dat = disc // Ring 1
{
	<0,0,0>,<0,1,0>,4,3
}

#declare LDX_stud4a_dot_dat_in_part = union {
// Stud Tube Open without Base Edges
// Name: stud4a.dat
// Author: James Jessiman
// !LDRAW_ORG Primitive UPDATE 2009-02
// !LICENSE Redistributable under CCAL version 2.0 : see CAreadme.txt
// BFC CERTIFY CCW
// !HISTORY 1999-07-05 [PTadmin] Official Update 1999-05
// !HISTORY 2002-04-04 [sbliss] Modified for BFC compliance
// !HISTORY 2002-04-25 [PTadmin] Official Update 2002-02
// !HISTORY 2007-06-24 [PTadmin] Header formatted for Contributor Agreement
// !HISTORY 2008-07-01 [PTadmin] Official Update 2008-01
// !HISTORY 2009-06-21 [cwdee] Update ring references to 4-4ring
// !HISTORY 2009-09-03 [PTadmin] Official Update 2009-02
// BFC INVERTNEXT
	object {
		LDX_4_dash_4cyli_dot_dat_in_part
		matrix <6,0,0,0,4,0,0,0,6,0,-4,0>
	}
	object {
		LDX_4_dash_4cyli_dot_dat_in_part
		matrix <8,0,0,0,4,0,0,0,8,0,-4,0>
	}
	object {
		LDX_4_dash_4ring3_dot_dat_in_part
		matrix <2,0,0,0,1,0,0,0,2,0,-4,0>
	}
}

#declare LDX_1_dash_4cyls_dot_dat_in_part = cylinder // Sloped Cylinder 0.25
{
	<0,0,0>,<0,2,0>,1 open
	clipped_by
	{
		plane
		{
			<0,0,-1>,0
		}
		plane
		{
			<-1,0,0>,0
		}
		plane
		{
			<1,1,0>,0.70710678118654757274
		}
	}
}

#declare LDX_1_dash_4cyls_dot_dat = cylinder // Sloped Cylinder 0.25
{
	<0,0,0>,<0,2,0>,1 open
	clipped_by
	{
		plane
		{
			<0,0,-1>,0
		}
		plane
		{
			<-1,0,0>,0
		}
		plane
		{
			<1,1,0>,0.70710678118654757274
		}
	}
}

#declare LDX_2_dash_4cyli_dot_dat_in_part = cylinder // Cylinder 0.5
{
	<0,0,0>,<0,1,0>,1 open
	clipped_by
	{
		plane
		{
			<0,0,-1>,0
		}
	}
}

#declare LDX_2_dash_4cyli_dot_dat = cylinder // Cylinder 0.5
{
	<0,0,0>,<0,1,0>,1 open
	clipped_by
	{
		plane
		{
			<0,0,-1>,0
		}
	}
}

#declare LDX_4_dash_4disc_dot_dat_in_part = disc // Disc 1
{
	<0,0,0>,<0,1,0>,1
}

#declare LDX_4_dash_4disc_dot_dat = disc // Disc 1
{
	<0,0,0>,<0,1,0>,1
}

#declare LDXLegoSpace = 49.5;
#declare LDXStudLogo =
union {
	merge {
		// L
		sphere {<-88,0,0>,4}
		cylinder {<-88,0,0>,<0,0,0>,4 open}
		sphere {<0,0,0>,4}
		cylinder {<0,0,0>,<0,0,25>,4 open}
		sphere {<0,0,25>,4}
		clipped_by {plane{y,0}}
	}

	merge {
		// E
		sphere {<-88,0,25>,4}
		cylinder {<-88,0,25>,<-88,0,0>,4 open}
		sphere {<-88,0,0>,4}
		cylinder {<-88,0,0>,<0,0,0>,4 open}
		sphere {<0,0,0>,4}
		cylinder {<0,0,0>,<0,0,25>,4 open}
		sphere {<0,0,25>,4}
		sphere {<-44,0,17>,4}
		cylinder {<-44,0,0>,<-44,0,17>,4 open}
		clipped_by {plane{y,0}}
		translate <0,0,LDXLegoSpace>
	}

	merge {
		// G
		sphere {<-74,0,25>,4}
		torus {12.5,4 clipped_by{plane{x,0}} translate<-74,0,12.5>}
		cylinder {<-74,0,0>,<-14,0,0>,4 open}
		torus {12.5,4 clipped_by{plane{-x,0}} translate<-14,0,12.5>}
		cylinder {<-14,0,25>,<-44,0,25>,4 open}
		sphere {<-44,0,25>,4}
		cylinder {<-44,0,25>,<-44,0,17>,4 open}
		sphere {<-44,0,17>,4}
		clipped_by {plane{y,0}}
		translate <0,0,LDXLegoSpace*2>
	}

	merge {
		// O
		torus {12.5,4 clipped_by{plane{x,0}} translate<-74,0,12.5>}
		cylinder {<-74,0,0>,<-14,0,0>,4 open}
		torus {12.5,4 clipped_by{plane{-x,0}} translate<-14,0,12.5>}
		cylinder {<-14,0,25>,<-74,0,25>,4 open}
		clipped_by {plane{y,0}}
		translate <0,0,LDXLegoSpace*3>
	}

	matrix <1,0,-0.22,0,1,0,0,0,1,0,0,0>
	scale .045
	translate <1.85,-4,-4.45>
}

#declare LDX_stud_dot_dat_in_part =
#if (LDXQual <= 2)
cylinder { <0,0,0>, <0,-4,0>, 6 }
#else
union {
	cylinder { <0,0,0>, <0,-4,0>, 6 }
	object { LDXStudLogo }
}
#end

#declare LDX_stud_dot_dat =
#if (LDXQual <= 2)
cylinder { <0,0,0>, <0,-4,0>, 6 }
#else
union {
	cylinder { <0,0,0>, <0,-4,0>, 6 }
	object { LDXStudLogo }
}
#end

#declare LDX_s_slash_3039s01_dot_dat_in_part = union {
// ~Slope Brick 45  2 x  2 without Front Face
// Name: s\3039s01.dat
// Author: John Van Zwieten [jvan]
// !LDRAW_ORG Subpart UPDATE 2003-03
// !LICENSE Redistributable under CCAL version 2.0 : see CAreadme.txt
// BFC CERTIFY CCW
// !HISTORY 1999-12-31 [PTadmin] Official Update 1999-06
// !HISTORY 2003-07-02 [Steffen] BFCed; change in part name: "w/o" --> "without"
// !HISTORY 2003-12-19 [PTadmin] Official Update 2003-03
// !HISTORY 2007-08-30 [PTadmin] Header formatted for Contributor Agreement
// !HISTORY 2008-07-01 [PTadmin] Official Update 2008-01
	#if (LDXStuds)
		object {
			LDX_stud4a_dot_dat_in_part
			matrix <1,0,0,0,-1,0,0,0,1,0,20,-10>
		}
	#end // LDXStuds
// BFC INVERTNEXT
	object {
		LDX_1_dash_4cyls_dot_dat_in_part
		matrix <0,0,-6,0,-6,0,6,0,0,0,10,-10>
	}
// BFC INVERTNEXT
	object {
		LDX_1_dash_4cyls_dot_dat_in_part
		matrix <0,0,-6,0,-6,0,-6,0,0,0,10,-10>
	}
// BFC INVERTNEXT
	object {
		LDX_2_dash_4cyli_dot_dat_in_part
		matrix <6,0,0,0,16,0,0,0,6,0,4,-10>
	}
// BFC INVERTNEXT
	object {
		LDX_2_dash_4cyli_dot_dat_in_part
		matrix <6,0,0,0,10,0,0,0,-6,0,10,-10>
	}
	object {
		LDX_1_dash_4cyls_dot_dat_in_part
		matrix <0,0,-8,0,-8,0,8,0,0,0,12,-10>
	}
	object {
		LDX_1_dash_4cyls_dot_dat_in_part
		matrix <0,0,-8,0,-8,0,-8,0,0,0,12,-10>
	}
	object {
		LDX_2_dash_4cyli_dot_dat_in_part
		matrix <8,0,0,0,16,0,0,0,8,0,4,-10>
	}
	object {
		LDX_2_dash_4cyli_dot_dat_in_part
		matrix <8,0,0,0,8,0,0,0,-8,0,12,-10>
	}
// 4 16 20 20 -30 20 0 -10 -20 0 -10 -20 20 -30
	#if (LDXStuds)
		object {
			LDX_stud_dot_dat_in_part
			matrix <1,0,0,0,1,0,0,0,1,-10,0,0>
		}
		object {
			LDX_stud_dot_dat_in_part
			matrix <1,0,0,0,1,0,0,0,1,10,0,0>
		}
	#end // LDXStuds
}

#declare LDX_3039_dot_dat =
#if (LDXQual = 0)
box {
	<-20,-4,-30>,<20,24,10>
}
#else
union {
// Slope Brick 45  2 x  2
// Name: 3039.dat
// Author: James Jessiman
// !LDRAW_ORG Part UPDATE 2003-03
// !LICENSE Redistributable under CCAL version 2.0 : see CAreadme.txt
// BFC CERTIFY CCW
// !HISTORY 2003-07-02 [Steffen] BFCed; re-worked part to use s\3039s01.dat
// !HISTORY 2003-12-19 [PTadmin] Official Update 2003-03
// !HISTORY 2007-06-09 [PTadmin] Header formatted for Contributor Agreement
// !HISTORY 2008-07-01 [PTadmin] Official Update 2008-01
	object {
		LDX_s_slash_3039s01_dot_dat_in_part
		matrix <1,0,0,0,1,0,0,0,1,0,0,0>
	}
	mesh2 {
		vertex_vectors {
			20,
			<-20,0,-10>, <-20,0,10>, <-20,20,-30>, <-20,24,-30>,
			<-20,24,10>, <-16,4,-10>, <-16,4,6>, <-16,20,-26>,
			<-16,24,-26>, <-16,24,6>, <16,4,-10>, <16,4,6>,
			<16,20,-26>, <16,24,-26>, <16,24,6>, <20,0,-10>,
			<20,0,10>, <20,20,-30>, <20,24,-30>, <20,24,10>
		}
		normal_vectors {
			8,
			<-1,0,0>, <0,-1,0>, <0,-0.707107,-0.707107>, <0,0,-1>,
			<0,0,1>, <0,0.707107,0.707107>, <0,1,0>, <1,0,0>
		}
		face_indices {
			36,
			<19, 14, 9>, <19, 9, 4>, <4, 9, 8>, <4, 8, 3>,
			<3, 8, 13>, <3, 13, 18>, <18, 13, 14>, <18, 14, 19>,
			<11, 10, 5>, <11, 5, 6>, <15, 16, 1>, <15, 1, 0>,
			<4, 1, 16>, <4, 16, 19>, <14, 11, 6>, <14, 6, 9>,
			<8, 7, 12>, <8, 12, 13>, <18, 17, 2>, <18, 2, 3>,
			<19, 16, 17>, <19, 17, 18>, <16, 15, 17>, <12, 11, 14>,
			<12, 14, 13>, <12, 10, 11>, <9, 6, 7>, <9, 7, 8>,
			<6, 5, 7>, <2, 1, 4>, <2, 4, 3>, <2, 0, 1>,
			<12, 7, 5>, <12, 5, 10>, <17, 15, 0>, <17, 0, 2>
		}
		normal_indices {
			36,
			<1, 1, 1>, <1, 1, 1>, <1, 1, 1>, <1, 1, 1>,
			<1, 1, 1>, <1, 1, 1>, <1, 1, 1>, <1, 1, 1>,
			<1, 1, 1>, <1, 1, 1>, <6, 6, 6>, <6, 6, 6>,
			<3, 3, 3>, <3, 3, 3>, <4, 4, 4>, <4, 4, 4>,
			<3, 3, 3>, <3, 3, 3>, <4, 4, 4>, <4, 4, 4>,
			<0, 0, 0>, <0, 0, 0>, <0, 0, 0>, <7, 7, 7>,
			<7, 7, 7>, <7, 7, 7>, <0, 0, 0>, <0, 0, 0>,
			<0, 0, 0>, <7, 7, 7>, <7, 7, 7>, <7, 7, 7>,
			<2, 2, 2>, <2, 2, 2>, <5, 5, 5>, <5, 5, 5>
		}
	}
}
#end

#declare LDX_slope_test_dot_ldr = union {
// Untitled
// Name: slope_test.ldr
// Author: MLCad
// Unofficial Model
// ROTATION CENTER 0 0 0 1 "Custom"
// ROTATION CONFIG 0 0
	object {
		LDX_3039_dot_dat
		LDXSeamMatrix(40, 28, 40, 0, 10, -10)
		matrix <1,0,0,0,1,0,0,0,1,0,-24,10>
		#if (version >= 3.1) material #else texture #end { LDXColor1 }
	}
#if (LDXRefls = 0)
	no_reflection
#end
#if (LDXShads = 0)
	no_shadow
#end
}

// slope_test.ldr
object {
	LDX_slope_test_dot_ldr
	#if (version >= 3.1) material #else texture #end { LDXColor7 }
}

// Floor
#if (LDXFloor != 0)
object {
	plane { LDXFloorAxis, LDXFloorLoc hollow }
	texture {
#if (version >= 3.7)
		pigment { color srgb <LDXFloorR,LDXFloorG,LDXFloorB> }
#else
		pigment { color rgb <LDXFloorR,LDXFloorG,LDXFloorB> }
#end
		finish { ambient LDXFloorAmb diffuse LDXFloorDif }
	}
}
#end

