// This work is licensed under the Creative Commons Attribution-Share Alike 4.0 
// Unported License. To view a copy of this license, visit 
// https://creativecommons.org/licenses/by-sa/4.0/ or send a letter to Creative 
// Commons, 171 Second Street, Suite 300, San Francisco, California, 94105, USA.
// 
// Generated By: LDView 4.3 Copyright (C) 2018 Travis Cobbs & Peter Bartfai
// See: https://tcobbs.github.io/ldview/
// Date: Tue Jun 25 11:34:05 2019
// Input LDraw File: ldr_red_devil_racer_new.mpd
// LDraw File Author: Michael Horvath
//
// This file was automatically generated from an LDraw file by the program
// LDView.  See comments above for further details.

#version 3.7;
/*
#declare LDXQual = 3;	// Quality (0 = Bounding Box; 1 = No Refraction; 2 = Normal; 3 = Stud Logos)
#declare LDXSW = 0.5;	// Seam Width (0 for no seams)
#declare LDXStuds = 1;	// Show studs? (1 = YES; 0 = NO)
#declare LDXRefls = 1;	// Reflections? (1 = YES; 0 = NO)
#declare LDXShads = 1;	// Shadows? (1 = YES; 0 = NO)
#declare LDXFloor = 0;	// Include Floor? (1 = YES; 0 = NO)
*/
// Model bounds information
#declare LDXMinX = -113.75;
#declare LDXMinY = -213.10759;
#declare LDXMinZ = -234.41333;
#declare LDXMaxX = 113.75;
#declare LDXMaxY = -0.297615;
#declare LDXMaxZ = 244.97435;
#declare LDXCenterX = 0;
#declare LDXCenterY = -106.702606;
#declare LDXCenterZ = 5.28051;
#declare LDXCenter = <LDXCenterX,LDXCenterY,LDXCenterZ>;
#declare LDXRadius = 271.992798;

// Camera settings
#declare LDXCameraLoc = < 435.244598,-462.078308,-429.964081 >;	// Camera Location vector
#declare LDXCameraLookAt = < -34.25913351796265260418,-78.73013022161154594869,39.53965109608765260418 >;	// Camera look-at point vector
#declare LDXCameraSky = < -0.35355337256429064663,-0.86602541850504122234,0.35355337256429064663 >;	// Camera sky vector (<0,-1,0> will usually work for standard "up")
/*
#declare LDXFloorLoc = LDXMaxY;	// Floor location. (Dependent on floor axis; MAX_Y is bottom of model)
#declare LDXFloorAxis = y;	// Floor axis (x, y, or z)
#declare LDXFloorR = 0.8;	// Floor Red
#declare LDXFloorG = 0.8;	// Floor Green
#declare LDXFloorB = 0.8;	// Floor Blue
#declare LDXFloorAmb = 0.4;	// Floor Ambient
#declare LDXFloorDif = 0.4;	// Floor Diffuse
#declare LDXAmb = 0.4;
#declare LDXDif = 0.4;
#declare LDXRefl = 0.08;
#declare LDXPhong = 0.5;
#declare LDXPhongS = 40;
#declare LDXTRefl = 0.2;
#declare LDXTFilt = 0.85;
#declare LDXIoR = 1.25;
#declare LDXRubberRefl = 0;
#declare LDXRubberPhong = 0.1;
#declare LDXRubberPhongS = 10;
#declare LDXChromeRefl = 0.85;
#declare LDXChromeBril = 5;
#declare LDXChromeSpec = 0.8;
#declare LDXChromeRough = 0.01;
#declare LDXIPov = 1;	// Use inline POV code from LDraw file? (1 = YES; 0 = NO)
#declare LDXBgR = 0.752941;	// Background Red
#declare LDXBgG = 0.752941;	// Background Green
#declare LDXBgB = 0.752941;	// Background Blue
#declare LDXOrigVer = version;	// DO NOT MODIFY
*/
// Camera
#ifndef (LDXSkipCamera)
camera {
	#declare LDXCamAspect = image_width/image_height;
	location LDXCameraLoc
	sky LDXCameraSky
	right LDXCamAspect * < -1,0,0 >
	look_at LDXCameraLookAt
	angle 77.011589
}
#end

// Lights
#ifndef (LDXSkipLight1)
light_source {	// Latitude,Longitude: 45,0,LDXRadius*2
	<0*LDXRadius,-1.414214*LDXRadius,-1.414214*LDXRadius> + LDXCenter
	color rgb <1,1,1>
}
#end
#ifndef (LDXSkipLight2)
light_source {	// Latitude,Longitude: 30,120,LDXRadius*2
	<1.5*LDXRadius,-1*LDXRadius,0.866026*LDXRadius> + LDXCenter
	color rgb <1,1,1>
}
#end
#ifndef (LDXSkipLight3)
light_source {	// Latitude,Longitude: 60,-120,LDXRadius*2
	<-0.866025*LDXRadius,-1.732051*LDXRadius,0.5*LDXRadius> + LDXCenter
	color rgb <1,1,1>
}
#end

#macro LDXSeamMatrix(Width, Height, Depth, CenterX, CenterY, CenterZ)
#local aw = 0;
#local ah = 0;
#local ad = 0;
#local ax = 0;
#local ay = 0;
#local az = 0;
#if (Width != 0)
#local aw = 1-LDXSW/Width;
#end
#if (Height != 0)
#local ah = 1-LDXSW/Height;
#end
#if (Depth != 0)
#local ad = 1-LDXSW/Depth;
#end
#if (Width != 0 & CenterX != 0)
#local ax = LDXSW/(Width / CenterX);
#end
#if (Height != 0 & CenterY != 0)
#local ay = LDXSW/(Height / CenterY);
#end
#if (Depth != 0 & CenterZ != 0)
#local az = LDXSW/(Depth / CenterZ);
#end
#if (aw <= 0)
#local aw = 1;
#local ax = 0;
#end
#if (ah <= 0)
#local ah = 1;
#local ay = 0;
#end
#if (ad <= 0)
#local ad = 1;
#local az = 0;
#end
matrix <aw,0,0,0,ah,0,0,0,ad,ax,ay,az>
#end


//background { color rgb <LDXBgR,LDXBgG,LDXBgB> }

#declare lg_quality = LDXQual;
#if (lg_quality = 3)
#declare lg_quality = 4;
#end

#declare lg_studs = LDXStuds;


#include "lg_defs.inc"

#include "lg_color.inc"

#ifndef (LDXColor0) // Black
#declare LDXColor0 = #if (version >= 3.1) material { #end
	texture {
		lg_black
	}
#if (version >= 3.1) } #end
#declare LDXColor0_slope = #if (version >= 3.1) material { #end
	texture {
		lg_black
		#if (LDXQual > 1) normal { bumps 0.3 scale 25*0.02 } #end
	}
#if (version >= 3.1) } #end
#end

#ifndef (LDXColor4) // Red
#declare LDXColor4 = #if (version >= 3.1) material { #end
	texture {
		lg_red
	}
#if (version >= 3.1) } #end
#declare LDXColor4_slope = #if (version >= 3.1) material { #end
	texture {
		lg_red
		#if (LDXQual > 1) normal { bumps 0.3 scale 25*0.02 } #end
	}
#if (version >= 3.1) } #end
#end

#ifndef (LDXColor7) // Light Grey
#declare LDXColor7 = #if (version >= 3.1) material { #end
	texture {
		lg_grey
	}
#if (version >= 3.1) } #end
#declare LDXColor7_slope = #if (version >= 3.1) material { #end
	texture {
		lg_grey
		#if (LDXQual > 1) normal { bumps 0.3 scale 25*0.02 } #end
	}
#if (version >= 3.1) } #end
#end

#ifndef (LDXColor14) // Yellow
#declare LDXColor14 = #if (version >= 3.1) material { #end
	texture {
		lg_yellow
	}
#if (version >= 3.1) } #end
#declare LDXColor14_slope = #if (version >= 3.1) material { #end
	texture {
		lg_yellow
		#if (LDXQual > 1) normal { bumps 0.3 scale 25*0.02 } #end
	}
#if (version >= 3.1) } #end
#end

#ifndef (LDXColor15) // White
#declare LDXColor15 = #if (version >= 3.1) material { #end
	texture {
		lg_white
	}
#if (version >= 3.1) } #end
#declare LDXColor15_slope = #if (version >= 3.1) material { #end
	texture {
		lg_white
		#if (LDXQual > 1) normal { bumps 0.3 scale 25*0.02 } #end
	}
#if (version >= 3.1) } #end
#end

#ifndef (LDXColor36) // Trans Red
#declare LDXColor36 = #if (version >= 3.1) material { #end
	texture {
		lg_clear_red
	}
	#if (LDXQual > 1) interior { lg_ior } #end
#if (version >= 3.1) } #end
#declare LDXColor36_slope = #if (version >= 3.1) material { #end
	texture {
		lg_clear_red
		#if (LDXQual > 1) normal { bumps 0.3 scale 25*0.02 } #end
	}
	#if (LDXQual > 1) interior { lg_ior } #end
#if (version >= 3.1) } #end
#end

#ifndef (LDXSkipTransColorMacro)
#macro LDXTransColor(r, g, b)
#if (version >= 3.1) material { #end
	texture {
		pigment { #if (LDXQual > 1) rgbf <r,g,b,LDXTFilt> #else rgbf <0.6,0.6,0.6,0> #end }
#if (LDXQual > 1)
		finish { ambient LDXAmb diffuse LDXDif }
		finish { phong LDXPhong phong_size LDXPhongS reflection LDXTRefl }
		#if (version >= 3.1) #else finish { refraction 1 ior LDXIoR } #end
#end
	}
#if (version >= 3.1) #if (LDXQual > 1)
	interior { ior LDXIoR }
#end #end
#if (version >= 3.1) } #end
#end
#end

#ifndef (LDXColor39) // Trans Very Light Blue
#declare LDXColor39 = LDXTransColor(0.975686,0.987451,0.994118)
#end

#ifndef (LDXColor47) // Trans Clear
#declare LDXColor47 = #if (version >= 3.1) material { #end
	texture {
		lg_clear
	}
	#if (LDXQual > 1) interior { lg_ior } #end
#if (version >= 3.1) } #end
#declare LDXColor47_slope = #if (version >= 3.1) material { #end
	texture {
		lg_clear
		#if (LDXQual > 1) normal { bumps 0.3 scale 25*0.02 } #end
	}
	#if (LDXQual > 1) interior { lg_ior } #end
#if (version >= 3.1) } #end
#end

#include "lg_3737.inc" // Technic Axle 10

#include "lg_2695.inc" // Wheel Rim 12.7 x 30 Stepped

#include "lg_2696.inc" // Tyre 12.7/ 51 x 30

#include "lg_3713.inc" // Technic Bush with Two Flanges

#declare LDX_axel_dot_dat = union {
// WRITE Axle hidden, as it causes LDView to crash.
// ROTATION CENTER 0 0 0 1 "Custom"
// ROTATION CONFIG 0 0
	object {
		lg_3737
		matrix <0,0,-25,-25,0,0,0,-25,0,0,0,0>
		LDXSeamMatrix(200, 12, 12, 0, 0, 0)
		matrix <1,0,0,0,1,0,0,0,1,0,0,0>
		#if (version >= 3.1) material #else texture #end { LDXColor0 }
	}
// Name: axel.dat
	object {
		lg_2695
		matrix <0,0,-25,-25,0,0,0,-25,0,0,0,0>
		LDXSeamMatrix(76, 76, 32, 0, 0, -8)
		matrix <0,0,1,0,1,0,-1,0,0,90,0,0>
		#if (version >= 3.1) material #else texture #end { LDXColor7 }
	}
	object {
		lg_2695
		matrix <0,0,-25,-25,0,0,0,-25,0,0,0,0>
		LDXSeamMatrix(76, 76, 32, 0, 0, -8)
		matrix <0,0,-1,0,1,0,1,0,0,-90,0,0>
		#if (version >= 3.1) material #else texture #end { LDXColor7 }
	}
	object {
		lg_2696
		matrix <0,0,-25,-25,0,0,0,-25,0,0,0,0>
		LDXSeamMatrix(108, 108, 32, 0, 0, -8)
		matrix <0,0,-1,0,1,0,1,0,0,-90,0,0>
		#if (version >= 3.1) material #else texture #end { LDXColor0 }
	}
	object {
		lg_2696
		matrix <0,0,-25,-25,0,0,0,-25,0,0,0,0>
		LDXSeamMatrix(108, 108, 32, 0, 0, -8)
		matrix <0,0,1,0,1,0,-1,0,0,90,0,0>
		#if (version >= 3.1) material #else texture #end { LDXColor0 }
	}
	object {
		lg_3713
		matrix <0,0,-25,-25,0,0,0,-25,0,0,0,0>
		LDXSeamMatrix(18, 18, 20, 0, 0, 0)
		matrix <0,0,-1,0,1,0,1,0,0,30,0,0>
		#if (version >= 3.1) material #else texture #end { LDXColor7 }
	}
	object {
		lg_3713
		matrix <0,0,-25,-25,0,0,0,-25,0,0,0,0>
		LDXSeamMatrix(18, 18, 20, 0, 0, 0)
		matrix <0,0,-1,0,1,0,1,0,0,70,0,0>
		#if (version >= 3.1) material #else texture #end { LDXColor7 }
	}
	object {
		lg_3713
		matrix <0,0,-25,-25,0,0,0,-25,0,0,0,0>
		LDXSeamMatrix(18, 18, 20, 0, 0, 0)
		matrix <0,0,1,0,1,0,-1,0,0,-30,0,0>
		#if (version >= 3.1) material #else texture #end { LDXColor7 }
	}
	object {
		lg_3713
		matrix <0,0,-25,-25,0,0,0,-25,0,0,0,0>
		LDXSeamMatrix(18, 18, 20, 0, 0, 0)
		matrix <0,0,1,0,1,0,-1,0,0,-70,0,0>
		#if (version >= 3.1) material #else texture #end { LDXColor7 }
	}
}

#include "lg_6153.inc" // Wedge  6 x  4

#include "lg_3937.inc" // Hinge  1 x  2 Base

#include "lg_3938.inc" // Hinge  1 x  2 Top

#include "lg_3829c01.inc" // Car Steering Stand and Wheel (Complete)

#declare LDX_steer_dot_dat = union {
// New Model
// Name: steer.dat
// Author: MLCad
// Unofficial Model
// ROTATION CENTER 0 0 0 1 "Custom"
// ROTATION CONFIG 0 0
	object {
		lg_3937
		matrix <0,0,-25,-25,0,0,0,-25,0,0,0,0>
		LDXSeamMatrix(40, 22, 20, 0, 13, 0)
		matrix <1,0,0,0,1,0,0,0,1,0,-24,0>
		#if (version >= 3.1) material #else texture #end { LDXColor4 }
	}
	object {
		lg_3938
		matrix <0,0,-25,-25,0,0,0,-25,0,0,0,0>
		LDXSeamMatrix(40, 20, 20, 0, 6, 0)
		matrix <1,0,0,0,0,1,0,-1,0,0,-14,-10>
		#if (version >= 3.1) material #else texture #end { LDXColor4 }
	}
	object {
		lg_3829c01
		matrix <0,0,-25,-25,0,0,0,-25,0,0,0,0>
		LDXSeamMatrix(40, 46.720001, 20.240002, 0, -15.360001, -0.12)
		matrix <1,0,0,0,0,1,0,-1,0,0,-14,-18>
		#if (version >= 3.1) material #else texture #end { LDXColor4 }
	}
}

#include "lg_2432.inc" // Tile  1 x  2 with Handle

#include "lg_43721.inc" // Wedge  4 x  2 Sloped Left

#include "lg_43720.inc" // Wedge  4 x  2 Sloped Right

#include "lg_3003.inc" // Brick  2 x  2

#include "lg_4070.inc" // Brick  1 x  1 with Headlight

#include "lg_3024.inc" // Plate  1 x  1

#include "lg_3001.inc" // Brick  2 x  4

#include "lg_3747a.inc" // Slope Brick 33  3 x  2 Inverted without Ribs between Studs

#include "lg_3660.inc" // Slope Brick 45  2 x  2 Inverted

#include "lg_3037.inc" // Slope Brick 45  2 x  4

#include "lg_4858.inc" // Wedge  4 x  4

#include "lg_4855.inc" // Wedge  4 x  4 Triple Inverted without Ribs between Studs

#declare LDX_4_dash_4cyli_dot_dat_in_part = cylinder // Cylinder 1
{
	<0,0,0>,<0,1,0>,1 open
}

#declare LDX_4_dash_4cyli_dot_dat = cylinder // Cylinder 1
{
	<0,0,0>,<0,1,0>,1 open
}

#declare LDX_4_dash_4ring2_dot_dat_in_part = disc // Ring 1
{
	<0,0,0>,<0,1,0>,3,2
}

#declare LDX_4_dash_4ring2_dot_dat = disc // Ring 1
{
	<0,0,0>,<0,1,0>,3,2
}

#declare LDX_stud2a_dot_dat_in_part = union {
// Stud Open without Base Edges
// Name: stud2a.dat
// Author: James Jessiman
// !LDRAW_ORG Primitive UPDATE 2009-02
// !LICENSE Redistributable under CCAL version 2.0 : see CAreadme.txt
// BFC CERTIFY CCW
// !HISTORY 1999-07-05 [PTadmin] Official Update 1999-05
// !HISTORY 2002-04-04 [sbliss] Modified for BFC compliance
// !HISTORY 2002-04-25 [PTadmin] Official Update 2002-02
// !HISTORY 2007-06-24 [PTadmin] Header formatted for Contributor Agreement
// !HISTORY 2008-07-01 [PTadmin] Official Update 2008-01
// !HISTORY 2009-06-21 [cwdee] Update ring references to 4-4ring
// !HISTORY 2009-09-03 [PTadmin] Official Update 2009-02
// BFC INVERTNEXT
	object {
		LDX_4_dash_4cyli_dot_dat_in_part
		matrix <4,0,0,0,4,0,0,0,4,0,-4,0>
	}
	object {
		LDX_4_dash_4cyli_dot_dat_in_part
		matrix <6,0,0,0,4,0,0,0,6,0,-4,0>
	}
	object {
		LDX_4_dash_4ring2_dot_dat_in_part
		matrix <2,0,0,0,1,0,0,0,2,0,-4,0>
	}
}

#declare LDX_4_dash_4cyls_dot_dat_in_part = cylinder // Sloped Cylinder 1
{
	<0,0,0>,<0,2,0>,1 open
	clipped_by
	{
		plane
		{
			<1,1,0>,0.70710678118654757274
		}
	}
}

#declare LDX_4_dash_4cyls_dot_dat = cylinder // Sloped Cylinder 1
{
	<0,0,0>,<0,2,0>,1 open
	clipped_by
	{
		plane
		{
			<1,1,0>,0.70710678118654757274
		}
	}
}

#declare LDX_stud2s_dot_dat_in_part = union {
// Stud Tube Open Sliced
// Name: stud2s.dat
// Author: Dee Earley [DeannaEarley]
// !LDRAW_ORG Primitive UPDATE 2009-03
// !LICENSE Redistributable under CCAL version 2.0 : see CAreadme.txt
// BFC CERTIFY CCW
// !HISTORY 2006-02-20 [guyvivan] Adjust precision
// !HISTORY 2009-12-29 [PTadmin] Official Update 2009-03
	object {
		LDX_4_dash_4cyls_dot_dat_in_part
		matrix <6,0,0,0,1,0,0,0,6,0,0,0>
	}
// BFC INVERTNEXT
	object {
		LDX_4_dash_4cyls_dot_dat_in_part
		matrix <4,0,0,0,0.667,0,0,0,4,0,0.333,0>
	}
// BFC INVERTNEXT
	object {
		LDX_4_dash_4cyli_dot_dat_in_part
		matrix <4,0,0,0,0.333,0,0,0,4,0,0,0>
	}
}

#declare LDX_s_slash_3665as01_dot_dat_in_part = union {
// ~Slope Brick 45  2 x  1 Inverted without Inner Stopper Ring and Front Face
// Name: s\3665as01.dat
// Author: Michael Heidemann [mikeheide]
// !LDRAW_ORG Subpart UPDATE 2018-02
// !LICENSE Redistributable under CCAL version 2.0 : see CAreadme.txt
// BFC CERTIFY CW
// !HISTORY 2008-07-11 [mkennedy] Made use of stud2s and more box and rect primitives.
// !HISTORY 2010-05-18 [Steffen] corrected stud orientation
// !HISTORY 2010-07-05 [PTadmin] Official Update 2010-02
// !HISTORY 2016-01-11 [PTadmin] Renamed from s/3665s01
// !HISTORY 2018-12-08 [PTadmin] Official Update 2018-02
// BFC INVERTNEXT
// BFC INVERTNEXT
	#if (LDXStuds)
		object {
			lg_knob
			matrix <0,0,-25,-25,0,0,0,-25,0,0,0,0>
		matrix <0,0,-1,0,1,0,1,0,0,0,0,0>
		}
		object {
			LDX_stud2a_dot_dat_in_part
			matrix <1,0,0,0,2,0,0,0,1,0,4,-20>
		}
		object {
			LDX_stud2s_dot_dat_in_part
			matrix <0,0,-1,0,6,0,1,0,0,0,4,-20>
		}
	#end // LDXStuds
}

#declare LDX_3665a_dot_dat =
#if (LDXQual = 0)
box {
	<-10,-4,-30>,<10,24,10>
}
#else
union {
// Slope Brick 45  2 x  1 Inverted without Inner Stopper Ring
// Name: 3665a.dat
// Author: James Jessiman
// !LDRAW_ORG Part UPDATE 2018-02
// !LICENSE Redistributable under CCAL version 2.0 : see CAreadme.txt
// BFC CERTIFY CCW
// !HISTORY 1998-06-20 [PTadmin] Official Update 1998-06
// !HISTORY 2003-01-21 [sbliss] Completed header; BFC'ed
// !HISTORY 2003-08-01 [PTadmin] Official Update 2003-02
// !HISTORY 2007-06-29 [PTadmin] Header formatted for Contributor Agreement
// !HISTORY 2008-07-01 [PTadmin] Official Update 2008-01
// !HISTORY 2010-05-17 [mikeheide] Used subpart
// !HISTORY 2010-07-05 [PTadmin] Official Update 2010-02
// !HISTORY 2016-01-11 [PTadmin] Renamed from 3665
// !HISTORY 2018-12-08 [PTadmin] Official Update 2018-02
	object {
		LDX_s_slash_3665as01_dot_dat_in_part
		matrix <1,0,0,0,1,0,0,0,1,0,0,0>
	}
	mesh2 {
		vertex_vectors {
			26,
			<-10,0,-30>, <-10,0,10>, <-10,4,-30>, <-10,24,-10>,
			<-10,24,10>, <-8,0,-26>, <-8,0,-10>, <-8,4,-26>,
			<-8,20,-10>, <-6,4,-6>, <-6,4,6>, <-6,24,-6>,
			<-6,24,6>, <6,4,-6>, <6,4,6>, <6,24,-6>,
			<6,24,6>, <8,0,-26>, <8,0,-10>, <8,4,-26>,
			<8,20,-10>, <10,0,-30>, <10,0,10>, <10,4,-30>,
			<10,24,-10>, <10,24,10>
		}
		normal_vectors {
			8,
			<-1,0,0>, <0,-1,0>, <0,-0.707107,0.707107>, <0,0,-1>,
			<0,0,1>, <0,0.707107,-0.707107>, <0,1,0>, <1,0,0>
		}
		face_indices {
			48,
			<10, 14, 13>, <10, 13, 9>, <10, 12, 16>, <10, 16, 14>,
			<9, 11, 12>, <9, 12, 10>, <13, 15, 11>, <13, 11, 9>,
			<14, 16, 15>, <14, 15, 13>, <4, 12, 16>, <4, 16, 25>,
			<3, 11, 12>, <3, 12, 4>, <24, 15, 11>, <24, 11, 3>,
			<25, 16, 15>, <25, 15, 24>, <19, 20, 8>, <19, 8, 7>,
			<19, 7, 5>, <19, 5, 17>, <25, 24, 23>, <25, 23, 22>,
			<22, 23, 21>, <4, 1, 22>, <4, 22, 25>, <4, 1, 2>,
			<4, 2, 3>, <0, 2, 1>, <2, 0, 21>, <2, 21, 23>,
			<19, 20, 18>, <19, 18, 17>, <7, 5, 6>, <7, 6, 8>,
			<6, 8, 20>, <6, 20, 18>, <1, 22, 18>, <1, 18, 6>,
			<0, 1, 6>, <0, 6, 5>, <21, 0, 5>, <21, 5, 17>,
			<22, 21, 17>, <22, 17, 18>, <24, 23, 2>, <24, 2, 3>
		}
		normal_indices {
			48,
			<1, 1, 1>, <1, 1, 1>, <4, 4, 4>, <4, 4, 4>,
			<0, 0, 0>, <0, 0, 0>, <3, 3, 3>, <3, 3, 3>,
			<7, 7, 7>, <7, 7, 7>, <6, 6, 6>, <6, 6, 6>,
			<6, 6, 6>, <6, 6, 6>, <6, 6, 6>, <6, 6, 6>,
			<6, 6, 6>, <6, 6, 6>, <5, 5, 5>, <5, 5, 5>,
			<3, 3, 3>, <3, 3, 3>, <7, 7, 7>, <7, 7, 7>,
			<7, 7, 7>, <3, 3, 3>, <3, 3, 3>, <0, 0, 0>,
			<0, 0, 0>, <0, 0, 0>, <3, 3, 3>, <3, 3, 3>,
			<0, 0, 0>, <0, 0, 0>, <7, 7, 7>, <7, 7, 7>,
			<4, 4, 4>, <4, 4, 4>, <1, 1, 1>, <1, 1, 1>,
			<1, 1, 1>, <1, 1, 1>, <1, 1, 1>, <1, 1, 1>,
			<1, 1, 1>, <1, 1, 1>, <2, 2, 2>, <2, 2, 2>
		}
	}
}
#end

#include "lg_4865a.inc" // Panel  1 x  2 x  1 with Square Corners

#include "lg_3032.inc" // Plate  4 x  6

#include "lg_3710.inc" // Plate  1 x  4

#include "lg_3023.inc" // Plate  1 x  2

#include "lg_44302.inc" // Hinge Plate  1 x  2 Locking with Dual Finger on End Vertical

#include "lg_45677.inc" // Wedge  4 x  4 x  0.667 Curved

#include "lg_4866.inc" // Windscreen  3 x  4 x  1 & 1/3 with 6 Studs on Top

#include "lg_2540.inc" // Plate  1 x  2 with Handle

#include "lg_3022.inc" // Plate  2 x  2

#include "lg_15068.inc" // Slope Brick Curved  2 x  2 x  0.667

#include "lg_3816.inc" // Minifig Leg Right

#include "lg_3817.inc" // Minifig Leg Left

#include "lg_0973p52.inc" // Minifig Torso with Blacktron I Pattern

#include "lg_3626bp01.inc" // Minifig Head with Standard Grin Pattern

#include "lg_2446.inc" // Minifig Helmet Modern

#include "lg_2447.inc" // Minifig Helmet Visor

#include "lg_3815.inc" // Minifig Hips

#include "lg_0976.inc" // ~Minifig Arm Left (Obsolete)

#include "lg_0977.inc" // ~Minifig Hand (Obsolete)

#declare LDX_limbl_dot_dat = union {
// Name: limbl.dat
// ROTATION CENTER 0 0 0 1 "Custom"
// ROTATION CONFIG 0 0
	object {
		lg_0976
		matrix <0,0,-25,-25,0,0,0,-25,0,0,0,0>
		LDXSeamMatrix(12.484699, 29.181366, 18.261364, 20.604, 8.848385, -3.819385)
		matrix <1,0,0,0,0.71,-0.71,0,0.71,0.71,-30,-4,0>
		#if (version >= 3.1) material #else texture #end { LDXColor0 }
	}
	object {
		lg_0977
		matrix <0,0,-25,-25,0,0,0,-25,0,0,0,0>
		LDXSeamMatrix(25.52, 12, 12, 3.24, 2, 0)
		matrix <0,0,1,0,1,0,-1,0,0,-8,-1,-29>
		#if (version >= 3.1) material #else texture #end { LDXColor0 }
	}
}

#include "lg_0975.inc" // ~Minifig Arm Right (Obsolete)

#declare LDX_limbr_dot_dat = union {
// Name: limbr.dat
// ROTATION CENTER 0 0 0 1 "Custom"
// ROTATION CONFIG 0 0
	object {
		lg_0975
		matrix <0,0,-25,-25,0,0,0,-25,0,0,0,0>
		LDXSeamMatrix(12.484699, 29.181366, 18.261364, -20.604, 8.848385, -3.819385)
		matrix <1,0,0,0,0.71,-0.71,0,0.71,0.71,20,-4,0>
		#if (version >= 3.1) material #else texture #end { LDXColor0 }
	}
	object {
		lg_0977
		matrix <0,0,-25,-25,0,0,0,-25,0,0,0,0>
		LDXSeamMatrix(25.52, 12, 12, 3.24, 2, 0)
		matrix <0,0,1,0,1,0,-1,0,0,-2,-1,-29>
		#if (version >= 3.1) material #else texture #end { LDXColor0 }
	}
}

#declare LDX_torso_dot_dat = union {
// Name: torso.dat
// ROTATION CENTER 0 0 0 1 "Custom"
// ROTATION CONFIG 0 0
	object {
		lg_0973p52
		matrix <0,0,-25,-25,0,0,0,-25,0,0,0,0>
		LDXSeamMatrix(38, 44, 20, 0, 10, 0)
		matrix <1,0,0,0,1,0,0,0,1,0,-44,0>
		#if (version >= 3.1) material #else texture #end { LDXColor0 }
	}
// MLCAD HIDE 1 0 0 0 0 1 0 0 0 1 0 0 0 1 axis_32s.dat
	object {
		lg_3626bp01
		matrix <0,0,-25,-25,0,0,0,-25,0,0,0,0>
		LDXSeamMatrix(26, 28, 26, 0, 10, 0)
		matrix <1,0,0,0,1,0,0,0,1,0,-68,0>
		#if (version >= 3.1) material #else texture #end { LDXColor14 }
	}
	object {
		lg_2446
		matrix <0,0,-25,-25,0,0,0,-25,0,0,0,0>
		LDXSeamMatrix(31.6, 34.615421, 34.5, 0, 7.807711, -1.25)
		matrix <1,0,0,0,1,0,0,0,1,0,-68,0>
		#if (version >= 3.1) material #else texture #end { LDXColor0 }
	}
	object {
		lg_2447_clear
		matrix <0,0,-25,-25,0,0,0,-25,0,0,0,0>
		LDXSeamMatrix(34, 17, 24, 0, 11, -8)
		matrix <1,0,0,0,1,0,0,0,1,0,-68,0>
		#if (version >= 3.1) material #else texture #end { LDXColor39 }
	}
	object {
		lg_3815
		matrix <0,0,-25,-25,0,0,0,-25,0,0,0,0>
		LDXSeamMatrix(36, 32.000195, 20, 0, 5.000097, 0)
		matrix <1,0,0,0,1,0,0,0,1,0,-12,0>
		#if (version >= 3.1) material #else texture #end { LDXColor0 }
	}
	object {
		LDX_limbl_dot_dat
		matrix <1,0,0,0,0.91,0.42,0,-0.42,0.91,30,-31.219999,1.49>
		#if (version >= 3.1) material #else texture #end { LDXColor0 }
	}
	object {
		LDX_limbr_dot_dat
		matrix <1,0,0,0,0.91,0.42,0,-0.42,0.91,-20,-31.219999,1.49>
		#if (version >= 3.1) material #else texture #end { LDXColor0 }
	}
}

#declare LDX_inner_dot_dat = union {
// Name: inner.dat
// ROTATION CENTER 10 23.2056 -110 1 "Custom"
// ROTATION CONFIG 0 1
	object {
		lg_6153
		matrix <0,0,-25,-25,0,0,0,-25,0,0,0,0>
		LDXSeamMatrix(80, 28, 120, 0, 10, -10)
		matrix <-1,0,0,0,1,0,0,0,-1,-20,-40,90>
		#if (version >= 3.1) material #else texture #end { LDXColor0 }
	}
	object {
		lg_6153_slope
		matrix <0,0,-25,-25,0,0,0,-25,0,0,0,0>
		LDXSeamMatrix(80, 28, 120, 0, 10, -10)
		matrix <-1,0,0,0,1,0,0,0,-1,-20,-40,90>
		#if (version >= 3.1) material #else texture #end { LDXColor0_slope }
	}
	object {
		LDX_steer_dot_dat
		matrix <-1,0,0,0,1,0,0,0,-1,-20,0,-70>
		#if (version >= 3.1) material #else texture #end { LDXColor4 }
	}
	object {
		lg_2432
		matrix <0,0,-25,-25,0,0,0,-25,0,0,0,0>
		LDXSeamMatrix(40, 32, 20.000101, 0, 16, 0.000051)
		matrix <1,0,0,0,1,0,0,0,1,-20,-8,10>
		#if (version >= 3.1) material #else texture #end { LDXColor4 }
	}
	object {
		lg_43721
		matrix <0,0,-25,-25,0,0,0,-25,0,0,0,0>
		LDXSeamMatrix(40, 28, 80, 0, 10, 0)
		matrix <1,0,0,0,1,0,0,0,1,20.000999,-16,-40>
		#if (version >= 3.1) material #else texture #end { LDXColor4 }
	}
	object {
		lg_43720
		matrix <0,0,-25,-25,0,0,0,-25,0,0,0,0>
		LDXSeamMatrix(40, 28, 80, 0, 10, 0)
		matrix <-1,0,0,0,1,0,0,0,-1,20.000999,-16,120>
		#if (version >= 3.1) material #else texture #end { LDXColor4 }
	}
	object {
		lg_3003
		matrix <0,0,-25,-25,0,0,0,-25,0,0,0,0>
		LDXSeamMatrix(40, 28, 40, 0, 10, 0)
		matrix <-1,0,0,0,1,0,0,0,-1,-19.999001,-16,160>
		#if (version >= 3.1) material #else texture #end { LDXColor4 }
	}
	object {
		lg_4070
		matrix <0,0,-25,-25,0,0,0,-25,0,0,0,0>
		LDXSeamMatrix(20, 28, 20, 0, 10, 0)
		matrix <-1,0,0,0,1,0,0,0,-1,10.001,-16,170>
		#if (version >= 3.1) material #else texture #end { LDXColor4 }
	}
	object {
		lg_3024_clear
		matrix <0,0,-25,-25,0,0,0,-25,0,0,0,0>
		LDXSeamMatrix(20, 12, 20, 0, 2, 0)
		matrix <-1,0,0,0,0,-1,0,-1,0,10.001,-6,184>
		#if (version >= 3.1) material #else texture #end { LDXColor36 }
	}
	object {
		lg_3024_clear
		matrix <0,0,-25,-25,0,0,0,-25,0,0,0,0>
		LDXSeamMatrix(20, 12, 20, 0, 2, 0)
		matrix <-1,0,0,0,0,-1,0,-1,0,-49.999001,-6,184>
		#if (version >= 3.1) material #else texture #end { LDXColor36 }
	}
	object {
		lg_4070
		matrix <0,0,-25,-25,0,0,0,-25,0,0,0,0>
		LDXSeamMatrix(20, 28, 20, 0, 10, 0)
		matrix <-1,0,0,0,1,0,0,0,-1,-49.999001,-16,170>
		#if (version >= 3.1) material #else texture #end { LDXColor4 }
	}
	object {
		lg_3001
		matrix <0,0,-25,-25,0,0,0,-25,0,0,0,0>
		LDXSeamMatrix(80, 28, 40, 0, 10, 0)
		matrix <-1,0,0,0,1,0,0,0,-1,-19.999001,8,120>
		#if (version >= 3.1) material #else texture #end { LDXColor4 }
	}
	object {
		lg_3001
		matrix <0,0,-25,-25,0,0,0,-25,0,0,0,0>
		LDXSeamMatrix(80, 28, 40, 0, 10, 0)
		matrix <-1,0,0,0,1,0,0,0,-1,-19.999001,8,160>
		#if (version >= 3.1) material #else texture #end { LDXColor4 }
	}
	object {
		lg_3747a
		matrix <0,0,-25,-25,0,0,0,-25,0,0,0,0>
		LDXSeamMatrix(40, 28, 60, 0, 10, -20)
		matrix <-1,0,0,0,1,0,0,0,-1,-39.999001,32,130>
		#if (version >= 3.1) material #else texture #end { LDXColor4 }
	}
	object {
		lg_3747a_slope
		matrix <0,0,-25,-25,0,0,0,-25,0,0,0,0>
		LDXSeamMatrix(40, 28, 60, 0, 10, -20)
		matrix <-1,0,0,0,1,0,0,0,-1,-39.999001,32,130>
		#if (version >= 3.1) material #else texture #end { LDXColor4_slope }
	}
	object {
		lg_3747a
		matrix <0,0,-25,-25,0,0,0,-25,0,0,0,0>
		LDXSeamMatrix(40, 28, 60, 0, 10, -20)
		matrix <-1,0,0,0,1,0,0,0,-1,0.001,32,130>
		#if (version >= 3.1) material #else texture #end { LDXColor4 }
	}
	object {
		lg_3747a_slope
		matrix <0,0,-25,-25,0,0,0,-25,0,0,0,0>
		LDXSeamMatrix(40, 28, 60, 0, 10, -20)
		matrix <-1,0,0,0,1,0,0,0,-1,0.001,32,130>
		#if (version >= 3.1) material #else texture #end { LDXColor4_slope }
	}
	object {
		lg_3660
		matrix <0,0,-25,-25,0,0,0,-25,0,0,0,0>
		LDXSeamMatrix(40, 28, 40, 0, 10, -10)
		matrix <1,0,0,0,1,0,0,0,1,0.001,32,70>
		#if (version >= 3.1) material #else texture #end { LDXColor4 }
	}
	object {
		lg_3660_slope
		matrix <0,0,-25,-25,0,0,0,-25,0,0,0,0>
		LDXSeamMatrix(40, 28, 40, 0, 10, -10)
		matrix <1,0,0,0,1,0,0,0,1,0.001,32,70>
		#if (version >= 3.1) material #else texture #end { LDXColor4_slope }
	}
	object {
		lg_3660
		matrix <0,0,-25,-25,0,0,0,-25,0,0,0,0>
		LDXSeamMatrix(40, 28, 40, 0, 10, -10)
		matrix <1,0,0,0,1,0,0,0,1,-39.999001,32,70>
		#if (version >= 3.1) material #else texture #end { LDXColor4 }
	}
	object {
		lg_3660_slope
		matrix <0,0,-25,-25,0,0,0,-25,0,0,0,0>
		LDXSeamMatrix(40, 28, 40, 0, 10, -10)
		matrix <1,0,0,0,1,0,0,0,1,-39.999001,32,70>
		#if (version >= 3.1) material #else texture #end { LDXColor4_slope }
	}
	object {
		lg_3001
		matrix <0,0,-25,-25,0,0,0,-25,0,0,0,0>
		LDXSeamMatrix(80, 28, 40, 0, 10, 0)
		matrix <-1,0,0,0,1,0,0,0,-1,-19.999001,8,80>
		#if (version >= 3.1) material #else texture #end { LDXColor4 }
	}
	object {
		lg_3003
		matrix <0,0,-25,-25,0,0,0,-25,0,0,0,0>
		LDXSeamMatrix(40, 28, 40, 0, 10, 0)
		matrix <-1,0,0,0,1,0,0,0,-1,-19.999001,-16,120>
		#if (version >= 3.1) material #else texture #end { LDXColor4 }
	}
	object {
		lg_3037
		matrix <0,0,-25,-25,0,0,0,-25,0,0,0,0>
		LDXSeamMatrix(80, 28, 40, 0, 10, -10)
		matrix <0,0,1,0,1,0,-1,0,0,10.001,-16,40>
		#if (version >= 3.1) material #else texture #end { LDXColor4 }
	}
	object {
		lg_3037_slope
		matrix <0,0,-25,-25,0,0,0,-25,0,0,0,0>
		LDXSeamMatrix(80, 28, 40, 0, 10, -10)
		matrix <0,0,1,0,1,0,-1,0,0,10.001,-16,40>
		#if (version >= 3.1) material #else texture #end { LDXColor4_slope }
	}
	object {
		lg_3037
		matrix <0,0,-25,-25,0,0,0,-25,0,0,0,0>
		LDXSeamMatrix(80, 28, 40, 0, 10, -10)
		matrix <0,0,-1,0,1,0,1,0,0,-49.999001,-16,40>
		#if (version >= 3.1) material #else texture #end { LDXColor4 }
	}
	object {
		lg_3037_slope
		matrix <0,0,-25,-25,0,0,0,-25,0,0,0,0>
		LDXSeamMatrix(80, 28, 40, 0, 10, -10)
		matrix <0,0,-1,0,1,0,1,0,0,-49.999001,-16,40>
		#if (version >= 3.1) material #else texture #end { LDXColor4_slope }
	}
	object {
		lg_43721
		matrix <0,0,-25,-25,0,0,0,-25,0,0,0,0>
		LDXSeamMatrix(40, 28, 80, 0, 10, 0)
		matrix <-1,0,0,0,1,0,0,0,-1,-59.999001,-16,120>
		#if (version >= 3.1) material #else texture #end { LDXColor4 }
	}
	object {
		lg_43720
		matrix <0,0,-25,-25,0,0,0,-25,0,0,0,0>
		LDXSeamMatrix(40, 28, 80, 0, 10, 0)
		matrix <1,0,0,0,1,0,0,0,1,-59.999001,-16,-40>
		#if (version >= 3.1) material #else texture #end { LDXColor4 }
	}
	object {
		lg_4858
		matrix <0,0,-25,-25,0,0,0,-25,0,0,0,0>
		LDXSeamMatrix(80, 28, 80, 0, 10, -30)
		matrix <1,0,0,0,1,0,0,0,1,-19.999001,-16,-90>
		#if (version >= 3.1) material #else texture #end { LDXColor4 }
	}
	object {
		lg_4858_slope
		matrix <0,0,-25,-25,0,0,0,-25,0,0,0,0>
		LDXSeamMatrix(80, 28, 80, 0, 10, -30)
		matrix <1,0,0,0,1,0,0,0,1,-19.999001,-16,-90>
		#if (version >= 3.1) material #else texture #end { LDXColor4_slope }
	}
	object {
		lg_4855
		matrix <0,0,-25,-25,0,0,0,-25,0,0,0,0>
		LDXSeamMatrix(80, 28, 80, 0, 10, -30)
		matrix <1,0,0,0,1,0,0,0,1,-19.999001,8,-90>
		#if (version >= 3.1) material #else texture #end { LDXColor4 }
	}
	object {
		lg_4855_slope
		matrix <0,0,-25,-25,0,0,0,-25,0,0,0,0>
		LDXSeamMatrix(80, 28, 80, 0, 10, -30)
		matrix <1,0,0,0,1,0,0,0,1,-19.999001,8,-90>
		#if (version >= 3.1) material #else texture #end { LDXColor4_slope }
	}
	object {
		LDX_3665a_dot_dat
		LDXSeamMatrix(20, 28, 40, 0, 10, -10)
		matrix <0,0,1,0,1,0,-1,0,0,-9.999,8,-70>
		#if (version >= 3.1) material #else texture #end { LDXColor4 }
	}
	object {
		LDX_3665a_dot_dat
		LDXSeamMatrix(20, 28, 40, 0, 10, -10)
		matrix <0,0,-1,0,1,0,1,0,0,-29.999001,8,-70>
		#if (version >= 3.1) material #else texture #end { LDXColor4 }
	}
	object {
		lg_4865a
		matrix <0,0,-25,-25,0,0,0,-25,0,0,0,0>
		LDXSeamMatrix(40, 24, 20, 0, 12, 0)
		matrix <0,0,1,0,1,0,-1,0,0,-50,-16,-20>
		#if (version >= 3.1) material #else texture #end { LDXColor4 }
	}
	object {
		lg_3032
		matrix <0,0,-25,-25,0,0,0,-25,0,0,0,0>
		LDXSeamMatrix(120, 12, 80, 0, 2, 0)
		matrix <0,0,-1,0,1,0,1,0,0,-20,24,0>
		#if (version >= 3.1) material #else texture #end { LDXColor4 }
	}
	object {
		lg_3710
		matrix <0,0,-25,-25,0,0,0,-25,0,0,0,0>
		LDXSeamMatrix(80, 12, 20, 0, 2, 0)
		matrix <0,0,-1,0,1,0,1,0,0,10,16,-20>
		#if (version >= 3.1) material #else texture #end { LDXColor4 }
	}
	object {
		lg_3710
		matrix <0,0,-25,-25,0,0,0,-25,0,0,0,0>
		LDXSeamMatrix(80, 12, 20, 0, 2, 0)
		matrix <0,0,-1,0,1,0,1,0,0,10,8,-20>
		#if (version >= 3.1) material #else texture #end { LDXColor4 }
	}
	object {
		lg_3023
		matrix <0,0,-25,-25,0,0,0,-25,0,0,0,0>
		LDXSeamMatrix(40, 12, 20, 0, 2, 0)
		matrix <0,0,-1,0,1,0,1,0,0,10,16,40>
		#if (version >= 3.1) material #else texture #end { LDXColor4 }
	}
	object {
		lg_3023
		matrix <0,0,-25,-25,0,0,0,-25,0,0,0,0>
		LDXSeamMatrix(40, 12, 20, 0, 2, 0)
		matrix <0,0,-1,0,1,0,1,0,0,10,8,40>
		#if (version >= 3.1) material #else texture #end { LDXColor4 }
	}
	object {
		lg_44302
		matrix <0,0,-25,-25,0,0,0,-25,0,0,0,0>
		LDXSeamMatrix(56, 12, 20, 8, 2, 0)
		matrix <0,0,1,0,1,0,-1,0,0,-10,-48,60>
		#if (version >= 3.1) material #else texture #end { LDXColor4 }
	}
	object {
		lg_44302
		matrix <0,0,-25,-25,0,0,0,-25,0,0,0,0>
		LDXSeamMatrix(56, 12, 20, 8, 2, 0)
		matrix <0,0,1,0,1,0,-1,0,0,-30,-48,60>
		#if (version >= 3.1) material #else texture #end { LDXColor4 }
	}
	object {
		lg_45677
		matrix <0,0,-25,-25,0,0,0,-25,0,0,0,0>
		LDXSeamMatrix(80, 20, 80, 0, 6, -30)
		matrix <1,0,0,0,1,0,0,0,1,-20,-64,-10>
		#if (version >= 3.1) material #else texture #end { LDXColor4 }
	}
	object {
		lg_45677
		matrix <0,0,-25,-25,0,0,0,-25,0,0,0,0>
		LDXSeamMatrix(80, 20, 80, 0, 6, -30)
		matrix <-1,0,0,0,1,0,0,0,-1,-20,-64,10>
		#if (version >= 3.1) material #else texture #end { LDXColor4 }
	}
	object {
		lg_4866_clear
		matrix <0,0,-25,-25,0,0,0,-25,0,0,0,0>
		LDXSeamMatrix(80, 36, 60, 0, 14, 0)
		matrix <1,0,0,0,1,0,0,0,1,-20,-48,-70>
		#if (version >= 3.1) material #else texture #end { LDXColor39 }
	}
	object {
		lg_2540
		matrix <0,0,-25,-25,0,0,0,-25,0,0,0,0>
		LDXSeamMatrix(40, 12, 36, 0, 2, -8)
		matrix <1,0,0,0,1,0,0,0,1,-20,-80,-10>
		#if (version >= 3.1) material #else texture #end { LDXColor0 }
	}
	object {
		lg_3022
		matrix <0,0,-25,-25,0,0,0,-25,0,0,0,0>
		LDXSeamMatrix(40, 12, 40, 0, 2, 0)
		matrix <1,0,0,0,1,0,0,0,1,-20,-72,0>
		#if (version >= 3.1) material #else texture #end { LDXColor0 }
	}
	object {
		lg_15068
		matrix <0,0,-25,-25,0,0,0,-25,0,0,0,0>
		LDXSeamMatrix(40, 16.000061, 40.000645, 0, -8.000031, -0.000322)
		matrix <-1,0,0,0,1,0,0,0,-1,-20,-64,20>
		#if (version >= 3.1) material #else texture #end { LDXColor0 }
	}
	object {
		lg_3816
		matrix <0,0,-25,-25,0,0,0,-25,0,0,0,0>
		LDXSeamMatrix(18, 37, 20, -10.5, 9.5, -1)
		matrix <1,0,0,0,0,-1,0,1,0,-21,15,-12>
		#if (version >= 3.1) material #else texture #end { LDXColor0 }
	}
	object {
		lg_3817
		matrix <0,0,-25,-25,0,0,0,-25,0,0,0,0>
		LDXSeamMatrix(18, 37, 20, 10.5, 9.5, -1)
		matrix <1,0,0,0,0,-1,0,1,0,-19,15,-12>
		#if (version >= 3.1) material #else texture #end { LDXColor0 }
	}
	object {
		LDX_torso_dot_dat
		matrix <1,0,0,0,0.869569,-0.502046,0,0.502046,0.869569,-20,15.84,-10.81>
		#if (version >= 3.1) material #else texture #end { LDXColor0 }
	}
}

#include "lg_6141.inc" // Plate  1 x  1 Round

#include "lg_2555.inc" // Tile  1 x  1 with Clip

#declare LDX_headlights_dot_dat = union {
// Untitled
// Name: headlights.dat
// Author: MLCad
// Unofficial Model
// ROTATION CENTER 0 0 0 1 "Custom"
// ROTATION CONFIG 0 0
	object {
		lg_6141_clear
		matrix <0,0,-25,-25,0,0,0,-25,0,0,0,0>
		LDXSeamMatrix(20, 12, 20, 0, 2, 0)
		matrix <1,0,0,0,1,0,0,0,1,0,14,0>
		#if (version >= 3.1) material #else texture #end { LDXColor47 }
	}
	object {
		lg_2555
		matrix <0,0,-25,-25,0,0,0,-25,0,0,0,0>
		LDXSeamMatrix(20, 18, 20, 0, -1, 0)
		matrix <0,0,-1,0,1,0,1,0,0,0,6,0>
		#if (version >= 3.1) material #else texture #end { LDXColor0 }
	}
}

#include "lg_2730.inc" // Technic Brick  1 x 10 with Holes

#include "lg_3895.inc" // Technic Brick  1 x 12 with Holes

#declare LDX_light_dot_dat =
#if (LDXQual = 0)
box {
	<-4,-4,-4>,<4,4,4>
}
#else
union {
// Pov-RAY Light Source
// Name: light.dat
// Author: James Jessiman
// !LDRAW_ORG Part ORIGINAL
// !LICENSE Redistributable under CCAL version 2.0 : see CAreadme.txt
// !HISTORY 2007-07-29 [PTadmin] Header formatted for Contributor Agreement
// !HISTORY 2008-07-01 [PTadmin] Official Update 2008-01
}
#end

#declare LDX_4_dash_4ring3_dot_dat_in_part = disc // Ring 1
{
	<0,0,0>,<0,1,0>,4,3
}

#declare LDX_4_dash_4ring3_dot_dat = disc // Ring 1
{
	<0,0,0>,<0,1,0>,4,3
}

#declare LDX_peghole_dot_dat_in_part = union {
// Peg Hole End
// Name: peghole.dat
// Author: James Jessiman
// !LDRAW_ORG Primitive UPDATE 2010-01
// !LICENSE Redistributable under CCAL version 2.0 : see CAreadme.txt
// BFC CERTIFY CCW
// !HISTORY 2002-05-01 [mkennedy] replace code with ring3
// !HISTORY 2002-05-01 [sbliss] BFC
// !HISTORY 2002-06-11 [PTadmin] Official Update 2002-03
// !HISTORY 2007-06-24 [PTadmin] Header formatted for Contributor Agreement
// !HISTORY 2008-07-01 [PTadmin] Official Update 2008-01
// !HISTORY 2010-01-14 [cwdee] Update ring3 to 4-4ring3
// !HISTORY 2010-04-05 [PTadmin] Official Update 2010-01
	object {
		LDX_4_dash_4ring3_dot_dat_in_part
		matrix <2,0,0,0,1,0,0,0,2,0,2,0>
	}
// BFC INVERTNEXT
	object {
		LDX_4_dash_4cyli_dot_dat_in_part
		matrix <8,0,0,0,2,0,0,0,8,0,0,0>
	}
}

#declare LDX_2_dash_4ndis_dot_dat_in_part = disc // Not-Disc 0.5
{
	<0,0,0>,<0,1,0>,2,1
	clipped_by
	{
		plane
		{
			<0,0,-1>,0
		}
		box
		{
			<-1,-1,-1>,<1,1,1>
		}
	}
}

#declare LDX_2_dash_4ndis_dot_dat = disc // Not-Disc 0.5
{
	<0,0,0>,<0,1,0>,2,1
	clipped_by
	{
		plane
		{
			<0,0,-1>,0
		}
		box
		{
			<-1,-1,-1>,<1,1,1>
		}
	}
}

#declare LDX_2_dash_4cyli_dot_dat_in_part = cylinder // Cylinder 0.5
{
	<0,0,0>,<0,1,0>,1 open
	clipped_by
	{
		plane
		{
			<0,0,-1>,0
		}
	}
}

#declare LDX_2_dash_4cyli_dot_dat = cylinder // Cylinder 0.5
{
	<0,0,0>,<0,1,0>,1 open
	clipped_by
	{
		plane
		{
			<0,0,-1>,0
		}
	}
}

#declare LDX_4_dash_4ndis_dot_dat_in_part = disc // Not-Disc 1
{
	<0,0,0>,<0,1,0>,2,1
	clipped_by
	{
		box
		{
			<-1,-1,-1>,<1,1,1>
		}
	}
}

#declare LDX_4_dash_4ndis_dot_dat = disc // Not-Disc 1
{
	<0,0,0>,<0,1,0>,2,1
	clipped_by
	{
		box
		{
			<-1,-1,-1>,<1,1,1>
		}
	}
}

#declare LDX_stud2_dot_dat_in_part = union {
// Stud Open
// Name: stud2.dat
// Author: James Jessiman
// !LDRAW_ORG Primitive UPDATE 2009-02
// !LICENSE Redistributable under CCAL version 2.0 : see CAreadme.txt
// BFC CERTIFY CCW
// !HISTORY 1999-07-05 [PTadmin] Official Update 1999-05
// !HISTORY 2002-04-04 [sbliss] Modified for BFC compliance
// !HISTORY 2002-04-25 [PTadmin] Official Update 2002-02
// !HISTORY 2007-06-24 [PTadmin] Header formatted for Contributor Agreement
// !HISTORY 2008-07-01 [PTadmin] Official Update 2008-01
// !HISTORY 2009-06-21 [cwdee] Update ring references to 4-4ring
// !HISTORY 2009-09-03 [PTadmin] Official Update 2009-02
// BFC INVERTNEXT
	object {
		LDX_4_dash_4cyli_dot_dat_in_part
		matrix <4,0,0,0,4,0,0,0,4,0,-4,0>
	}
	object {
		LDX_4_dash_4cyli_dot_dat_in_part
		matrix <6,0,0,0,4,0,0,0,6,0,-4,0>
	}
	object {
		LDX_4_dash_4ring2_dot_dat_in_part
		matrix <2,0,0,0,1,0,0,0,2,0,-4,0>
	}
}

#declare LDX_4_dash_4disc_dot_dat_in_part = disc // Disc 1
{
	<0,0,0>,<0,1,0>,1
}

#declare LDX_4_dash_4disc_dot_dat = disc // Disc 1
{
	<0,0,0>,<0,1,0>,1
}

#declare LDX_stud3a_dot_dat_in_part = union {
// Stud Tube Solid without Base Edges
// Name: stud3a.dat
// Author: James Jessiman
// !LDRAW_ORG Primitive UPDATE 2003-02
// !LICENSE Redistributable under CCAL version 2.0 : see CAreadme.txt
// BFC CERTIFY CCW
// !HISTORY 2002-08-31 [izanette] Modified with WINDZ for BFC compliance
// !HISTORY 2003-08-01 [PTadmin] Official Update 2003-02
// !HISTORY 2007-06-24 [PTadmin] Header formatted for Contributor Agreement
// !HISTORY 2008-07-01 [PTadmin] Official Update 2008-01
	object {
		LDX_4_dash_4disc_dot_dat_in_part
		matrix <4,0,0,0,1,0,0,0,4,0,-4,0>
	}
	object {
		LDX_4_dash_4cyli_dot_dat_in_part
		matrix <4,0,0,0,4,0,0,0,4,0,-4,0>
	}
}

#declare LDX_1_dash_4cyls2_dot_dat_in_part = cylinder // Sloped Cylinder2 0.25
{
	<0,0,0>,<0,1,0>,1 open
	clipped_by
	{
		plane
		{
			<1,0,0>,0
		}
		plane
		{
			<0,0,-1>,0
		}
		plane
		{
			<1,1,0>,0
		}
	}
}

#declare LDX_1_dash_4cyls2_dot_dat = cylinder // Sloped Cylinder2 0.25
{
	<0,0,0>,<0,1,0>,1 open
	clipped_by
	{
		plane
		{
			<1,0,0>,0
		}
		plane
		{
			<0,0,-1>,0
		}
		plane
		{
			<1,1,0>,0
		}
	}
}

#declare LDX_2823_dot_dat =
#if (LDXQual = 0)
box {
	<-10,-4,-140>,<10,24,20>
}
#else
union {
// Technic Forklift Fork
// Name: 2823.dat
// Author: James Jessiman
// !LDRAW_ORG Part UPDATE 2010-01
// !LICENSE Redistributable under CCAL version 2.0 : see CAreadme.txt
// BFC CERTIFY CCW
// !HISTORY 2001-12-23 [technog] fixed quads
// !HISTORY 2002-04-25 [PTadmin] Official Update 2002-02
// !HISTORY 2007-05-18 [PTadmin] Header formatted for Contributor Agreement
// !HISTORY 2008-07-01 [PTadmin] Official Update 2008-01
// !HISTORY 2008-07-07 [guyvivan] Made BFC Compliant (2005-05-15)
// !HISTORY 2010-04-05 [PTadmin] Official Update 2010-01
// BFC INVERTNEXT
// BFC INVERTNEXT
	object {
		LDX_peghole_dot_dat_in_part
		matrix <0,0,1,-1,0,0,0,1,0,10,10,0>
	}
	object {
		LDX_peghole_dot_dat_in_part
		matrix <0,0,1,1,0,0,0,1,0,-10,10,0>
	}
	object {
		LDX_2_dash_4ndis_dot_dat_in_part
		matrix <0,0,8,-1,0,0,0,8,0,-6,10,0>
	}
	object {
		LDX_2_dash_4ndis_dot_dat_in_part
		matrix <0,0,8,1,0,0,0,8,0,6,10,0>
	}
	object {
		LDX_2_dash_4cyli_dot_dat_in_part
		matrix <0,0,8,-12,0,0,0,8,0,6,10,0>
	}
// BFC INVERTNEXT
	object {
		LDX_4_dash_4cyli_dot_dat_in_part
		matrix <0,0,6,-16,0,0,0,6,0,8,10,0>
	}
	object {
		LDX_4_dash_4ndis_dot_dat_in_part
		matrix <0,0,8,-1,0,0,0,8,0,10,10,0>
	}
	object {
		LDX_4_dash_4ndis_dot_dat_in_part
		matrix <0,0,8,1,0,0,0,8,0,-10,10,0>
	}
	#if (LDXStuds)
		object {
			LDX_stud2_dot_dat_in_part
			matrix <1,0,0,0,1,0,0,0,1,0,0,10>
		}
		object {
			LDX_stud2_dot_dat_in_part
			matrix <1,0,0,0,1,0,0,0,1,0,0,-10>
		}
		object {
			LDX_stud3a_dot_dat_in_part
			matrix <1,0,0,0,-1.5,0,0,0,1,0,18,0>
		}
	#end // LDXStuds
	object {
		LDX_1_dash_4cyls2_dot_dat_in_part
		matrix <0,0,4,0,-1.235,0,-4,0,0,0,18,0>
	}
	object {
		LDX_1_dash_4cyls2_dot_dat_in_part
		matrix <0,0,4,0,-1.235,0,4,0,0,0,18,0>
	}
	object {
		LDX_1_dash_4cyls2_dot_dat_in_part
		matrix <0,0,-4,0,-1.235,0,4,0,0,0,18,0>
	}
	object {
		LDX_1_dash_4cyls2_dot_dat_in_part
		matrix <0,0,-4,0,-1.235,0,-4,0,0,0,18,0>
	}
	mesh2 {
		vertex_vectors {
			58,
			<-10,0,-20>, <-10,0,20>, <-10,2,-8>, <-10,2,8>,
			<-10,8,-120>, <-10,8,-20>, <-10,17.33,-120>, <-10,18,-8>,
			<-10,18,8>, <-10,24,-20>, <-10,24,20>, <-6,4,-16>,
			<-6,4,-8>, <-6,4,8>, <-6,4,16>, <-6,8,-140>,
			<-6,10,-8>, <-6,10,8>, <-6,12,-120>, <-6,12,-20>,
			<-6,16,-140>, <-6,17.33,-120>, <-6,18,-8>, <-6,18,8>,
			<-6,24,-20>, <-6,24,-16>, <-6,24,16>, <-2.8,12,-136>,
			<-2.8,16.266001,-136>, <2.8,12,-136>, <2.8,16.266001,-136>, <6,4,-16>,
			<6,4,-8>, <6,4,8>, <6,4,16>, <6,8,-140>,
			<6,10,-8>, <6,10,8>, <6,12,-120>, <6,12,-20>,
			<6,16,-140>, <6,17.33,-120>, <6,18,-8>, <6,18,8>,
			<6,24,-20>, <6,24,-16>, <6,24,16>, <10,0,-20>,
			<10,0,20>, <10,2,-8>, <10,2,8>, <10,8,-120>,
			<10,8,-20>, <10,17.33,-120>, <10,18,-8>, <10,18,8>,
			<10,24,-20>, <10,24,20>
		}
		normal_vectors {
			12,
			<-1,0,0>, <-0.980581,0,-0.196116>, <-0.980581,0,0.196116>, <0,-1,0>,
			<0,-0.99779,0.066453>, <0,-0.997783,0.066552>, <0,0,-1>, <0,0,1>,
			<0,1,0>, <0.980581,0,-0.196116>, <0.980581,0,0.196116>, <1,0,0>
		}
		face_indices {
			94,
			<17, 37, 33>, <17, 33, 13>, <36, 16, 12>, <36, 12, 32>,
			<1, 0, 47>, <1, 47, 48>, <1, 48, 57>, <1, 57, 10>,
			<31, 32, 12>, <31, 12, 11>, <31, 11, 25>, <31, 25, 45>,
			<14, 13, 33>, <14, 33, 34>, <14, 34, 46>, <14, 46, 26>,
			<19, 24, 44>, <19, 44, 39>, <52, 47, 0>, <52, 0, 5>,
			<34, 46, 43>, <34, 43, 33>, <26, 14, 13>, <26, 13, 23>,
			<32, 42, 45>, <32, 45, 31>, <22, 12, 11>, <22, 11, 25>,
			<45, 42, 43>, <45, 43, 46>, <26, 23, 22>, <26, 22, 25>,
			<57, 46, 26>, <57, 26, 10>, <9, 25, 45>, <9, 45, 56>,
			<56, 45, 46>, <56, 46, 57>, <10, 26, 25>, <10, 25, 9>,
			<57, 55, 54>, <57, 54, 56>, <9, 7, 8>, <9, 8, 10>,
			<47, 49, 50>, <47, 50, 48>, <1, 3, 2>, <1, 2, 0>,
			<48, 50, 55>, <48, 55, 57>, <10, 8, 3>, <10, 3, 1>,
			<56, 54, 49>, <56, 49, 47>, <0, 2, 7>, <0, 7, 9>,
			<44, 56, 53>, <44, 53, 41>, <41, 53, 40>, <41, 40, 30>,
			<20, 28, 30>, <20, 30, 40>, <28, 20, 6>, <28, 6, 21>,
			<21, 6, 9>, <21, 9, 24>, <39, 38, 18>, <39, 18, 19>,
			<38, 29, 27>, <38, 27, 18>, <4, 51, 52>, <4, 52, 5>,
			<4, 15, 35>, <4, 35, 51>, <52, 51, 53>, <52, 53, 56>,
			<51, 35, 40>, <51, 40, 53>, <20, 40, 35>, <20, 35, 15>,
			<15, 4, 6>, <15, 6, 20>, <4, 5, 9>, <4, 9, 6>,
			<44, 41, 38>, <44, 38, 39>, <41, 30, 29>, <41, 29, 38>,
			<30, 28, 27>, <30, 27, 29>, <28, 21, 18>, <28, 18, 27>,
			<21, 24, 19>, <21, 19, 18>
		}
		normal_indices {
			94,
			<7, 7, 7>, <7, 7, 7>, <6, 6, 6>, <6, 6, 6>,
			<8, 8, 8>, <8, 8, 8>, <6, 6, 6>, <6, 6, 6>,
			<8, 8, 8>, <8, 8, 8>, <7, 7, 7>, <7, 7, 7>,
			<8, 8, 8>, <8, 8, 8>, <6, 6, 6>, <6, 6, 6>,
			<7, 7, 7>, <7, 7, 7>, <7, 7, 7>, <7, 7, 7>,
			<11, 11, 11>, <11, 11, 11>, <0, 0, 0>, <0, 0, 0>,
			<11, 11, 11>, <11, 11, 11>, <0, 0, 0>, <0, 0, 0>,
			<11, 11, 11>, <11, 11, 11>, <0, 0, 0>, <0, 0, 0>,
			<3, 3, 3>, <3, 3, 3>, <3, 3, 3>, <3, 3, 3>,
			<3, 3, 3>, <3, 3, 3>, <3, 3, 3>, <3, 3, 3>,
			<0, 0, 0>, <0, 0, 0>, <11, 11, 11>, <11, 11, 11>,
			<0, 0, 0>, <0, 0, 0>, <11, 11, 11>, <11, 11, 11>,
			<0, 0, 0>, <0, 0, 0>, <11, 11, 11>, <11, 11, 11>,
			<0, 0, 0>, <0, 0, 0>, <11, 11, 11>, <11, 11, 11>,
			<5, 5, 4>, <5, 4, 4>, <4, 4, 4>, <4, 4, 4>,
			<4, 4, 4>, <4, 4, 4>, <4, 4, 4>, <4, 4, 4>,
			<4, 4, 5>, <4, 5, 5>, <3, 3, 3>, <3, 3, 3>,
			<3, 3, 3>, <3, 3, 3>, <8, 8, 8>, <8, 8, 8>,
			<8, 8, 8>, <8, 8, 8>, <0, 0, 0>, <0, 0, 0>,
			<2, 2, 2>, <2, 2, 2>, <7, 7, 7>, <7, 7, 7>,
			<10, 10, 10>, <10, 10, 10>, <11, 11, 11>, <11, 11, 11>,
			<11, 11, 11>, <11, 11, 11>, <9, 9, 9>, <9, 9, 9>,
			<6, 6, 6>, <6, 6, 6>, <1, 1, 1>, <1, 1, 1>,
			<0, 0, 0>, <0, 0, 0>
		}
	}
}
#end

#include "lg_3666.inc" // Plate  1 x  6

#include "lg_4477.inc" // Plate  1 x 10

#declare LDX_4287a_dot_dat =
#if (LDXQual = 0)
box {
	<-10,-4,-50>,<10,24,10>
}
#else
union {
// Slope Brick 33  3 x  1 Inverted with Notch and Thick Front
// Name: 4287a.dat
// Author: James Jessiman
// !LDRAW_ORG Part UPDATE 2017-01
// !LICENSE Redistributable under CCAL version 2.0 : see CAreadme.txt
// BFC CERTIFY CCW
// !HISTORY 1998-06-20 [PTadmin] Official Update 1998-06
// !HISTORY 2002-09-13 [izanette] Modified with WINDZ for BFC compliance
// !HISTORY 2003-08-01 [PTadmin] Official Update 2003-02
// !HISTORY 2007-07-04 [PTadmin] Header formatted for Contributor Agreement
// !HISTORY 2008-07-01 [PTadmin] Official Update 2008-01
// !HISTORY 2017-07-17 [PTadmin] Renamesd from 4287
// !HISTORY 2017-09-16 [Sirio] Renamed and redrew for the notch
// !HISTORY 2017-12-30 [PTadmin] Official Update 2017-01
// // Studs without blocker
	#if (LDXStuds)
		object {
			lg_knob
			matrix <0,0,-25,-25,0,0,0,-25,0,0,0,0>
		matrix <1,0,0,0,1,0,0,0,1,0,0,0>
		}
		object {
			LDX_stud2a_dot_dat_in_part
			matrix <1,0,0,0,4,0,0,0,1,0,12,-20>
		}
		object {
			LDX_stud2a_dot_dat_in_part
			matrix <1,0,0,0,1.5,0,0,0,1,0,2,-40>
		}
		object {
			LDX_stud2s_dot_dat_in_part
			matrix <0,0,-1,0,3,0,-1,0,0,0,12,-20>
		}
		object {
			LDX_stud2s_dot_dat_in_part
			matrix <0,0,-1,0,3,0,-1,0,0,0,2,-40>
		}
	#end // LDXStuds
// // Underside box
// // Underside surface
// // Internal surface
// // Upper surface
// // Lateral surface
// // Sloped surface and Notch
	mesh2 {
		vertex_vectors {
			50,
			<-10,0,-50>, <-10,0,10>, <-10,4,-50>, <-10,24,-10>,
			<-10,24,10>, <-8,0,-46>, <-8,0,-10>, <-8,2,-46>,
			<-8,20,-10>, <-6,2.75,-6.75>, <-6,2.75,6>, <-6,24,-6.75>,
			<-6,24,6>, <-5.602,20,-18>, <-5.5434,20,-17.7038>, <-5.5434,20.148001,-17.7038>,
			<-4.2426,20,-15.7574>, <-4.2426,21.121,-15.7574>, <-2.2962,20,-14.4566>, <-2.2962,21.771999,-14.4566>,
			<-1.25,2.75,-6.75>, <-1.25,2.75,-6>, <-1.25,24,-6.75>, <-1.25,24,-6>,
			<0,20,-14>, <0,22,-14>, <1.25,2.75,-6.75>, <1.25,2.75,-6>,
			<1.25,24,-6.75>, <1.25,24,-6>, <2.2962,20,-14.4566>, <2.2962,21.771999,-14.4566>,
			<4.2426,20,-15.7574>, <4.2426,21.121,-15.7574>, <5.5434,20,-17.7038>, <5.5434,20.148001,-17.7038>,
			<5.602,20,-18>, <6,2.75,-6.75>, <6,2.75,6>, <6,24,-6.75>,
			<6,24,6>, <8,0,-46>, <8,0,-10>, <8,2,-46>,
			<8,20,-10>, <10,0,-50>, <10,0,10>, <10,4,-50>,
			<10,24,-10>, <10,24,10>
		}
		normal_vectors {
			16,
			<-1,0,0>, <-0.980986,0,0.194079>, <-0.924059,0,0.382249>, <-0.707107,0,0.707107>,
			<-0.382698,0,0.923874>, <0,-1,0>, <-0.00016,-0.894482,0.447103>, <0,0,-1>,
			<0,0,1>, <0,0.894427,-0.447214>, <0,1,0>, <0.382698,0,0.923874>,
			<0.707107,0,0.707107>, <0.924059,0,0.382249>, <0.980986,0,0.194079>, <1,0,0>
		}
		face_indices {
			96,
			<10, 12, 40>, <10, 40, 38>, <10, 9, 11>, <10, 11, 12>,
			<9, 20, 22>, <9, 22, 11>, <27, 21, 23>, <27, 23, 29>,
			<23, 22, 28>, <23, 28, 29>, <21, 20, 22>, <21, 22, 23>,
			<29, 28, 26>, <29, 26, 27>, <39, 28, 26>, <39, 26, 37>,
			<40, 39, 37>, <40, 37, 38>, <10, 21, 20>, <10, 20, 9>,
			<27, 21, 10>, <27, 10, 38>, <37, 26, 27>, <37, 27, 38>,
			<49, 40, 12>, <49, 12, 4>, <4, 12, 11>, <4, 11, 3>,
			<11, 22, 3>, <3, 22, 28>, <3, 28, 48>, <28, 39, 48>,
			<48, 39, 40>, <48, 40, 49>, <6, 8, 44>, <6, 44, 42>,
			<8, 7, 43>, <8, 43, 44>, <41, 43, 7>, <41, 7, 5>,
			<8, 6, 5>, <8, 5, 7>, <44, 43, 41>, <44, 41, 42>,
			<46, 1, 6>, <46, 6, 42>, <1, 0, 5>, <1, 5, 6>,
			<0, 45, 41>, <0, 41, 5>, <45, 46, 42>, <45, 42, 41>,
			<46, 49, 4>, <46, 4, 1>, <3, 2, 1>, <3, 1, 4>,
			<48, 49, 46>, <48, 46, 47>, <0, 1, 2>, <47, 45, 0>,
			<47, 0, 2>, <45, 47, 46>, <3, 48, 25>, <3, 25, 19>,
			<3, 19, 17>, <3, 17, 15>, <3, 15, 13>, <48, 31, 25>,
			<48, 33, 31>, <48, 35, 33>, <48, 36, 35>, <15, 14, 13>,
			<17, 16, 14>, <17, 14, 15>, <19, 18, 16>, <19, 16, 17>,
			<25, 24, 18>, <25, 18, 19>, <31, 30, 24>, <31, 24, 25>,
			<33, 32, 30>, <33, 30, 31>, <35, 34, 32>, <35, 32, 33>,
			<36, 34, 35>, <24, 30, 18>, <16, 18, 30>, <16, 30, 32>,
			<34, 14, 16>, <34, 16, 32>, <36, 13, 14>, <36, 14, 34>,
			<3, 13, 2>, <48, 47, 36>, <13, 36, 47>, <13, 47, 2>
		}
		normal_indices {
			96,
			<8, 8, 8>, <8, 8, 8>, <0, 0, 0>, <0, 0, 0>,
			<7, 7, 7>, <7, 7, 7>, <8, 8, 8>, <8, 8, 8>,
			<10, 10, 10>, <10, 10, 10>, <0, 0, 0>, <0, 0, 0>,
			<15, 15, 15>, <15, 15, 15>, <7, 7, 7>, <7, 7, 7>,
			<15, 15, 15>, <15, 15, 15>, <5, 5, 5>, <5, 5, 5>,
			<5, 5, 5>, <5, 5, 5>, <5, 5, 5>, <5, 5, 5>,
			<5, 5, 5>, <5, 5, 5>, <5, 5, 5>, <5, 5, 5>,
			<5, 5, 5>, <5, 5, 5>, <5, 5, 5>, <5, 5, 5>,
			<5, 5, 5>, <5, 5, 5>, <8, 8, 8>, <8, 8, 8>,
			<9, 9, 9>, <9, 9, 9>, <7, 7, 7>, <7, 7, 7>,
			<0, 0, 0>, <0, 0, 0>, <15, 15, 15>, <15, 15, 15>,
			<10, 10, 10>, <10, 10, 10>, <10, 10, 10>, <10, 10, 10>,
			<10, 10, 10>, <10, 10, 10>, <10, 10, 10>, <10, 10, 10>,
			<7, 7, 7>, <7, 7, 7>, <15, 15, 15>, <15, 15, 15>,
			<0, 0, 0>, <0, 0, 0>, <15, 15, 15>, <8, 8, 8>,
			<8, 8, 8>, <0, 0, 0>, <6, 6, 6>, <6, 6, 6>,
			<6, 6, 6>, <6, 6, 6>, <6, 6, 6>, <6, 6, 6>,
			<6, 6, 6>, <6, 6, 6>, <6, 6, 6>, <2, 2, 1>,
			<3, 3, 2>, <3, 2, 2>, <4, 4, 3>, <4, 3, 3>,
			<8, 8, 4>, <8, 4, 4>, <11, 11, 8>, <11, 8, 8>,
			<12, 12, 11>, <12, 11, 11>, <13, 13, 12>, <13, 12, 12>,
			<14, 13, 13>, <5, 5, 5>, <5, 5, 5>, <5, 5, 5>,
			<5, 5, 5>, <5, 5, 5>, <5, 5, 5>, <5, 5, 5>,
			<6, 6, 6>, <6, 6, 6>, <6, 6, 6>, <6, 6, 6>
		}
	}
}
#end

#declare LDX_strut_dot_dat = union {
// Name: strut.dat
// ROTATION CENTER 0 0 0 1 "Custom"
// ROTATION CONFIG 0 0
	object {
		lg_2730
		matrix <0,0,-25,-25,0,0,0,-25,0,0,0,0>
		LDXSeamMatrix(200, 28, 20, 0, 10, 0)
		matrix <0,0,-1,0,1,0,1,0,0,0,0,80>
		#if (version >= 3.1) material #else texture #end { LDXColor4 }
	}
	object {
		lg_3895
		matrix <0,0,-25,-25,0,0,0,-25,0,0,0,0>
		LDXSeamMatrix(240, 28, 20, 0, 10, 0)
		matrix <0,0,-1,0,1,0,1,0,0,0,0,-140>
		#if (version >= 3.1) material #else texture #end { LDXColor4 }
	}
	object {
		lg_4070
		matrix <0,0,-25,-25,0,0,0,-25,0,0,0,0>
		LDXSeamMatrix(20, 28, 20, 0, 10, 0)
		matrix <1,0,0,0,1,0,0,0,1,0,0,-270>
		#if (version >= 3.1) material #else texture #end { LDXColor4 }
	}
	object {
		lg_6141_clear
		matrix <0,0,-25,-25,0,0,0,-25,0,0,0,0>
		LDXSeamMatrix(20, 12, 20, 0, 2, 0)
		matrix <1,0,0,0,0,1,0,-1,0,0,10,-284>
		#if (version >= 3.1) material #else texture #end { LDXColor47 }
	}
	object {
		LDX_light_dot_dat
		LDXSeamMatrix(8, 8, 8, 0, 0, 0)
		matrix <1,0,0,0,1,0,0,0,1,0,10,-284>
		#if (version >= 3.1) material #else texture #end { LDXColor47 }
	}
	object {
		LDX_2823_dot_dat
		LDXSeamMatrix(20, 28, 160, 0, 10, -60)
		matrix <1,0,0,0,1,0,0,0,1,0,24,100>
		#if (version >= 3.1) material #else texture #end { LDXColor4 }
	}
	object {
		lg_3666
		matrix <0,0,-25,-25,0,0,0,-25,0,0,0,0>
		LDXSeamMatrix(120, 12, 20, 0, 2, 0)
		matrix <0,0,-1,0,1,0,1,0,0,0,24,-180>
		#if (version >= 3.1) material #else texture #end { LDXColor4 }
	}
	object {
		lg_4477
		matrix <0,0,-25,-25,0,0,0,-25,0,0,0,0>
		LDXSeamMatrix(200, 12, 20, 0, 2, 0)
		matrix <0,0,-1,0,1,0,1,0,0,0,24,-20>
		#if (version >= 3.1) material #else texture #end { LDXColor4 }
	}
	object {
		LDX_light_dot_dat
		LDXSeamMatrix(8, 8, 8, 0, 0, 0)
		matrix <1,0,0,0,1,0,0,0,1,0,-8,170>
		#if (version >= 3.1) material #else texture #end { LDXColor36 }
	}
	object {
		LDX_4287a_dot_dat
		LDXSeamMatrix(20, 28, 60, 0, 10, -20)
		matrix <-1,0,0,0,1,0,0,0,-1,0,24,130>
		#if (version >= 3.1) material #else texture #end { LDXColor4 }
	}
}

#declare LDX_2_dash_4disc_dot_dat_in_part = disc // Disc 0.5
{
	<0,0,0>,<0,1,0>,1
	clipped_by
	{
		plane
		{
			<0,0,-1>,0
		}
	}
}

#declare LDX_2_dash_4disc_dot_dat = disc // Disc 0.5
{
	<0,0,0>,<0,1,0>,1
	clipped_by
	{
		plane
		{
			<0,0,-1>,0
		}
	}
}

#declare LDX_2_dash_4cylc_dot_dat_in_part = union {
// Cylinder Closed 0.5
// Name: 2-4cylc.dat
// Author: Alex Taylor [anathema]
// !LDRAW_ORG Primitive UPDATE 2009-02
// !LICENSE Redistributable under CCAL version 2.0 : see CAreadme.txt
// BFC CERTIFY CCW
// !HISTORY 2009-09-03 [PTadmin] Official Update 2009-02
	object {
		LDX_2_dash_4disc_dot_dat_in_part
		matrix <1,0,0,0,1,0,0,0,1,0,0,0>
	}
	object {
		LDX_2_dash_4cyli_dot_dat_in_part
		matrix <1,0,0,0,1,0,0,0,1,0,0,0>
	}
}

#declare LDX_2_dash_4cylo_dot_dat_in_part = union {
// Cylinder Open 0.5
// Name: 2-4cylo.dat
// Author: Max Martin Richter [MMR1988]
// !LDRAW_ORG Primitive UPDATE 2010-03
// !LICENSE Redistributable under CCAL version 2.0 : see CAreadme.txt
// BFC CERTIFY CCW
// !HISTORY 2010-12-31 [PTadmin] Official Update 2010-03
	object {
		LDX_2_dash_4cyli_dot_dat_in_part
		matrix <1,0,0,0,1,0,0,0,1,0,0,0>
	}
}

#declare LDX_4_dash_4con3_dot_dat_in_part = cone // Cone 1
{
	<0,0,0>,4,<0,1,0>,3 open
}

#declare LDX_4_dash_4con3_dot_dat = cone // Cone 1
{
	<0,0,0>,4,<0,1,0>,3 open
}

#declare LDX_4_dash_4con1_dot_dat_in_part = cone // Cone 1
{
	<0,0,0>,2,<0,1,0>,1 open
}

#declare LDX_4_dash_4con1_dot_dat = cone // Cone 1
{
	<0,0,0>,2,<0,1,0>,1 open
}

#declare LDX_4_dash_4con0_dot_dat_in_part = cone // Cone 1
{
	<0,0,0>,1,<0,1,0>,0 open
}

#declare LDX_4_dash_4con0_dot_dat = cone // Cone 1
{
	<0,0,0>,1,<0,1,0>,0 open
}

#declare LDX_bump5000_dot_dat_in_part = union {
// Bump 1.0 x 0.5
// Name: bump5000.dat
// Author: Magnus Forsberg [MagFors]
// !LDRAW_ORG Primitive UPDATE 2010-02
// !LICENSE Redistributable under CCAL version 2.0 : see CAreadme.txt
// !HELP This file creates a bump with radius= 1 and height= 0.5 LDU
// BFC CERTIFY CCW
// !HISTORY 2010-07-05 [PTadmin] Official Update 2010-02
	object {
		LDX_4_dash_4con3_dot_dat_in_part
		matrix <0.25,0,0,0,-0.225,0,0,0,-0.25,0,0,0>
	}
	object {
		LDX_4_dash_4con1_dot_dat_in_part
		matrix <0.375,0,0,0,-0.225,0,0,0,-0.375,0,-0.225,0>
	}
	object {
		LDX_4_dash_4con0_dot_dat_in_part
		matrix <0.375,0,0,0,-0.05,0,0,0,-0.375,0,-0.45,0>
	}
}

#declare LDX_4_dash_4ring7_dot_dat_in_part = disc // Ring 1
{
	<0,0,0>,<0,1,0>,8,7
}

#declare LDX_4_dash_4ring7_dot_dat = disc // Ring 1
{
	<0,0,0>,<0,1,0>,8,7
}

#declare LDX_h2_dot_dat_in_part = union {
// Hinge Plate 3 Fingers
// Name: h2.dat
// Author: James Jessiman
// !LDRAW_ORG Primitive UPDATE 2011-01
// !LICENSE Redistributable under CCAL version 2.0 : see CAreadme.txt
// BFC CERTIFY CCW
// !HISTORY 2002-08-31 [izanette] Modified with WINDZ for BFC compliance
// !HISTORY 2003-08-01 [PTadmin] Official Update 2003-02
// !HISTORY 2007-06-24 [PTadmin] Header formatted for Contributor Agreement
// !HISTORY 2008-07-01 [PTadmin] Official Update 2008-01
// !HISTORY 2010-07-15 [MMR1988] Add bumps and primitives substitution
// !HISTORY 2010-07-16 [MagFors] Closed hairline gap, primitives substitution
// !HISTORY 2011-07-25 [PTadmin] Official Update 2011-01
	object {
		LDX_2_dash_4cylc_dot_dat_in_part
		matrix <4,0,0,0,0,4,0,4,0,0,10,-10>
	}
	object {
		LDX_2_dash_4cylo_dot_dat_in_part
		matrix <4,0,0,0,0,4,0,4,0,0,2,-6>
	}
	object {
		LDX_2_dash_4disc_dot_dat_in_part
		matrix <4,0,0,0,0,-1,0,4,0,0,10,2>
	}
	object {
		LDX_2_dash_4cylc_dot_dat_in_part
		matrix <4,0,0,0,0,4,0,4,0,0,10,-2>
	}
	object {
		LDX_2_dash_4cylo_dot_dat_in_part
		matrix <4,0,0,0,0,4,0,4,0,0,2,2>
	}
	object {
		LDX_2_dash_4cylc_dot_dat_in_part
		matrix <4,0,0,0,0,-4,0,4,0,0,10,10>
	}
	object {
		LDX_bump5000_dot_dat_in_part
		matrix <0,3.5,0,0,0,-1.5,-3.5,0,0,0,10,-6>
	}
	object {
		LDX_4_dash_4ring7_dot_dat_in_part
		matrix <0.5,0,0,0,0,-1,0,0.5,0,0,10,-6>
	}
	object {
		LDX_2_dash_4ndis_dot_dat_in_part
		matrix <-4,0,0,0,0,-1,0,-4,0,0,10,-6>
	}
	object {
		LDX_2_dash_4ndis_dot_dat_in_part
		matrix <4,0,0,0,0,-1,0,4,0,0,2,-6>
	}
	object {
		LDX_bump5000_dot_dat_in_part
		matrix <0,3.5,0,0,0,1.5,-3.5,0,0,0,10,6>
	}
	object {
		LDX_4_dash_4ring7_dot_dat_in_part
		matrix <0.5,0,0,0,0,1,0,0.5,0,0,10,6>
	}
	object {
		LDX_2_dash_4ndis_dot_dat_in_part
		matrix <-4,0,0,0,0,1,0,-4,0,0,10,6>
	}
	object {
		LDX_2_dash_4ndis_dot_dat_in_part
		matrix <4,0,0,0,0,1,0,4,0,0,2,6>
	}
	object {
		LDX_2_dash_4ndis_dot_dat_in_part
		matrix <4,0,0,0,0,-1,0,4,0,0,2,2>
	}
	object {
		LDX_2_dash_4ndis_dot_dat_in_part
		matrix <4,0,0,0,0,1,0,4,0,0,2,-2>
	}
}

#declare LDX_1_dash_4ndis_dot_dat_in_part = disc // Not-Disc 0.25
{
	<0,0,0>,<0,1,0>,2,1
	clipped_by
	{
		plane
		{
			<0,0,-1>,0
		}
		plane
		{
			<-1,0,0>,0
		}
		box
		{
			<-1,-1,-1>,<1,1,1>
		}
	}
}

#declare LDX_1_dash_4ndis_dot_dat = disc // Not-Disc 0.25
{
	<0,0,0>,<0,1,0>,2,1
	clipped_by
	{
		plane
		{
			<0,0,-1>,0
		}
		plane
		{
			<-1,0,0>,0
		}
		box
		{
			<-1,-1,-1>,<1,1,1>
		}
	}
}

#declare LDX_1_dash_8sphe_dot_dat_in_part = sphere // Sphere .125
{
	<0,0,0>,1
	clipped_by
	{
		box
		{
			<0,0,0>,<2,2,2>
		}
	}
}

#declare LDX_1_dash_8sphe_dot_dat = sphere // Sphere .125
{
	<0,0,0>,1
	clipped_by
	{
		box
		{
			<0,0,0>,<2,2,2>
		}
	}
}

#declare LDX_4_dash_8sphe_dot_dat_in_part = union {
// Sphere 0.5
// Name: 4-8sphe.dat
// Author: James Jessiman
// !LDRAW_ORG Primitive UPDATE 2003-02
// !LICENSE Redistributable under CCAL version 2.0 : see CAreadme.txt
// BFC CERTIFY CCW
// !HISTORY 2002-08-31 [izanette] Modified with WINDZ for BFC compliance
// !HISTORY 2003-08-01 [PTadmin] Official Update 2003-02
// !HISTORY 2007-06-24 [PTadmin] Header formatted for Contributor Agreement
// !HISTORY 2008-07-01 [PTadmin] Official Update 2008-01
	object {
		LDX_1_dash_8sphe_dot_dat_in_part
		matrix <1,0,0,0,1,0,0,0,1,0,0,0>
	}
	object {
		LDX_1_dash_8sphe_dot_dat_in_part
		matrix <1,0,0,0,1,0,0,0,-1,0,0,0>
	}
	object {
		LDX_1_dash_8sphe_dot_dat_in_part
		matrix <-1,0,0,0,1,0,0,0,1,0,0,0>
	}
	object {
		LDX_1_dash_8sphe_dot_dat_in_part
		matrix <-1,0,0,0,1,0,0,0,-1,0,0,0>
	}
}

#declare LDX_t04q4000_dot_dat_in_part = torus // Torus 0.25
{
	1,0.40000000596046447754
	clipped_by
	{
		plane
		{
			<0,0,-1>,0
		}
		plane
		{
			<-1,0,0>,0
		}
	}
}

#declare LDX_t04q4000_dot_dat = torus // Torus 0.25
{
	1,0.40000000596046447754
	clipped_by
	{
		plane
		{
			<0,0,-1>,0
		}
		plane
		{
			<-1,0,0>,0
		}
	}
}

#declare LDX_1_dash_4ccyli_dot_dat_in_part = union {
// ~Cylinder Tube 0.25 (deprecated; use t04q4000.dat)
// Name: 1-4ccyli.dat
// Author: James Jessiman
// !LDRAW_ORG Primitive UPDATE 2004-01
// !LICENSE Redistributable under CCAL version 2.0 : see CAreadme.txt
// BFC CERTIFY CCW
// !HISTORY 2002-08-31 [izanette] Modified with WINDZ for BFC compliance
// !HISTORY 2003-11-12 [sbliss] Replaced code with t04q4000.dat ref.
// !HISTORY 2004-03-02 [PTadmin] Official Update 2004-01
// !HISTORY 2007-06-22 [PTadmin] Header formatted for Contributor Agreement
// !HISTORY 2008-07-01 [PTadmin] Official Update 2008-01
	object {
		LDX_t04q4000_dot_dat_in_part
		matrix <2.5,0,0,0,2.5,0,0,0,2.5,0,0,0>
	}
}

#declare LDX_2922a_dot_dat =
#if (LDXQual = 0)
box {
	<-40,0,-12>,<40,26,12>
}
#else
union {
// Hinge Train Pantograph Shoe
// Name: 2922a.dat
// Author: James Jessiman
// !LDRAW_ORG Part UPDATE 2009-03
// !LICENSE Redistributable under CCAL version 2.0 : see CAreadme.txt
// BFC CERTIFY CCW
// !KEYWORDS cantenary, rod, bar, grille
// !HISTORY 1998-07-15 [PTadmin] Official Update 1998-07
// !HISTORY 1999-02-01 [PTadmin] Official Update 1999-01
// !HISTORY 2002-02-18 [PTadmin] Official Update 2002-01
// !HISTORY 2007-05-20 [PTadmin] Header formatted for Contributor Agreement
// !HISTORY 2008-07-01 [PTadmin] Official Update 2008-01
// !HISTORY 2008-07-07 [guyvivan] Made BFC compliant (2005-05-17)
// !HISTORY 2008-07-07 [PTadmin] Renamed from 2881 (2006-11-30)
// !HISTORY 2009-12-29 [PTadmin] Official Update 2009-03
	object {
		LDX_h2_dot_dat_in_part
		matrix <0,0,1,0,1,0,1,0,0,0,12,0>
	}
// BFC INVERTNEXT
// BFC INVERTNEXT
	object {
		LDX_1_dash_4ndis_dot_dat_in_part
		matrix <0,4,0,-1,0,0,0,0,4,10,4,-8>
	}
	object {
		LDX_1_dash_4ndis_dot_dat_in_part
		matrix <0,4,0,1,0,0,0,0,4,-10,4,-8>
	}
	object {
		LDX_1_dash_4ndis_dot_dat_in_part
		matrix <0,4,0,-1,0,0,0,0,-4,10,4,8>
	}
	object {
		LDX_1_dash_4ndis_dot_dat_in_part
		matrix <0,4,0,1,0,0,0,0,-4,-10,4,8>
	}
	object {
		LDX_4_dash_8sphe_dot_dat_in_part
		matrix <4,0,0,0,4,0,0,0,4,36,16,-8>
	}
	object {
		LDX_4_dash_8sphe_dot_dat_in_part
		matrix <4,0,0,0,4,0,0,0,4,-36,16,-8>
	}
	object {
		LDX_4_dash_8sphe_dot_dat_in_part
		matrix <4,0,0,0,4,0,0,0,4,36,16,8>
	}
	object {
		LDX_4_dash_8sphe_dot_dat_in_part
		matrix <4,0,0,0,4,0,0,0,4,-36,16,8>
	}
	object {
		LDX_4_dash_4cyli_dot_dat_in_part
		matrix <4,0,0,0,2,0,0,0,4,36,14,-8>
	}
	object {
		LDX_4_dash_4cyli_dot_dat_in_part
		matrix <4,0,0,0,2,0,0,0,4,-36,14,-8>
	}
	object {
		LDX_4_dash_4cyli_dot_dat_in_part
		matrix <4,0,0,0,2,0,0,0,4,36,14,8>
	}
	object {
		LDX_4_dash_4cyli_dot_dat_in_part
		matrix <4,0,0,0,2,0,0,0,4,-36,14,8>
	}
	object {
		LDX_1_dash_4ccyli_dot_dat_in_part
		matrix <4,0,0,0,0,4,0,-4,0,26,14,-8>
	}
	object {
		LDX_1_dash_4ccyli_dot_dat_in_part
		matrix <-4,0,0,0,0,4,0,-4,0,-26,14,-8>
	}
	object {
		LDX_1_dash_4ccyli_dot_dat_in_part
		matrix <4,0,0,0,0,4,0,-4,0,26,14,8>
	}
	object {
		LDX_1_dash_4ccyli_dot_dat_in_part
		matrix <-4,0,0,0,0,4,0,-4,0,-26,14,8>
	}
	object {
		LDX_4_dash_4cyli_dot_dat_in_part
		matrix <0,4,0,-52,0,0,0,0,4,26,4,-8>
	}
	object {
		LDX_4_dash_4cyli_dot_dat_in_part
		matrix <0,4,0,-52,0,0,0,0,4,26,4,8>
	}
	mesh2 {
		vertex_vectors {
			64,
			<-10,4,-4>, <-10,4,4>, <-10,8,-8>, <-10,8,-4>,
			<-10,8,4>, <-10,8,8>, <-10,12,-4>, <-10,12,4>,
			<-10,14,-4>, <-10,14,4>, <-10,14.01,-4>, <-10,14.01,4>,
			<-10,22,-4>, <-10,22,4>, <-6,8,-4>, <-6,8,-1>,
			<-6,8,1>, <-6,8,4>, <-6,12,-4>, <-6,12,-1>,
			<-6,12,1>, <-6,12,4>, <-6,14,-4>, <-6,14,4>,
			<-6,22,-4>, <-6,22,4>, <-2,14,-4>, <-2,14,4>,
			<-2,18,-4>, <-2,18,4>, <-2,22,-4>, <-2,22,4>,
			<2,14,-4>, <2,14,4>, <2,18,-4>, <2,18,4>,
			<2,22,-4>, <2,22,4>, <6,8,-4>, <6,8,-1>,
			<6,8,1>, <6,8,4>, <6,12,-4>, <6,12,-1>,
			<6,12,1>, <6,12,4>, <6,14,-4>, <6,14,4>,
			<6,22,-4>, <6,22,4>, <10,4,-4>, <10,4,4>,
			<10,8,-8>, <10,8,-4>, <10,8,4>, <10,8,8>,
			<10,12,-4>, <10,12,4>, <10,14,-4>, <10,14,4>,
			<10,14.01,-4>, <10,14.01,4>, <10,22,-4>, <10,22,4>
		}
		normal_vectors {
			6,
			<-1,0,0>, <0,-1,0>, <0,0,-1>, <0,0,1>,
			<0,1,0>, <1,0,0>
		}
		face_indices {
			66,
			<31, 37, 33>, <31, 33, 27>, <36, 30, 26>, <36, 26, 32>,
			<62, 58, 59>, <62, 59, 63>, <59, 47, 49>, <59, 49, 63>,
			<62, 48, 46>, <62, 46, 58>, <12, 8, 9>, <12, 9, 13>,
			<9, 23, 25>, <9, 25, 13>, <12, 24, 22>, <12, 22, 8>,
			<60, 56, 57>, <60, 57, 61>, <10, 6, 56>, <10, 56, 60>,
			<11, 7, 6>, <11, 6, 10>, <61, 57, 7>, <61, 7, 11>,
			<35, 37, 36>, <35, 36, 34>, <28, 30, 31>, <28, 31, 29>,
			<19, 43, 39>, <19, 39, 15>, <19, 18, 42>, <19, 42, 43>,
			<15, 14, 18>, <15, 18, 19>, <43, 42, 38>, <43, 38, 39>,
			<39, 38, 14>, <39, 14, 15>, <20, 44, 40>, <20, 40, 16>,
			<20, 21, 45>, <20, 45, 44>, <16, 17, 21>, <16, 21, 20>,
			<44, 45, 41>, <44, 41, 40>, <41, 40, 16>, <41, 16, 17>,
			<1, 0, 50>, <1, 50, 51>, <56, 53, 38>, <56, 38, 42>,
			<3, 6, 18>, <3, 18, 14>, <54, 57, 45>, <54, 45, 41>,
			<7, 4, 17>, <7, 17, 21>, <57, 51, 50>, <57, 50, 56>,
			<6, 0, 1>, <6, 1, 7>, <53, 52, 2>, <53, 2, 3>,
			<55, 54, 4>, <55, 4, 5>
		}
		normal_indices {
			66,
			<3, 3, 3>, <3, 3, 3>, <2, 2, 2>, <2, 2, 2>,
			<5, 5, 5>, <5, 5, 5>, <3, 3, 3>, <3, 3, 3>,
			<2, 2, 2>, <2, 2, 2>, <5, 5, 5>, <5, 5, 5>,
			<2, 2, 2>, <2, 2, 2>, <3, 3, 3>, <3, 3, 3>,
			<5, 5, 5>, <5, 5, 5>, <2, 2, 2>, <2, 2, 2>,
			<0, 0, 0>, <0, 0, 0>, <3, 3, 3>, <3, 3, 3>,
			<5, 5, 5>, <5, 5, 5>, <0, 0, 0>, <0, 0, 0>,
			<3, 3, 3>, <3, 3, 3>, <4, 4, 4>, <4, 4, 4>,
			<0, 0, 0>, <0, 0, 0>, <5, 5, 5>, <5, 5, 5>,
			<1, 1, 1>, <1, 1, 1>, <3, 3, 3>, <3, 3, 3>,
			<1, 1, 1>, <1, 1, 1>, <5, 5, 5>, <5, 5, 5>,
			<0, 0, 0>, <0, 0, 0>, <1, 1, 1>, <1, 1, 1>,
			<4, 4, 4>, <4, 4, 4>, <3, 3, 3>, <3, 3, 3>,
			<3, 3, 3>, <3, 3, 3>, <2, 2, 2>, <2, 2, 2>,
			<2, 2, 2>, <2, 2, 2>, <0, 0, 0>, <0, 0, 0>,
			<5, 5, 5>, <5, 5, 5>, <1, 1, 1>, <1, 1, 1>,
			<1, 1, 1>, <1, 1, 1>
		}
	}
}
#end

#include "lg_3958.inc" // Plate  6 x  6

#include "lg_43722.inc" // Wing  2 x  3 Right

#include "lg_43723.inc" // Wing  2 x  3 Left

#include "lg_42023.inc" // Slope Brick Curved  6 x  1 Inverted

#include "lg_3004.inc" // Brick  1 x  2

#declare LDX_outer_dot_dat = union {
// Name: outer.dat
// ROTATION CENTER 0 0 0 1 "Custom"
// ROTATION CONFIG 0 0
	object {
		LDX_strut_dot_dat
		matrix <1,0,0,0,1,0,0,0,1,-70,8,0>
		#if (version >= 3.1) material #else texture #end { LDXColor4 }
	}
	object {
		LDX_strut_dot_dat
		matrix <1,0,0,0,1,0,0,0,1,30,8,0>
		#if (version >= 3.1) material #else texture #end { LDXColor4 }
	}
	object {
		lg_3666
		matrix <0,0,-25,-25,0,0,0,-25,0,0,0,0>
		LDXSeamMatrix(120, 12, 20, 0, 2, 0)
		matrix <1,0,0,0,1,0,0,0,1,-20,32,-270>
		#if (version >= 3.1) material #else texture #end { LDXColor4 }
	}
	object {
		lg_3937
		matrix <0,0,-25,-25,0,0,0,-25,0,0,0,0>
		LDXSeamMatrix(40, 22, 20, 0, 13, 0)
		matrix <1,0,0,0,1,0,0,0,1,-20,8,-270>
		#if (version >= 3.1) material #else texture #end { LDXColor4 }
	}
	object {
		LDX_2922a_dot_dat
		LDXSeamMatrix(80, 26, 24, 0, 13, 0)
		matrix <1,0,0,0,0,1,0,-1,0,-20,20,-290>
		#if (version >= 3.1) material #else texture #end { LDXColor0 }
	}
	object {
		lg_3666
		matrix <0,0,-25,-25,0,0,0,-25,0,0,0,0>
		LDXSeamMatrix(120, 12, 20, 0, 2, 0)
		matrix <1,0,0,0,1,0,0,0,1,-20,32,-250>
		#if (version >= 3.1) material #else texture #end { LDXColor4 }
	}
	object {
		lg_3958
		matrix <0,0,-25,-25,0,0,0,-25,0,0,0,0>
		LDXSeamMatrix(120, 12, 120, 0, 2, 0)
		matrix <1,0,0,0,1,0,0,0,1,-20,0,-220>
		#if (version >= 3.1) material #else texture #end { LDXColor4 }
	}
	object {
		lg_43722
		matrix <0,0,-25,-25,0,0,0,-25,0,0,0,0>
		LDXSeamMatrix(40, 12, 60, 0, 2, 0)
		matrix <-1,0,0,0,1,0,0,0,-1,-60,0,-130>
		#if (version >= 3.1) material #else texture #end { LDXColor4 }
	}
	object {
		lg_43723
		matrix <0,0,-25,-25,0,0,0,-25,0,0,0,0>
		LDXSeamMatrix(40, 12, 60, 0, 2, 0)
		matrix <-1,0,0,0,1,0,0,0,-1,20,0,-130>
		#if (version >= 3.1) material #else texture #end { LDXColor4 }
	}
	object {
		lg_2555
		matrix <0,0,-25,-25,0,0,0,-25,0,0,0,0>
		LDXSeamMatrix(20, 18, 20, 0, -1, 0)
		matrix <0,0,1,0,1,0,-1,0,0,-30,-8,-270>
		#if (version >= 3.1) material #else texture #end { LDXColor4 }
	}
	object {
		lg_2555
		matrix <0,0,-25,-25,0,0,0,-25,0,0,0,0>
		LDXSeamMatrix(20, 18, 20, 0, -1, 0)
		matrix <0,0,1,0,1,0,-1,0,0,-10,-8,-270>
		#if (version >= 3.1) material #else texture #end { LDXColor4 }
	}
	object {
		lg_3023
		matrix <0,0,-25,-25,0,0,0,-25,0,0,0,0>
		LDXSeamMatrix(40, 12, 20, 0, 2, 0)
		matrix <1,0,0,0,1,0,0,0,1,-20,8,-250>
		#if (version >= 3.1) material #else texture #end { LDXColor4 }
	}
	object {
		lg_42023
		matrix <0,0,-25,-25,0,0,0,-25,0,0,0,0>
		LDXSeamMatrix(20, 28, 120, 0, 10, -40)
		matrix <0,-1,0,1,0,0,0,0,1,40,18,-10>
		#if (version >= 3.1) material #else texture #end { LDXColor4 }
	}
	object {
		lg_3004
		matrix <0,0,-25,-25,0,0,0,-25,0,0,0,0>
		LDXSeamMatrix(40, 28, 20, 0, 10, 0)
		matrix <0,0,1,1,0,0,0,1,0,40,18,30>
		#if (version >= 3.1) material #else texture #end { LDXColor4 }
	}
	object {
		lg_3666
		matrix <0,0,-25,-25,0,0,0,-25,0,0,0,0>
		LDXSeamMatrix(120, 12, 20, 0, 2, 0)
		matrix <0,0,1,1,0,0,0,1,0,40,18,110>
		#if (version >= 3.1) material #else texture #end { LDXColor4 }
	}
	object {
		lg_42023
		matrix <0,0,-25,-25,0,0,0,-25,0,0,0,0>
		LDXSeamMatrix(20, 28, 120, 0, 10, -40)
		matrix <0,1,0,-1,0,0,0,0,1,-80,18,-10>
		#if (version >= 3.1) material #else texture #end { LDXColor4 }
	}
	object {
		lg_3004
		matrix <0,0,-25,-25,0,0,0,-25,0,0,0,0>
		LDXSeamMatrix(40, 28, 20, 0, 10, 0)
		matrix <0,0,-1,-1,0,0,0,1,0,-80,18,30>
		#if (version >= 3.1) material #else texture #end { LDXColor4 }
	}
	object {
		lg_3666
		matrix <0,0,-25,-25,0,0,0,-25,0,0,0,0>
		LDXSeamMatrix(120, 12, 20, 0, 2, 0)
		matrix <0,0,-1,-1,0,0,0,1,0,-80,18,110>
		#if (version >= 3.1) material #else texture #end { LDXColor4 }
	}
}

#declare LDX_4_dash_4rin19_dot_dat_in_part = disc // Ring 1
{
	<0,0,0>,<0,1,0>,20,19
}

#declare LDX_4_dash_4rin19_dot_dat = disc // Ring 1
{
	<0,0,0>,<0,1,0>,20,19
}

#declare LDX_87695_dot_dat =
#if (LDXQual = 0)
box {
	<-28.4,-21.200001,-4>,<28.4,4,4>
}
#else
union {
// Animal Cattlehorns
// Name: 87695.dat
// Author: Franklin W. Cain [fwcain]
// !LDRAW_ORG Part UPDATE 2015-02
// !LICENSE Redistributable under CCAL version 2.0 : see CAreadme.txt
// BFC CERTIFY CCW
// !HISTORY 2000-09-30 [PTadmin] Official Update 2000-02
// !HISTORY 2002-10-20 [cwdee] 4-4con12.dat >> 4-4con1.dat
// !HISTORY 2002-11-30 [PTadmin] Official Update 2002-05
// !HISTORY 2007-07-09 [PTadmin] Header formatted for Contributor Agreement
// !HISTORY 2008-07-01 [PTadmin] Official Update 2008-01
// !HISTORY 2012-03-25 [Steffen] BFCed
// !HISTORY 2012-03-28 [Philo] Rebuilt smoother
// !HISTORY 2012-08-09 [PTadmin] Official Update 2012-02
// !HISTORY 2015-10-22 [PTadmin] Renamed from 6029a
// !HISTORY 2015-12-30 [PTadmin] Official Update 2015-02
	object {
		LDX_4_dash_4cyli_dot_dat_in_part
		matrix <0,4,0,-14,0,0,0,0,4,7,0,0>
	}
	object {
		LDX_4_dash_4rin19_dot_dat_in_part
		matrix <0,0.2,0,-1,0,0,0,0,-0.2,7,0,0>
	}
	object {
		LDX_4_dash_4rin19_dot_dat_in_part
		matrix <0,0.2,0,1,0,0,0,0,0.2,-7,0,0>
	}
	mesh2 {
		vertex_vectors {
			290,
			<-28.4,-20.4,0>, <-28.4,-19.200001,0>, <-28.360001,-20.43,-0.26>, <-28.360001,-20.43,0.26>,
			<-28.299999,-19.27,-0.62>, <-28.299999,-19.27,0.62>, <-28.24,-20.52,-0.48>, <-28.24,-20.52,0.48>,
			<-28.1,-20.9,0>, <-28.059999,-20.65,-0.63>, <-28.059999,-20.65,0.63>, <-28,-19.459999,-1.15>,
			<-28,-19.459999,1.15>, <-27.85,-20.799999,-0.68>, <-27.85,-20.799999,0.68>, <-27.639999,-20.950001,-0.63>,
			<-27.639999,-20.950001,0.63>, <-27.57,-19.76,-1.5>, <-27.57,-19.76,1.5>, <-27.5,-17.5,0>,
			<-27.459999,-21.08,-0.48>, <-27.459999,-21.08,0.48>, <-27.35,-17.59,-0.89>, <-27.35,-17.59,0.89>,
			<-27.34,-21.17,-0.26>, <-27.34,-21.17,0.26>, <-27.299999,-21.200001,0>, <-27.049999,-20.1,-1.62>,
			<-27.049999,-20.1,1.62>, <-26.91,-17.85,-1.65>, <-26.91,-17.85,1.65>, <-26.530001,-20.440001,-1.5>,
			<-26.530001,-20.440001,1.5>, <-26.27,-18.24,-2.15>, <-26.27,-18.24,2.15>, <-26.1,-20.74,-1.15>,
			<-26.1,-20.74,1.15>, <-25.799999,-20.93,-0.62>, <-25.799999,-20.93,0.62>, <-25.700001,-21,0>,
			<-25.700001,-13.4,0>, <-25.5,-18.700001,-2.33>, <-25.5,-18.700001,2.33>, <-25.469999,-13.5,-1.25>,
			<-25.469999,-13.5,1.25>, <-24.82,-13.78,-2.31>, <-24.82,-13.78,2.31>, <-24.73,-19.16,-2.15>,
			<-24.73,-19.16,2.15>, <-24.5,-9.3,0>, <-24.25,-9.38,-1.34>, <-24.25,-9.38,1.34>,
			<-24.09,-19.549999,-1.65>, <-24.09,-19.549999,1.65>, <-23.85,-14.2,-3.02>, <-23.85,-14.2,3.02>,
			<-23.65,-19.809999,-0.89>, <-23.65,-19.809999,0.89>, <-23.52,-9.59,-2.47>, <-23.52,-9.59,2.47>,
			<-23.5,-19.9,0>, <-22.700001,-14.7,-3.27>, <-22.700001,-14.7,3.27>, <-22.6,-4.4,0>,
			<-22.43,-9.92,-3.23>, <-22.43,-9.92,3.23>, <-22.35,-4.53,-1.41>, <-22.35,-4.53,1.41>,
			<-21.629999,-4.88,-2.61>, <-21.629999,-4.88,2.61>, <-21.549999,-15.2,-3.02>, <-21.549999,-15.2,3.02>,
			<-21.15,-10.3,-3.5>, <-21.15,-10.3,3.5>, <-20.58,-15.62,-2.31>, <-20.58,-15.62,2.31>,
			<-20.559999,-5.42,-3.41>, <-20.559999,-5.42,3.41>, <-19.93,-15.9,-1.25>, <-19.93,-15.9,1.25>,
			<-19.870001,-10.68,-3.23>, <-19.870001,-10.68,3.23>, <-19.700001,-16,0>, <-19.299999,-6.05,-3.69>,
			<-19.299999,-6.05,3.69>, <-18.780001,-11.01,-2.47>, <-18.780001,-11.01,2.47>, <-18.049999,-11.22,-1.34>,
			<-18.049999,-11.22,1.34>, <-18.040001,-6.68,-3.41>, <-18.040001,-6.68,3.41>, <-17.799999,-11.3,0>,
			<-17.799999,0.7,0>, <-17.629999,0.47,-1.45>, <-17.629999,0.47,1.45>, <-17.139999,-0.19,-2.68>,
			<-17.139999,-0.19,2.68>, <-16.969999,-7.22,-2.61>, <-16.969999,-7.22,2.61>, <-16.41,-1.18,-3.5>,
			<-16.41,-1.18,3.5>, <-16.25,-7.57,-1.41>, <-16.25,-7.57,1.41>, <-16,-7.7,0>,
			<-15.55,-2.35,-3.79>, <-15.55,-2.35,3.79>, <-14.69,-3.52,-3.5>, <-14.69,-3.52,3.5>,
			<-13.96,-4.51,-2.68>, <-13.96,-4.51,2.68>, <-13.47,-5.17,-1.45>, <-13.47,-5.17,1.45>,
			<-13.3,-5.4,0>, <-11.7,3.4,0>, <-11.66,3.11,-1.47>, <-11.66,3.11,1.47>,
			<-11.55,2.29,-2.71>, <-11.55,2.29,2.71>, <-11.39,1.05,-3.54>, <-11.39,1.05,3.54>,
			<-11.2,-0.4,-3.83>, <-11.2,-0.4,3.83>, <-11.01,-1.85,-3.54>, <-11.01,-1.85,3.54>,
			<-10.85,-3.09,-2.71>, <-10.85,-3.09,2.71>, <-10.74,-3.91,-1.47>, <-10.74,-3.91,1.47>,
			<-10.7,-4.2,0>, <-7,-3.8,0>, <-7,-3.51,-1.45>, <-7,-3.51,1.45>,
			<-7,-2.69,-2.69>, <-7,-2.69,2.69>, <-7,-1.45,-3.51>, <-7,-1.45,3.51>,
			<-7,0,-3.8>, <-7,0,3.8>, <-7,1.45,-3.51>, <-7,1.45,3.51>,
			<-7,2.69,-2.69>, <-7,2.69,2.69>, <-7,3.51,-1.45>, <-7,3.51,1.45>,
			<-7,3.8,0>, <7,-3.8,0>, <7,-3.51,-1.45>, <7,-3.51,1.45>,
			<7,-2.69,-2.69>, <7,-2.69,2.69>, <7,-1.45,-3.51>, <7,-1.45,3.51>,
			<7,0,-3.8>, <7,0,3.8>, <7,1.45,-3.51>, <7,1.45,3.51>,
			<7,2.69,-2.69>, <7,2.69,2.69>, <7,3.51,-1.45>, <7,3.51,1.45>,
			<7,3.8,0>, <10.7,-4.2,0>, <10.74,-3.91,-1.47>, <10.74,-3.91,1.47>,
			<10.85,-3.09,-2.71>, <10.85,-3.09,2.71>, <11.01,-1.85,-3.54>, <11.01,-1.85,3.54>,
			<11.2,-0.4,-3.83>, <11.2,-0.4,3.83>, <11.39,1.05,-3.54>, <11.39,1.05,3.54>,
			<11.55,2.29,-2.71>, <11.55,2.29,2.71>, <11.66,3.11,-1.47>, <11.66,3.11,1.47>,
			<11.7,3.4,0>, <13.3,-5.4,0>, <13.47,-5.17,-1.45>, <13.47,-5.17,1.45>,
			<13.96,-4.51,-2.68>, <13.96,-4.51,2.68>, <14.69,-3.52,-3.5>, <14.69,-3.52,3.5>,
			<15.55,-2.35,-3.79>, <15.55,-2.35,3.79>, <16,-7.7,0>, <16.25,-7.57,-1.41>,
			<16.25,-7.57,1.41>, <16.41,-1.18,-3.5>, <16.41,-1.18,3.5>, <16.969999,-7.22,-2.61>,
			<16.969999,-7.22,2.61>, <17.139999,-0.19,-2.68>, <17.139999,-0.19,2.68>, <17.629999,0.47,-1.45>,
			<17.629999,0.47,1.45>, <17.799999,-11.3,0>, <17.799999,0.7,0>, <18.040001,-6.68,-3.41>,
			<18.040001,-6.68,3.41>, <18.049999,-11.22,-1.34>, <18.049999,-11.22,1.34>, <18.780001,-11.01,-2.47>,
			<18.780001,-11.01,2.47>, <19.299999,-6.05,-3.69>, <19.299999,-6.05,3.69>, <19.700001,-16,0>,
			<19.870001,-10.68,-3.23>, <19.870001,-10.68,3.23>, <19.93,-15.9,-1.25>, <19.93,-15.9,1.25>,
			<20.559999,-5.42,-3.41>, <20.559999,-5.42,3.41>, <20.58,-15.62,-2.31>, <20.58,-15.62,2.31>,
			<21.15,-10.3,-3.5>, <21.15,-10.3,3.5>, <21.549999,-15.2,-3.02>, <21.549999,-15.2,3.02>,
			<21.629999,-4.88,-2.61>, <21.629999,-4.88,2.61>, <22.35,-4.53,-1.41>, <22.35,-4.53,1.41>,
			<22.43,-9.92,-3.23>, <22.43,-9.92,3.23>, <22.6,-4.4,0>, <22.700001,-14.7,-3.27>,
			<22.700001,-14.7,3.27>, <23.5,-19.9,0>, <23.52,-9.59,-2.47>, <23.52,-9.59,2.47>,
			<23.65,-19.809999,-0.89>, <23.65,-19.809999,0.89>, <23.85,-14.2,-3.02>, <23.85,-14.2,3.02>,
			<24.09,-19.549999,-1.65>, <24.09,-19.549999,1.65>, <24.25,-9.38,-1.34>, <24.25,-9.38,1.34>,
			<24.5,-9.3,0>, <24.73,-19.16,-2.15>, <24.73,-19.16,2.15>, <24.82,-13.78,-2.31>,
			<24.82,-13.78,2.31>, <25.469999,-13.5,-1.25>, <25.469999,-13.5,1.25>, <25.5,-18.700001,-2.33>,
			<25.5,-18.700001,2.33>, <25.700001,-21,0>, <25.700001,-13.4,0>, <25.799999,-20.93,-0.62>,
			<25.799999,-20.93,0.62>, <26.1,-20.74,-1.15>, <26.1,-20.74,1.15>, <26.27,-18.24,-2.15>,
			<26.27,-18.24,2.15>, <26.530001,-20.440001,-1.5>, <26.530001,-20.440001,1.5>, <26.91,-17.85,-1.65>,
			<26.91,-17.85,1.65>, <27.049999,-20.1,-1.62>, <27.049999,-20.1,1.62>, <27.299999,-21.200001,0>,
			<27.34,-21.17,-0.26>, <27.34,-21.17,0.26>, <27.35,-17.59,-0.89>, <27.35,-17.59,0.89>,
			<27.459999,-21.08,-0.48>, <27.459999,-21.08,0.48>, <27.5,-17.5,0>, <27.57,-19.76,-1.5>,
			<27.57,-19.76,1.5>, <27.639999,-20.950001,-0.63>, <27.639999,-20.950001,0.63>, <27.85,-20.799999,-0.68>,
			<27.85,-20.799999,0.68>, <28,-19.459999,-1.15>, <28,-19.459999,1.15>, <28.059999,-20.65,-0.63>,
			<28.059999,-20.65,0.63>, <28.1,-20.9,0>, <28.24,-20.52,-0.48>, <28.24,-20.52,0.48>,
			<28.299999,-19.27,-0.62>, <28.299999,-19.27,0.62>, <28.360001,-20.43,-0.26>, <28.360001,-20.43,0.26>,
			<28.4,-20.4,0>, <28.4,-19.200001,0>
		}
		normal_vectors {
			338,
			<-0.998682,-0.000537,-0.051312>, <-0.998551,-0.00128,0.05379>, <-0.966223,0.030756,-0.255867>, <-0.964612,0.031891,0.261739>,
			<-0.946913,-0.32149,-0.000068>, <-0.939639,-0.342168,0.000133>, <-0.931013,0.060096,0.360006>, <-0.930293,0.062586,-0.361438>,
			<-0.911546,0.411199,-0.000107>, <-0.900183,-0.435512,0.000851>, <-0.881839,-0.46701,0.065279>, <-0.875898,-0.294823,-0.381944>,
			<-0.876386,-0.292953,0.382265>, <-0.872895,-0.303717,-0.381851>, <-0.870157,-0.310392,0.382732>, <-0.857494,0.514495,0>,
			<-0.851737,0.395838,-0.343301>, <-0.845771,-0.533546,-0.000242>, <-0.846359,-0.42735,-0.31788>, <-0.842551,-0.38051,-0.381207>,
			<-0.842095,0.381836,0.380889>, <-0.840147,-0.385957,0.381038>, <-0.837116,0.547025,0.000673>, <-0.831195,0.537806,-0.140991>,
			<-0.831195,0.537806,0.140991>, <-0.813836,0.16745,0.556445>, <-0.809474,-0.387483,0.441146>, <-0.809295,0.172145,0.561612>,
			<-0.809229,0.172712,-0.561533>, <-0.80488,0.175987,-0.566742>, <-0.787846,0.615872,0.000583>, <-0.784365,-0.488487,0.382299>,
			<-0.779337,-0.495504,-0.383549>, <-0.77095,0.511568,-0.379386>, <-0.760389,0.552678,0.34111>, <-0.758099,0.600516,-0.254296>,
			<-0.758099,0.600516,0.254296>, <-0.732401,0.564753,0.380319>, <-0.724478,0.575337,-0.37963>, <-0.707296,-0.27607,-0.650782>,
			<-0.681502,-0.202595,-0.703214>, <-0.676627,-0.232032,-0.698811>, <-0.675973,-0.214616,0.704982>, <-0.674305,-0.213114,0.707032>,
			<-0.673228,-0.217458,-0.706736>, <-0.670768,-0.24021,0.701691>, <-0.656349,0.686049,-0.313916>, <-0.656349,0.686049,0.313916>,
			<-0.64956,0.319727,0.689816>, <-0.64009,-0.20539,0.740338>, <-0.640455,0.304951,-0.704856>, <-0.612977,0.295816,0.732634>,
			<-0.613052,0.790042,0>, <-0.604486,-0.365475,0.707831>, <-0.595939,-0.378725,-0.708113>, <-0.589343,0.80788,0.0024>,
			<-0.579568,0.145431,-0.801842>, <-0.577899,-0.816109,-0.000147>, <-0.57338,0.423895,0.701105>, <-0.569894,0.387975,-0.724359>,
			<-0.567555,0.392409,0.723807>, <-0.563976,0.431048,0.704364>, <-0.553175,0.770524,-0.316686>, <-0.553175,0.770524,0.316686>,
			<-0.550883,0.449809,-0.702993>, <-0.539175,-0.75127,0.380634>, <-0.538914,0.765588,-0.35135>, <-0.539217,0.842166,0.000874>,
			<-0.536089,0.431746,-0.725399>, <-0.53375,0.767393,0.355273>, <-0.530848,-0.757396,-0.3802>, <-0.500219,0.779204,0.377653>,
			<-0.498547,0.781365,-0.375393>, <-0.466601,0.840973,-0.273948>, <-0.466601,0.840973,0.273948>, <-0.456581,-0.044792,0.888553>,
			<-0.422725,0.520898,0.741599>, <-0.421671,-0.076688,-0.9035>, <-0.419848,-0.571311,0.705217>, <-0.403733,-0.582369,-0.705582>,
			<-0.4039,0.891737,-0.204132>, <-0.4039,0.891737,0.204132>, <-0.402006,-0.004609,-0.915625>, <-0.399993,0.048437,0.915238>,
			<-0.38686,0.59799,0.701959>, <-0.386583,0.641876,-0.66223>, <-0.379495,0.603158,-0.701558>, <-0.37879,0.647308,0.661446>,
			<-0.373765,-0.095502,0.922594>, <-0.371768,-0.100196,-0.922903>, <-0.369537,-0.052594,0.927726>, <-0.365868,0.924174,-0.109739>,
			<-0.365868,0.924174,0.109739>, <-0.351124,0.936329,0>, <-0.348537,0.581066,-0.735449>, <-0.343157,0.181009,0.921672>,
			<-0.340519,0.186524,-0.921551>, <-0.335957,-0.181154,0.924292>, <-0.324081,-0.199648,-0.924723>, <-0.304756,0.238426,0.922105>,
			<-0.297812,0.953823,-0.039117>, <-0.293131,0.271889,-0.916598>, <-0.29033,0.259887,-0.92096>, <-0.288857,0.957358,0.005299>,
			<-0.285701,0.392765,-0.874134>, <-0.284947,0.284005,0.915503>, <-0.285259,0.473382,0.833389>, <-0.280404,-0.959093,-0.03892>,
			<-0.267526,0.869021,-0.416212>, <-0.254083,-0.872855,-0.416612>, <-0.250396,0.890317,0.380313>, <-0.249835,0.922666,-0.293716>,
			<-0.248436,0.920282,0.302259>, <-0.237752,-0.302756,0.922937>, <-0.233757,-0.894558,0.380951>, <-0.217194,-0.316104,-0.923529>,
			<-0.213812,0.703044,0.678243>, <-0.21197,0.324356,0.92188>, <-0.196804,0.333853,-0.921852>, <-0.19415,0.680806,0.706264>,
			<-0.184794,-0.682624,0.707019>, <-0.178322,0.68618,-0.705237>, <-0.170799,-0.687253,-0.706053>, <-0.164977,0.216062,0.962341>,
			<-0.154242,0.453714,-0.877697>, <-0.153008,0.754118,-0.638667>, <-0.142706,0.459524,0.876626>, <-0.131856,0.81793,-0.560004>,
			<-0.125016,0.810567,0.572147>, <-0.123719,0.991344,0.043948>, <-0.110325,0.079526,-0.990709>, <-0.10946,0.368312,0.923236>,
			<-0.106637,-0.367755,0.923788>, <-0.107482,0.994207,-0.000105>, <-0.100406,0.91983,0.379252>, <-0.099089,0.969666,-0.22345>,
			<-0.096923,0.892518,-0.440474>, <-0.091151,0.236339,-0.967386>, <-0.089481,0.372393,-0.923751>, <-0.087916,-0.371176,-0.924391>,
			<-0.0848,-0.996398,0.000194>, <-0.082152,0.749292,0.657125>, <-0.077499,-0.921846,0.379729>, <-0.075451,-0.894452,-0.440753>,
			<-0.072755,0.951095,0.300209>, <-0.071874,0.655435,-0.751824>, <-0.062539,-0.75071,0.657665>, <-0.060282,0.637812,0.767829>,
			<-0.054331,-0.656658,-0.752229>, <-0.052669,0.645187,-0.762207>, <-0.050585,0.013307,0.998631>, <-0.05067,0.439417,0.896853>,
			<-0.047864,0.849013,0.5262>, <-0.03844,0.318457,-0.947158>, <-0.034078,-0.440307,0.8972>, <-0.027269,-0.031121,-0.999144>,
			<-0.02279,-0.319295,-0.947381>, <-0.016205,0.045507,0.998833>, <-0.01386,0.039933,-0.999106>, <-0.013768,0.065394,0.997765>,
			<-0.010727,0.003148,0.999938>, <-0.010244,-0.001343,0.999947>, <-0.004337,0.890429,-0.455102>, <-0.001009,-0.066045,-0.997816>,
			<0.000397,0.002379,0.999997>, <0.001009,-0.066045,0.997816>, <0.001239,0.037355,0.999301>, <0.004337,0.890429,-0.455102>,
			<0.006468,0.01673,0.999839>, <0.008134,0.137744,0.990435>, <0.010244,-0.001343,-0.999947>, <0.010727,0.003148,-0.999938>,
			<0.012136,0.037214,-0.999234>, <0.01386,0.039933,0.999106>, <0.013767,0.065394,-0.997765>, <0.016205,0.045507,-0.998833>,
			<0.02089,0.01526,-0.999665>, <0.021555,0.03778,-0.999054>, <0.02279,-0.319295,0.947381>, <0.034078,-0.440307,-0.8972>,
			<0.03844,0.318457,0.947158>, <0.046687,0.101713,-0.993718>, <0.047864,0.849013,0.5262>, <0.05067,0.439417,-0.896853>,
			<0.052669,0.645187,-0.762207>, <0.054331,-0.656657,0.752229>, <0.055743,0.115999,0.991684>, <0.060282,0.637812,0.767829>,
			<0.062539,-0.75071,-0.657665>, <0.071874,0.655435,0.751824>, <0.075451,-0.894452,0.440753>, <0.077499,-0.921846,-0.379729>,
			<0.082152,0.749292,-0.657125>, <0.084484,0.815679,-0.572302>, <0.0848,-0.996398,-0.000194>, <0.08573,0.962221,0.258422>,
			<0.086501,0.959138,-0.269393>, <0.087916,-0.371176,0.924391>, <0.089481,0.372393,0.923751>, <0.096923,0.892518,0.440474>,
			<0.100406,0.91983,-0.379252>, <0.106637,-0.367755,-0.923788>, <0.107482,0.994207,0.000105>, <0.10946,0.368312,-0.923236>,
			<0.123719,0.991344,-0.043948>, <0.128433,0.220636,-0.966863>, <0.140234,0.228674,0.96335>, <0.142706,0.459524,0.876626>,
			<0.153008,0.754118,-0.638667>, <0.154242,0.453714,-0.877697>, <0.159713,0.812285,0.560968>, <0.169925,0.276227,-0.945951>,
			<0.170799,-0.687253,0.706053>, <0.178322,0.68618,0.705237>, <0.184794,-0.682624,-0.707019>, <0.19415,0.680806,-0.706264>,
			<0.213812,0.703044,0.678243>, <0.217194,-0.316104,0.923529>, <0.21915,0.922659,-0.317291>, <0.233757,-0.894558,-0.380951>,
			<0.234693,0.251279,-0.939031>, <0.237752,-0.302756,-0.922937>, <0.237999,0.380628,0.893576>, <0.248838,0.21251,0.944944>,
			<0.250396,0.890317,-0.380313>, <0.254113,-0.872881,0.416539>, <0.267513,0.869043,0.416175>, <0.280376,-0.959098,0.038998>,
			<0.280387,0.433246,-0.856552>, <0.288857,0.957358,-0.005299>, <0.291205,0.420342,0.859367>, <0.290572,0.917868,0.270345>,
			<0.297825,0.953817,0.039159>, <0.324081,-0.199648,0.924723>, <0.335957,-0.181154,-0.924292>, <0.340519,0.186524,0.921551>,
			<0.34222,0.303492,0.889257>, <0.343157,0.181009,-0.921672>, <0.345072,0.284831,-0.894314>, <0.348537,0.581066,-0.735449>,
			<0.351124,0.936329,0>, <0.358064,0.456576,-0.81445>, <0.357599,0.559713,-0.747559>, <0.365868,0.924174,-0.109739>,
			<0.365868,0.924174,0.109739>, <0.371768,-0.100196,0.922903>, <0.373765,-0.095502,-0.922594>, <0.381352,0.611952,0.692882>,
			<0.384558,0.698089,-0.603976>, <0.387947,-0.069856,-0.91903>, <0.39493,-0.055484,0.917034>, <0.403733,-0.582369,0.705582>,
			<0.4039,0.891737,-0.204132>, <0.4039,0.891737,0.204132>, <0.407132,0.638903,0.652722>, <0.419848,-0.571311,-0.705217>,
			<0.421253,-0.027086,-0.906539>, <0.422725,0.520898,0.741599>, <0.428778,-0.015661,0.903274>, <0.466601,0.840973,-0.273948>,
			<0.466601,0.840973,0.273948>, <0.482333,0.805875,0.343395>, <0.487368,-0.041728,0.872199>, <0.495138,0.830263,-0.255931>,
			<0.504417,0.35859,0.785479>, <0.510933,0.761042,-0.399704>, <0.530848,-0.757396,0.3802>, <0.533561,0.398407,-0.746046>,
			<0.534546,0.191422,-0.823176>, <0.539175,-0.75127,-0.380635>, <0.539217,0.842166,-0.000874>, <0.548066,0.74618,0.377939>,
			<0.553294,0.649589,-0.52144>, <0.553175,0.770524,-0.316686>, <0.553175,0.770524,0.316686>, <0.563047,0.638917,0.524179>,
			<0.567555,0.392409,0.723807>, <0.569894,0.387975,-0.724359>, <0.577899,-0.816109,0.000147>, <0.582325,0.461157,0.669501>,
			<0.582397,0.604171,-0.543868>, <0.589343,0.80788,-0.0024>, <0.592686,0.468657,-0.655045>, <0.595939,-0.378726,0.708113>,
			<0.604486,-0.365475,-0.707831>, <0.613052,0.790042,0>, <0.640089,-0.20539,-0.740338>, <0.640455,0.304951,0.704856>,
			<0.641738,0.300955,-0.705407>, <0.64956,0.319727,0.689816>, <0.656349,0.686049,-0.313916>, <0.656349,0.686049,0.313916>,
			<0.670768,-0.24021,-0.701691>, <0.673228,-0.217458,0.706736>, <0.674305,-0.213114,-0.707032>, <0.675973,-0.214616,-0.704982>,
			<0.676627,-0.232032,0.698811>, <0.681502,-0.202595,0.703214>, <0.701461,0.584732,0.407481>, <0.707296,-0.27607,0.650782>,
			<0.73343,0.565093,-0.377823>, <0.758099,0.600516,-0.254296>, <0.758099,0.600516,0.254296>, <0.777696,0.19962,0.596105>,
			<0.779337,-0.495504,0.383549>, <0.78131,0.195261,-0.592813>, <0.784365,-0.488487,-0.382299>, <0.787846,0.615872,-0.000583>,
			<0.803529,0.487167,0.342066>, <0.807634,0.513995,-0.289027>, <0.809474,-0.387483,-0.441146>, <0.831195,0.537806,-0.140991>,
			<0.831195,0.537806,0.140991>, <0.835834,0.146742,-0.529007>, <0.837116,0.547025,-0.000673>, <0.838137,0.146252,0.525487>,
			<0.840147,-0.385957,-0.381038>, <0.840975,0.384414,0.380772>, <0.842095,0.381836,-0.380889>, <0.842551,-0.38051,0.381207>,
			<0.845771,-0.533546,0.000242>, <0.846359,-0.42735,0.31788>, <0.857494,0.514495,0>, <0.870157,-0.310392,-0.382732>,
			<0.872895,-0.303717,0.381851>, <0.875898,-0.294823,0.381944>, <0.876386,-0.292953,-0.382265>, <0.881839,-0.46701,-0.065279>,
			<0.900183,-0.435512,-0.000851>, <0.911546,0.411199,0.000107>, <0.930293,0.062586,0.361438>, <0.931013,0.060096,-0.360006>,
			<0.939639,-0.342168,-0.000133>, <0.946913,-0.32149,0.000068>, <0.964612,0.031891,-0.261739>, <0.966223,0.030756,0.255867>,
			<0.998551,-0.00128,-0.05379>, <0.998682,-0.000537,0.051312>
		}
		face_indices {
			544,
			<274, 281, 276>, <269, 281, 274>, <265, 281, 269>, <263, 281, 265>,
			<264, 281, 263>, <268, 281, 264>, <273, 281, 268>, <275, 281, 273>,
			<279, 281, 275>, <282, 281, 279>, <286, 281, 282>, <288, 281, 286>,
			<287, 281, 288>, <283, 281, 287>, <280, 281, 283>, <276, 281, 280>,
			<258, 276, 262>, <274, 276, 258>, <274, 258, 254>, <274, 254, 269>,
			<252, 269, 254>, <265, 269, 252>, <252, 249, 263>, <252, 263, 265>,
			<249, 251, 264>, <249, 264, 263>, <253, 264, 251>, <268, 264, 253>,
			<268, 253, 257>, <268, 257, 273>, <261, 273, 257>, <275, 273, 261>,
			<271, 275, 261>, <279, 275, 271>, <279, 271, 277>, <279, 277, 282>,
			<277, 284, 286>, <277, 286, 282>, <284, 289, 288>, <284, 288, 286>,
			<289, 285, 287>, <289, 287, 288>, <285, 278, 283>, <285, 283, 287>,
			<283, 278, 272>, <283, 272, 280>, <262, 280, 272>, <276, 280, 262>,
			<242, 262, 248>, <258, 262, 242>, <237, 258, 242>, <254, 258, 237>,
			<237, 233, 252>, <237, 252, 254>, <233, 229, 249>, <233, 249, 252>,
			<229, 232, 251>, <229, 251, 249>, <232, 236, 253>, <232, 253, 251>,
			<241, 253, 236>, <257, 253, 241>, <247, 257, 241>, <261, 257, 247>,
			<247, 255, 271>, <247, 271, 261>, <255, 259, 277>, <255, 277, 271>,
			<259, 266, 284>, <259, 284, 277>, <266, 270, 289>, <266, 289, 284>,
			<270, 267, 285>, <270, 285, 289>, <267, 260, 278>, <267, 278, 285>,
			<260, 256, 272>, <260, 272, 278>, <256, 248, 262>, <256, 262, 272>,
			<219, 248, 228>, <242, 248, 219>, <215, 242, 219>, <237, 242, 215>,
			<211, 237, 215>, <233, 237, 211>, <211, 207, 229>, <211, 229, 233>,
			<207, 210, 232>, <207, 232, 229>, <214, 232, 210>, <236, 232, 214>,
			<218, 236, 214>, <241, 236, 218>, <227, 241, 218>, <247, 241, 227>,
			<234, 247, 227>, <255, 247, 234>, <234, 243, 259>, <234, 259, 255>,
			<243, 245, 266>, <243, 266, 259>, <245, 250, 270>, <245, 270, 266>,
			<250, 246, 267>, <250, 267, 270>, <246, 244, 260>, <246, 260, 267>,
			<244, 235, 256>, <244, 256, 260>, <228, 256, 235>, <248, 256, 228>,
			<217, 209, 219>, <217, 219, 228>, <209, 204, 215>, <209, 215, 219>,
			<204, 202, 211>, <204, 211, 215>, <202, 197, 207>, <202, 207, 211>,
			<197, 201, 210>, <197, 210, 207>, <201, 203, 214>, <201, 214, 210>,
			<203, 208, 218>, <203, 218, 214>, <208, 216, 227>, <208, 227, 218>,
			<216, 224, 234>, <216, 234, 227>, <224, 230, 243>, <224, 243, 234>,
			<230, 238, 245>, <230, 245, 243>, <238, 240, 250>, <238, 250, 245>,
			<240, 239, 246>, <240, 246, 250>, <239, 231, 244>, <239, 244, 246>,
			<231, 225, 235>, <231, 235, 244>, <225, 217, 228>, <225, 228, 235>,
			<206, 200, 209>, <206, 209, 217>, <200, 192, 204>, <200, 204, 209>,
			<192, 188, 202>, <192, 202, 204>, <188, 186, 197>, <188, 197, 202>,
			<186, 187, 201>, <186, 201, 197>, <187, 191, 203>, <187, 203, 201>,
			<191, 199, 208>, <191, 208, 203>, <199, 205, 216>, <199, 216, 208>,
			<205, 212, 224>, <205, 224, 216>, <212, 220, 230>, <212, 230, 224>,
			<220, 222, 238>, <220, 238, 230>, <222, 226, 240>, <222, 240, 238>,
			<226, 223, 239>, <226, 239, 240>, <223, 221, 231>, <223, 231, 239>,
			<221, 213, 225>, <221, 225, 231>, <213, 206, 217>, <213, 217, 225>,
			<183, 206, 185>, <200, 206, 183>, <181, 200, 183>, <192, 200, 181>,
			<179, 192, 181>, <188, 192, 179>, <179, 177, 186>, <179, 186, 188>,
			<177, 178, 187>, <177, 187, 186>, <180, 187, 178>, <191, 187, 180>,
			<182, 191, 180>, <199, 191, 182>, <184, 199, 182>, <205, 199, 184>,
			<184, 189, 212>, <184, 212, 205>, <189, 193, 220>, <189, 220, 212>,
			<193, 195, 222>, <193, 222, 220>, <195, 198, 226>, <195, 226, 222>,
			<198, 196, 223>, <198, 223, 226>, <196, 194, 221>, <196, 221, 223>,
			<194, 190, 213>, <194, 213, 221>, <190, 185, 206>, <190, 206, 213>,
			<169, 167, 183>, <169, 183, 185>, <167, 165, 181>, <167, 181, 183>,
			<165, 163, 179>, <165, 179, 181>, <163, 161, 177>, <163, 177, 179>,
			<161, 162, 178>, <161, 178, 177>, <162, 164, 180>, <162, 180, 178>,
			<164, 166, 182>, <164, 182, 180>, <166, 168, 184>, <166, 184, 182>,
			<168, 170, 189>, <168, 189, 184>, <170, 172, 193>, <170, 193, 189>,
			<172, 174, 195>, <172, 195, 193>, <174, 176, 198>, <174, 198, 195>,
			<176, 175, 196>, <176, 196, 198>, <175, 173, 194>, <175, 194, 196>,
			<173, 171, 190>, <173, 190, 194>, <171, 169, 185>, <171, 185, 190>,
			<153, 151, 167>, <153, 167, 169>, <151, 149, 165>, <151, 165, 167>,
			<149, 147, 163>, <149, 163, 165>, <147, 145, 161>, <147, 161, 163>,
			<145, 146, 162>, <145, 162, 161>, <146, 148, 164>, <146, 164, 162>,
			<148, 150, 166>, <148, 166, 164>, <150, 152, 168>, <150, 168, 166>,
			<152, 154, 170>, <152, 170, 168>, <154, 156, 172>, <154, 172, 170>,
			<156, 158, 174>, <156, 174, 172>, <158, 160, 176>, <158, 176, 174>,
			<160, 159, 175>, <160, 175, 176>, <159, 157, 173>, <159, 173, 175>,
			<157, 155, 171>, <157, 171, 173>, <155, 153, 169>, <155, 169, 171>,
			<16, 14, 8>, <21, 16, 8>, <25, 21, 8>, <26, 25, 8>,
			<24, 26, 8>, <20, 24, 8>, <15, 20, 8>, <13, 15, 8>,
			<9, 13, 8>, <6, 9, 8>, <2, 6, 8>, <0, 2, 8>,
			<3, 0, 8>, <7, 3, 8>, <10, 7, 8>, <14, 10, 8>,
			<32, 28, 14>, <16, 32, 14>, <36, 32, 16>, <36, 16, 21>,
			<38, 36, 21>, <25, 38, 21>, <25, 26, 39>, <25, 39, 38>,
			<26, 24, 37>, <26, 37, 39>, <35, 37, 24>, <20, 35, 24>,
			<31, 35, 20>, <31, 20, 15>, <27, 31, 15>, <13, 27, 15>,
			<17, 27, 13>, <9, 17, 13>, <11, 17, 9>, <11, 9, 6>,
			<6, 2, 4>, <6, 4, 11>, <2, 0, 1>, <2, 1, 4>,
			<0, 3, 5>, <0, 5, 1>, <3, 7, 12>, <3, 12, 5>,
			<18, 12, 7>, <18, 7, 10>, <28, 18, 10>, <14, 28, 10>,
			<48, 42, 28>, <32, 48, 28>, <53, 48, 32>, <36, 53, 32>,
			<36, 38, 57>, <36, 57, 53>, <38, 39, 60>, <38, 60, 57>,
			<39, 37, 56>, <39, 56, 60>, <37, 35, 52>, <37, 52, 56>,
			<47, 52, 35>, <31, 47, 35>, <41, 47, 31>, <27, 41, 31>,
			<27, 17, 33>, <27, 33, 41>, <17, 11, 29>, <17, 29, 33>,
			<11, 4, 22>, <11, 22, 29>, <4, 1, 19>, <4, 19, 22>,
			<1, 5, 23>, <1, 23, 19>, <5, 12, 30>, <5, 30, 23>,
			<12, 18, 34>, <12, 34, 30>, <18, 28, 42>, <18, 42, 34>,
			<71, 62, 42>, <48, 71, 42>, <75, 71, 48>, <53, 75, 48>,
			<79, 75, 53>, <57, 79, 53>, <57, 60, 82>, <57, 82, 79>,
			<60, 56, 78>, <60, 78, 82>, <74, 78, 56>, <52, 74, 56>,
			<70, 74, 52>, <47, 70, 52>, <61, 70, 47>, <41, 61, 47>,
			<54, 61, 41>, <33, 54, 41>, <33, 29, 45>, <33, 45, 54>,
			<29, 22, 43>, <29, 43, 45>, <22, 19, 40>, <22, 40, 43>,
			<19, 23, 44>, <19, 44, 40>, <23, 30, 46>, <23, 46, 44>,
			<30, 34, 55>, <30, 55, 46>, <62, 55, 34>, <42, 62, 34>,
			<62, 71, 81>, <62, 81, 73>, <71, 75, 86>, <71, 86, 81>,
			<75, 79, 88>, <75, 88, 86>, <79, 82, 91>, <79, 91, 88>,
			<82, 78, 87>, <82, 87, 91>, <78, 74, 85>, <78, 85, 87>,
			<74, 70, 80>, <74, 80, 85>, <70, 61, 72>, <70, 72, 80>,
			<61, 54, 64>, <61, 64, 72>, <54, 45, 58>, <54, 58, 64>,
			<45, 43, 50>, <45, 50, 58>, <43, 40, 49>, <43, 49, 50>,
			<40, 44, 51>, <40, 51, 49>, <44, 46, 59>, <44, 59, 51>,
			<46, 55, 65>, <46, 65, 59>, <55, 62, 73>, <55, 73, 65>,
			<73, 81, 90>, <73, 90, 84>, <81, 86, 98>, <81, 98, 90>,
			<86, 88, 102>, <86, 102, 98>, <88, 91, 103>, <88, 103, 102>,
			<91, 87, 101>, <91, 101, 103>, <87, 85, 97>, <87, 97, 101>,
			<85, 80, 89>, <85, 89, 97>, <80, 72, 83>, <80, 83, 89>,
			<72, 64, 76>, <72, 76, 83>, <64, 58, 68>, <64, 68, 76>,
			<58, 50, 66>, <58, 66, 68>, <50, 49, 63>, <50, 63, 66>,
			<49, 51, 67>, <49, 67, 63>, <51, 59, 69>, <51, 69, 67>,
			<59, 65, 77>, <59, 77, 69>, <65, 73, 84>, <65, 84, 77>,
			<107, 105, 84>, <90, 107, 84>, <109, 107, 90>, <98, 109, 90>,
			<111, 109, 98>, <102, 111, 98>, <102, 103, 112>, <102, 112, 111>,
			<103, 101, 110>, <103, 110, 112>, <108, 110, 101>, <97, 108, 101>,
			<106, 108, 97>, <89, 106, 97>, <104, 106, 89>, <83, 104, 89>,
			<83, 76, 99>, <83, 99, 104>, <76, 68, 95>, <76, 95, 99>,
			<68, 66, 93>, <68, 93, 95>, <66, 63, 92>, <66, 92, 93>,
			<63, 67, 94>, <63, 94, 92>, <67, 69, 96>, <67, 96, 94>,
			<69, 77, 100>, <69, 100, 96>, <77, 84, 105>, <77, 105, 100>,
			<105, 107, 123>, <105, 123, 121>, <107, 109, 125>, <107, 125, 123>,
			<109, 111, 127>, <109, 127, 125>, <111, 112, 128>, <111, 128, 127>,
			<112, 110, 126>, <112, 126, 128>, <110, 108, 124>, <110, 124, 126>,
			<108, 106, 122>, <108, 122, 124>, <106, 104, 120>, <106, 120, 122>,
			<104, 99, 118>, <104, 118, 120>, <99, 95, 116>, <99, 116, 118>,
			<95, 93, 114>, <95, 114, 116>, <93, 92, 113>, <93, 113, 114>,
			<92, 94, 115>, <92, 115, 113>, <94, 96, 117>, <94, 117, 115>,
			<96, 100, 119>, <96, 119, 117>, <100, 105, 121>, <100, 121, 119>,
			<121, 123, 135>, <121, 135, 137>, <123, 125, 133>, <123, 133, 135>,
			<125, 127, 131>, <125, 131, 133>, <127, 128, 129>, <127, 129, 131>,
			<128, 126, 130>, <128, 130, 129>, <126, 124, 132>, <126, 132, 130>,
			<124, 122, 134>, <124, 134, 132>, <122, 120, 136>, <122, 136, 134>,
			<120, 118, 138>, <120, 138, 136>, <118, 116, 140>, <118, 140, 138>,
			<116, 114, 142>, <116, 142, 140>, <114, 113, 144>, <114, 144, 142>,
			<113, 115, 143>, <113, 143, 144>, <115, 117, 141>, <115, 141, 143>,
			<117, 119, 139>, <117, 139, 141>, <119, 121, 137>, <119, 137, 139>
		}
		normal_indices {
			544,
			<73, 52, 62>, <80, 52, 73>, <91, 52, 80>, <93, 52, 91>,
			<92, 52, 93>, <81, 52, 92>, <74, 52, 81>, <63, 52, 74>,
			<47, 52, 63>, <36, 52, 47>, <24, 52, 36>, <15, 52, 24>,
			<23, 52, 15>, <35, 52, 23>, <46, 52, 35>, <62, 52, 46>,
			<149, 94, 104>, <125, 94, 149>, <125, 149, 193>, <125, 193, 167>,
			<218, 167, 193>, <196, 167, 218>, <218, 229, 204>, <218, 204, 196>,
			<229, 231, 195>, <229, 195, 204>, <210, 195, 231>, <152, 195, 210>,
			<152, 210, 147>, <152, 147, 116>, <106, 116, 147>, <76, 116, 106>,
			<60, 76, 106>, <48, 76, 60>, <48, 60, 27>, <48, 27, 25>,
			<27, 3, 6>, <27, 6, 25>, <3, 0, 1>, <3, 1, 6>,
			<0, 7, 2>, <0, 2, 1>, <7, 29, 28>, <7, 28, 2>,
			<28, 29, 56>, <28, 56, 59>, <104, 59, 56>, <94, 59, 104>,
			<209, 104, 137>, <149, 104, 209>, <248, 149, 209>, <193, 149, 248>,
			<248, 263, 218>, <248, 218, 193>, <263, 281, 229>, <263, 229, 218>,
			<281, 271, 231>, <281, 231, 229>, <271, 247, 210>, <271, 210, 231>,
			<207, 210, 247>, <147, 210, 207>, <123, 147, 207>, <106, 147, 123>,
			<123, 75, 83>, <123, 83, 106>, <75, 45, 49>, <75, 49, 83>,
			<45, 21, 26>, <45, 26, 49>, <21, 9, 10>, <21, 10, 26>,
			<9, 19, 18>, <9, 18, 10>, <19, 41, 39>, <19, 39, 18>,
			<41, 82, 56>, <41, 56, 39>, <82, 137, 104>, <82, 104, 56>,
			<220, 137, 130>, <209, 137, 220>, <267, 209, 220>, <241, 209, 267>,
			<300, 248, 267>, <280, 248, 300>, <300, 314, 281>, <300, 281, 263>,
			<314, 308, 271>, <314, 271, 281>, <279, 271, 308>, <247, 271, 279>,
			<236, 247, 279>, <207, 247, 236>, <169, 207, 236>, <123, 207, 169>,
			<90, 123, 169>, <75, 123, 90>, <90, 42, 45>, <90, 45, 75>,
			<42, 14, 21>, <42, 21, 45>, <14, 5, 9>, <14, 9, 21>,
			<5, 13, 19>, <5, 19, 9>, <13, 40, 41>, <13, 41, 19>,
			<40, 77, 82>, <40, 82, 41>, <130, 82, 77>, <137, 82, 130>,
			<158, 237, 220>, <158, 220, 130>, <237, 288, 267>, <237, 267, 220>,
			<288, 318, 300>, <288, 300, 267>, <318, 329, 314>, <318, 314, 300>,
			<329, 317, 308>, <329, 308, 314>, <317, 287, 279>, <317, 279, 308>,
			<287, 235, 236>, <287, 236, 279>, <235, 157, 169>, <235, 169, 236>,
			<157, 88, 90>, <157, 90, 169>, <88, 43, 42>, <88, 42, 90>,
			<43, 12, 14>, <43, 14, 42>, <12, 4, 5>, <12, 5, 14>,
			<4, 11, 13>, <4, 13, 5>, <11, 44, 40>, <11, 40, 13>,
			<44, 89, 77>, <44, 77, 40>, <89, 158, 130>, <89, 130, 77>,
			<172, 238, 237>, <172, 237, 158>, <238, 282, 288>, <238, 288, 237>,
			<282, 309, 318>, <282, 318, 288>, <309, 307, 329>, <309, 329, 318>,
			<307, 298, 317>, <307, 317, 329>, <298, 264, 287>, <298, 287, 317>,
			<264, 223, 235>, <264, 235, 287>, <223, 150, 157>, <223, 157, 235>,
			<150, 97, 88>, <150, 88, 157>, <97, 53, 43>, <97, 43, 88>,
			<53, 31, 12>, <53, 12, 43>, <31, 17, 4>, <31, 4, 12>,
			<17, 32, 11>, <17, 11, 4>, <32, 54, 44>, <32, 44, 11>,
			<54, 98, 89>, <54, 89, 44>, <98, 172, 158>, <98, 158, 89>,
			<211, 172, 155>, <238, 172, 211>, <242, 238, 211>, <282, 238, 242>,
			<265, 282, 242>, <272, 282, 265>, <265, 270, 307>, <265, 307, 309>,
			<270, 261, 298>, <270, 298, 307>, <254, 298, 261>, <275, 298, 254>,
			<222, 264, 254>, <223, 264, 222>, <166, 223, 222>, <150, 223, 166>,
			<166, 113, 97>, <166, 97, 150>, <113, 78, 53>, <113, 53, 97>,
			<78, 65, 31>, <78, 31, 53>, <65, 57, 17>, <65, 17, 31>,
			<57, 70, 32>, <57, 32, 17>, <70, 79, 54>, <70, 54, 32>,
			<79, 115, 98>, <79, 98, 54>, <115, 155, 172>, <115, 172, 98>,
			<170, 203, 211>, <170, 211, 155>, <203, 215, 242>, <203, 242, 211>,
			<215, 224, 265>, <215, 265, 242>, <224, 232, 270>, <224, 270, 265>,
			<232, 226, 261>, <232, 261, 270>, <226, 213, 254>, <226, 254, 261>,
			<213, 198, 222>, <213, 222, 254>, <198, 160, 166>, <198, 166, 222>,
			<160, 132, 113>, <160, 113, 166>, <132, 120, 78>, <132, 78, 113>,
			<120, 114, 65>, <120, 65, 78>, <114, 107, 57>, <114, 57, 65>,
			<107, 109, 70>, <107, 70, 57>, <109, 122, 79>, <109, 79, 70>,
			<122, 139, 115>, <122, 115, 79>, <139, 170, 155>, <139, 155, 115>,
			<174, 183, 203>, <174, 203, 170>, <183, 192, 215>, <183, 215, 203>,
			<192, 200, 224>, <192, 224, 215>, <200, 202, 232>, <200, 232, 224>,
			<202, 199, 226>, <202, 226, 232>, <199, 189, 213>, <199, 213, 226>,
			<189, 180, 198>, <189, 198, 213>, <180, 165, 160>, <180, 160, 198>,
			<165, 154, 132>, <165, 132, 160>, <154, 146, 120>, <154, 120, 132>,
			<146, 142, 114>, <146, 114, 120>, <142, 140, 107>, <142, 107, 114>,
			<140, 143, 109>, <140, 109, 107>, <143, 148, 122>, <143, 122, 109>,
			<148, 156, 139>, <148, 139, 122>, <156, 174, 170>, <156, 170, 139>,
			<259, 273, 285>, <252, 259, 285>, <243, 252, 285>, <240, 243, 285>,
			<244, 240, 285>, <253, 244, 285>, <260, 253, 285>, <274, 260, 285>,
			<291, 274, 285>, <302, 291, 285>, <312, 302, 285>, <322, 312, 285>,
			<311, 322, 285>, <301, 311, 285>, <290, 301, 285>, <273, 290, 285>,
			<184, 228, 239>, <208, 184, 239>, <127, 184, 208>, <127, 208, 162>,
			<111, 127, 162>, <135, 111, 162>, <135, 129, 103>, <135, 103, 111>,
			<129, 144, 112>, <129, 112, 103>, <128, 112, 144>, <182, 128, 144>,
			<187, 128, 182>, <187, 182, 216>, <230, 187, 216>, <257, 230, 216>,
			<276, 230, 257>, <289, 276, 257>, <303, 276, 289>, <303, 289, 315>,
			<315, 335, 330>, <315, 330, 303>, <335, 336, 337>, <335, 337, 330>,
			<336, 331, 334>, <336, 334, 337>, <331, 305, 313>, <331, 313, 334>,
			<268, 313, 305>, <268, 305, 277>, <228, 268, 277>, <239, 228, 277>,
			<124, 205, 228>, <184, 124, 228>, <85, 124, 184>, <127, 85, 184>,
			<127, 111, 66>, <127, 66, 85>, <111, 103, 55>, <111, 55, 66>,
			<103, 112, 69>, <103, 69, 55>, <112, 128, 87>, <112, 87, 69>,
			<126, 87, 128>, <187, 126, 128>, <206, 126, 187>, <230, 206, 187>,
			<230, 262, 258>, <230, 258, 206>, <262, 299, 296>, <262, 296, 258>,
			<299, 321, 319>, <299, 319, 296>, <321, 327, 328>, <321, 328, 319>,
			<327, 310, 316>, <327, 316, 328>, <310, 286, 292>, <310, 292, 316>,
			<286, 268, 256>, <286, 256, 292>, <268, 228, 205>, <268, 205, 256>,
			<101, 181, 205>, <124, 101, 205>, <68, 101, 124>, <85, 68, 124>,
			<33, 68, 85>, <66, 33, 85>, <66, 55, 22>, <66, 22, 33>,
			<55, 69, 34>, <55, 34, 22>, <58, 34, 69>, <87, 58, 69>,
			<105, 58, 87>, <126, 105, 87>, <186, 105, 126>, <206, 186, 126>,
			<250, 186, 206>, <258, 250, 206>, <258, 296, 297>, <258, 297, 250>,
			<296, 319, 324>, <296, 324, 297>, <319, 328, 332>, <319, 332, 324>,
			<328, 316, 323>, <328, 323, 332>, <316, 292, 295>, <316, 295, 323>,
			<292, 256, 249>, <292, 249, 295>, <181, 249, 256>, <205, 181, 256>,
			<181, 101, 96>, <181, 96, 175>, <101, 68, 50>, <101, 50, 96>,
			<68, 33, 16>, <68, 16, 50>, <33, 22, 8>, <33, 8, 16>,
			<22, 34, 20>, <22, 20, 8>, <34, 58, 51>, <34, 51, 20>,
			<58, 105, 95>, <58, 95, 51>, <105, 186, 173>, <105, 173, 95>,
			<186, 250, 245>, <186, 245, 173>, <250, 297, 293>, <250, 293, 245>,
			<297, 324, 325>, <297, 325, 293>, <324, 332, 333>, <324, 333, 325>,
			<332, 323, 326>, <332, 326, 333>, <323, 295, 294>, <323, 294, 326>,
			<295, 249, 246>, <295, 246, 294>, <249, 181, 175>, <249, 175, 246>,
			<175, 96, 102>, <175, 102, 177>, <96, 50, 64>, <96, 64, 102>,
			<50, 16, 38>, <50, 38, 64>, <16, 8, 30>, <16, 30, 38>,
			<8, 20, 37>, <8, 37, 30>, <20, 51, 61>, <20, 61, 37>,
			<51, 95, 99>, <51, 99, 61>, <95, 173, 168>, <95, 168, 99>,
			<173, 245, 233>, <173, 233, 168>, <245, 293, 283>, <245, 283, 233>,
			<293, 325, 304>, <293, 304, 283>, <325, 333, 320>, <325, 320, 304>,
			<333, 326, 306>, <333, 306, 320>, <326, 294, 284>, <326, 284, 306>,
			<294, 246, 234>, <294, 234, 284>, <246, 175, 177>, <246, 177, 234>,
			<118, 176, 177>, <102, 118, 177>, <86, 118, 102>, <64, 86, 102>,
			<72, 86, 64>, <38, 72, 64>, <38, 30, 67>, <38, 67, 72>,
			<30, 37, 71>, <30, 71, 67>, <84, 71, 37>, <61, 84, 37>,
			<117, 84, 61>, <99, 117, 61>, <164, 117, 99>, <168, 164, 99>,
			<168, 233, 217>, <168, 217, 164>, <233, 283, 251>, <233, 251, 217>,
			<283, 304, 266>, <283, 266, 251>, <304, 320, 278>, <304, 278, 266>,
			<320, 306, 269>, <320, 269, 278>, <306, 284, 255>, <306, 255, 269>,
			<284, 234, 221>, <284, 221, 255>, <234, 177, 176>, <234, 176, 221>,
			<176, 118, 138>, <176, 138, 171>, <118, 86, 121>, <118, 121, 138>,
			<86, 72, 108>, <86, 108, 121>, <72, 67, 100>, <72, 100, 108>,
			<67, 71, 110>, <67, 110, 100>, <71, 84, 119>, <71, 119, 110>,
			<84, 117, 131>, <84, 131, 119>, <117, 164, 161>, <117, 161, 131>,
			<164, 217, 197>, <164, 197, 161>, <217, 251, 212>, <217, 212, 197>,
			<251, 266, 225>, <251, 225, 212>, <266, 278, 227>, <266, 227, 225>,
			<278, 269, 219>, <278, 219, 227>, <269, 255, 214>, <269, 214, 219>,
			<255, 221, 201>, <255, 201, 214>, <221, 176, 171>, <221, 171, 201>,
			<171, 138, 153>, <171, 153, 163>, <138, 121, 145>, <138, 145, 153>,
			<121, 108, 136>, <121, 136, 145>, <108, 100, 133>, <108, 133, 136>,
			<100, 110, 134>, <100, 134, 133>, <110, 119, 141>, <110, 141, 134>,
			<119, 131, 151>, <119, 151, 141>, <131, 161, 159>, <131, 159, 151>,
			<161, 197, 178>, <161, 178, 159>, <197, 212, 185>, <197, 185, 178>,
			<212, 225, 190>, <212, 190, 185>, <225, 227, 194>, <225, 194, 190>,
			<227, 219, 191>, <227, 191, 194>, <219, 214, 188>, <219, 188, 191>,
			<214, 201, 179>, <214, 179, 188>, <201, 171, 163>, <201, 163, 179>
		}
	}
}
#end

#include "lg_4162.inc" // Tile  1 x  8

#include "lg_3021.inc" // Plate  2 x  3

#include "lg_44301.inc" // Hinge Plate  1 x  2 Locking with Single Finger on End Vertical

#include "lg_41770.inc" // Wing  2 x  4 Left

#include "lg_41769.inc" // Wing  2 x  4 Right

#declare LDX_spoiler_dot_dat = union {
// Name: spoiler.dat
// ROTATION CENTER 0 0 0 1 "Custom"
// ROTATION CONFIG 0 0
	object {
		lg_4477
		matrix <0,0,-25,-25,0,0,0,-25,0,0,0,0>
		LDXSeamMatrix(200, 12, 20, 0, 2, 0)
		matrix <1,0,0,0,1,0,0,0,1,10,0,40>
		#if (version >= 3.1) material #else texture #end { LDXColor4 }
	}
	object {
		lg_4865a
		matrix <0,0,-25,-25,0,0,0,-25,0,0,0,0>
		LDXSeamMatrix(40, 24, 20, 0, 12, 0)
		matrix <0,0,-1,0,1,0,1,0,0,100,-24,30>
		#if (version >= 3.1) material #else texture #end { LDXColor0 }
	}
	object {
		lg_4865a
		matrix <0,0,-25,-25,0,0,0,-25,0,0,0,0>
		LDXSeamMatrix(40, 24, 20, 0, 12, 0)
		matrix <0,0,1,0,1,0,-1,0,0,-80,-24,30>
		#if (version >= 3.1) material #else texture #end { LDXColor0 }
	}
	object {
		lg_4162
		matrix <0,0,-25,-25,0,0,0,-25,0,0,0,0>
		LDXSeamMatrix(160, 8, 20, 0, 4, 0)
		matrix <-1,0,0,0,1,0,0,0,-1,10,-8,40>
		#if (version >= 3.1) material #else texture #end { LDXColor0 }
	}
	object {
		lg_3022
		matrix <0,0,-25,-25,0,0,0,-25,0,0,0,0>
		LDXSeamMatrix(40, 12, 40, 0, 2, 0)
		matrix <1,0,0,0,1,0,0,0,1,10,0,10>
		#if (version >= 3.1) material #else texture #end { LDXColor4 }
	}
	object {
		lg_3021
		matrix <0,0,-25,-25,0,0,0,-25,0,0,0,0>
		LDXSeamMatrix(60, 12, 40, 0, 2, 0)
		matrix <0,0,-1,0,1,0,1,0,0,10,8,20>
		#if (version >= 3.1) material #else texture #end { LDXColor4 }
	}
	object {
		lg_44301
		matrix <0,0,-25,-25,0,0,0,-25,0,0,0,0>
		LDXSeamMatrix(55.349998, 13.386, 20, 7.674999, 1.307, 0)
		matrix <0,0,-1,0,1,0,1,0,0,0,16,10>
		#if (version >= 3.1) material #else texture #end { LDXColor4 }
	}
	object {
		lg_44301
		matrix <0,0,-25,-25,0,0,0,-25,0,0,0,0>
		LDXSeamMatrix(55.349998, 13.386, 20, 7.674999, 1.307, 0)
		matrix <0,0,-1,0,1,0,1,0,0,20,16,10>
		#if (version >= 3.1) material #else texture #end { LDXColor4 }
	}
	object {
		lg_41770
		matrix <0,0,-25,-25,0,0,0,-25,0,0,0,0>
		LDXSeamMatrix(40, 12, 80, 0, 2, 0)
		matrix <0,0,-1,0,1,0,1,0,0,-50,0,10>
		#if (version >= 3.1) material #else texture #end { LDXColor4 }
	}
	object {
		lg_41769
		matrix <0,0,-25,-25,0,0,0,-25,0,0,0,0>
		LDXSeamMatrix(40, 12, 80, 0, 2, 0)
		matrix <0,0,1,0,1,0,-1,0,0,70,0,10>
		#if (version >= 3.1) material #else texture #end { LDXColor4 }
	}
}

#declare LDX_whole_dot_dat = union {
// Name: whole.dat
// ROTATION CENTER 0 0 0 1 "Custom"
// ROTATION CONFIG 0 1
	object {
		LDX_axel_dot_dat
		matrix <1,0,0,0,1,0,0,0,1,0,0,0>
		#if (version >= 3.1) material #else texture #end { LDXColor15 }
	}
	object {
		LDX_axel_dot_dat
		matrix <1,0,0,0,1,0,0,0,1,0,-22,-340>
		#if (version >= 3.1) material #else texture #end { LDXColor15 }
	}
	object {
		LDX_inner_dot_dat
		matrix <1,0,0,0,1,0,0,0,1,20,-40,-100>
		#if (version >= 3.1) material #else texture #end { LDXColor15 }
	}
	object {
		LDX_headlights_dot_dat
		matrix <1,0,0,0,-0.064571,-0.997913,0,0.997913,-0.064571,-16,-118,-130>
		#if (version >= 3.1) material #else texture #end { LDXColor15 }
	}
	object {
		LDX_headlights_dot_dat
		matrix <1,0,0,0,-0.064571,-0.997913,0,0.997913,-0.064571,16,-118,-130>
		#if (version >= 3.1) material #else texture #end { LDXColor15 }
	}
	object {
		LDX_outer_dot_dat
		matrix <1,0,0,0,1,0,0,0,1,20,-40,-100>
		#if (version >= 3.1) material #else texture #end { LDXColor15 }
	}
	object {
		LDX_87695_dot_dat
		LDXSeamMatrix(56.799999, 25.200001, 8, 0, -8.6, 0)
		matrix <1,0,0,0,0.997913,-0.064571,0,0.064571,0.997913,0,-54,-370>
		#if (version >= 3.1) material #else texture #end { LDXColor15 }
	}
// MLCAD HIDE 1 15 0 0 0 1 0 0 0 1 0 0 0 1 axis_32s.dat
	object {
		LDX_spoiler_dot_dat
		matrix <1,0,0,0,0.87,0.5,0,-0.5,0.87,-10,-112,-2>
		#if (version >= 3.1) material #else texture #end { LDXColor15 }
	}
}

#declare LDX_complete_dot_dat = union {
// FILE complete.dat
// Name: complete.dat
// Author: Michael Horvath
// Unofficial Model
// This work is licensed under a Creative Commons Attribution-ShareAlike 4.0
// International License. You should have received a copy of the license along
// with this work. If not, see <http://creativecommons.org/licenses/by-sa/4.0/>.
// ROTATION CENTER 0 0 0 1 "Custom"
// ROTATION CONFIG 0 0
	object {
		LDX_whole_dot_dat
		matrix <1,0,0,0,0.997913,0.064571,0,-0.064571,0.997913,0,-54,160>
		#if (version >= 3.1) material #else texture #end { LDXColor14 }
	}
// MLCAD HIDE 1 14 0 0 0 1 0 0 0 1 0 0 0 1 axis_32s.dat
#if (LDXRefls = 0)
	no_reflection
#end
#if (LDXShads = 0)
	no_shadow
#end
}

// complete.dat
object {
	LDX_complete_dot_dat
	#if (version >= 3.1) material #else texture #end { LDXColor7 }
}

// Floor
#if (LDXFloor != 0)
object {
	plane { LDXFloorAxis, LDXFloorLoc hollow }
	texture {
		pigment { color rgb <LDXFloorR,LDXFloorG,LDXFloorB> }
		finish { ambient LDXFloorAmb diffuse LDXFloorDif }
	}
}
#end

