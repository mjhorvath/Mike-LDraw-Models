// This work is licensed under the Creative Commons Attribution-Share Alike 4.0 
// Unported License. To view a copy of this license, visit 
// https://creativecommons.org/licenses/by-sa/4.0/ or send a letter to Creative 
// Commons, 171 Second Street, Suite 300, San Francisco, California, 94105, USA.
// 
// Generated By: LDView 4.3 Copyright (C) 2018 Travis Cobbs & Peter Bartfai
// See: https://tcobbs.github.io/ldview/
// Date: Thu Jun 20 03:25:22 2019
// Input LDraw File: ldr_dune_rover_new.mpd
//
// This file was automatically generated from an LDraw file by the program
// LDView.  See comments above for further details.

#version 3.7;
/*
#declare LDXQual = 3;	// Quality (0 = Bounding Box; 1 = No Refraction; 2 = Normal; 3 = Stud Logos)
#declare LDXSW = 0.5;	// Seam Width (0 for no seams)
#declare LDXStuds = 1;	// Show studs? (1 = YES; 0 = NO)
#declare LDXRefls = 1;	// Reflections? (1 = YES; 0 = NO)
#declare LDXShads = 1;	// Shadows? (1 = YES; 0 = NO)
#declare LDXFloor = 0;	// Include Floor? (1 = YES; 0 = NO)
*/
// Model bounds information
#declare LDXMinX = -89.75;
#declare LDXMinY = -199.611832;
#declare LDXMinZ = -161.119873;
#declare LDXMaxX = 89.75;
#declare LDXMaxY = -0.610115;
#declare LDXMaxZ = 175.301025;
#declare LDXCenterX = 0;
#declare LDXCenterY = -100.110977;
#declare LDXCenterZ = 7.090576;
#declare LDXCenter = <LDXCenterX,LDXCenterY,LDXCenterZ>;
#declare LDXRadius = 203.715027;

// Camera settings
#declare LDXCameraLoc = < 325.986084,-366.277466,-318.895508 >;	// Camera Location vector
#declare LDXCameraLookAt = < -32.19707100448374603729,-73.82215506896909573697,39.28764717635874603729 >;	// Camera look-at point vector
#declare LDXCameraSky = < -0.35355337256429064663,-0.86602541850504122234,0.35355337256429064663 >;	// Camera sky vector (<0,-1,0> will usually work for standard "up")
/*
#declare LDXFloorLoc = LDXMaxY;	// Floor location. (Dependent on floor axis; MAX_Y is bottom of model)
#declare LDXFloorAxis = y;	// Floor axis (x, y, or z)
#declare LDXFloorR = 0.8;	// Floor Red
#declare LDXFloorG = 0.8;	// Floor Green
#declare LDXFloorB = 0.8;	// Floor Blue
#declare LDXFloorAmb = 0.4;	// Floor Ambient
#declare LDXFloorDif = 0.4;	// Floor Diffuse
#declare LDXAmb = 0.4;
#declare LDXDif = 0.4;
#declare LDXRefl = 0.08;
#declare LDXPhong = 0.5;
#declare LDXPhongS = 40;
#declare LDXTRefl = 0.2;
#declare LDXTFilt = 0.85;
#declare LDXIoR = 1.25;
#declare LDXRubberRefl = 0;
#declare LDXRubberPhong = 0.1;
#declare LDXRubberPhongS = 10;
#declare LDXChromeRefl = 0.85;
#declare LDXChromeBril = 5;
#declare LDXChromeSpec = 0.8;
#declare LDXChromeRough = 0.01;
#declare LDXIPov = 1;	// Use inline POV code from LDraw file? (1 = YES; 0 = NO)
#declare LDXBgR = 0.752941;	// Background Red
#declare LDXBgG = 0.752941;	// Background Green
#declare LDXBgB = 0.752941;	// Background Blue
#declare LDXOrigVer = version;	// DO NOT MODIFY
*/
// Camera
#ifndef (LDXSkipCamera)
camera {
	#declare LDXCamAspect = image_width/image_height;
	location LDXCameraLoc
	sky LDXCameraSky
	right LDXCamAspect * < -1,0,0 >
	look_at LDXCameraLookAt
	angle 77.011589
}
#end

// Lights
#ifndef (LDXSkipLight1)
light_source {	// Latitude,Longitude: 45,0,LDXRadius*2
	<0*LDXRadius,-1.414214*LDXRadius,-1.414214*LDXRadius> + LDXCenter
	color rgb <1,1,1>
}
#end
#ifndef (LDXSkipLight2)
light_source {	// Latitude,Longitude: 30,120,LDXRadius*2
	<1.5*LDXRadius,-1*LDXRadius,0.866026*LDXRadius> + LDXCenter
	color rgb <1,1,1>
}
#end
#ifndef (LDXSkipLight3)
light_source {	// Latitude,Longitude: 60,-120,LDXRadius*2
	<-0.866025*LDXRadius,-1.732051*LDXRadius,0.5*LDXRadius> + LDXCenter
	color rgb <1,1,1>
}
#end

#macro LDXSeamMatrix(Width, Height, Depth, CenterX, CenterY, CenterZ)
#local aw = 0;
#local ah = 0;
#local ad = 0;
#local ax = 0;
#local ay = 0;
#local az = 0;
#if (Width != 0)
#local aw = 1-LDXSW/Width;
#end
#if (Height != 0)
#local ah = 1-LDXSW/Height;
#end
#if (Depth != 0)
#local ad = 1-LDXSW/Depth;
#end
#if (Width != 0 & CenterX != 0)
#local ax = LDXSW/(Width / CenterX);
#end
#if (Height != 0 & CenterY != 0)
#local ay = LDXSW/(Height / CenterY);
#end
#if (Depth != 0 & CenterZ != 0)
#local az = LDXSW/(Depth / CenterZ);
#end
#if (aw <= 0)
#local aw = 1;
#local ax = 0;
#end
#if (ah <= 0)
#local ah = 1;
#local ay = 0;
#end
#if (ad <= 0)
#local ad = 1;
#local az = 0;
#end
matrix <aw,0,0,0,ah,0,0,0,ad,ax,ay,az>
#end


//background { color rgb <LDXBgR,LDXBgG,LDXBgB> }

#declare lg_quality = LDXQual;
#if (lg_quality = 3)
#declare lg_quality = 4;
#end

#declare lg_studs = LDXStuds;


#include "lg_defs.inc"

#include "lg_color.inc"

#ifndef (LDXColor0) // Black
#declare LDXColor0 = #if (version >= 3.1) material { #end
	texture {
		lg_black
	}
#if (version >= 3.1) } #end
#declare LDXColor0_slope = #if (version >= 3.1) material { #end
	texture {
		lg_black
		#if (LDXQual > 1) normal { bumps 0.3 scale 25*0.02 } #end
	}
#if (version >= 3.1) } #end
#end

#ifndef (LDXColor1) // Blue
#declare LDXColor1 = #if (version >= 3.1) material { #end
	texture {
		lg_blue
	}
#if (version >= 3.1) } #end
#declare LDXColor1_slope = #if (version >= 3.1) material { #end
	texture {
		lg_blue
		#if (LDXQual > 1) normal { bumps 0.3 scale 25*0.02 } #end
	}
#if (version >= 3.1) } #end
#end

#ifndef (LDXColor7) // Light Grey
#declare LDXColor7 = #if (version >= 3.1) material { #end
	texture {
		lg_grey
	}
#if (version >= 3.1) } #end
#declare LDXColor7_slope = #if (version >= 3.1) material { #end
	texture {
		lg_grey
		#if (LDXQual > 1) normal { bumps 0.3 scale 25*0.02 } #end
	}
#if (version >= 3.1) } #end
#end

#ifndef (LDXColor14) // Yellow
#declare LDXColor14 = #if (version >= 3.1) material { #end
	texture {
		lg_yellow
	}
#if (version >= 3.1) } #end
#declare LDXColor14_slope = #if (version >= 3.1) material { #end
	texture {
		lg_yellow
		#if (LDXQual > 1) normal { bumps 0.3 scale 25*0.02 } #end
	}
#if (version >= 3.1) } #end
#end

#ifndef (LDXColor33) // Trans Dark Blue
#declare LDXColor33 = #if (version >= 3.1) material { #end
	texture {
		lg_clear_blue
	}
	#if (LDXQual > 1) interior { lg_ior } #end
#if (version >= 3.1) } #end
#declare LDXColor33_slope = #if (version >= 3.1) material { #end
	texture {
		lg_clear_blue
		#if (LDXQual > 1) normal { bumps 0.3 scale 25*0.02 } #end
	}
	#if (LDXQual > 1) interior { lg_ior } #end
#if (version >= 3.1) } #end
#end

#ifndef (LDXColor35) // Trans Bright Green
#declare LDXColor35 = #if (version >= 3.1) material { #end
	texture {
		lg_clear_bright_green
	}
	#if (LDXQual > 1) interior { lg_ior } #end
#if (version >= 3.1) } #end
#declare LDXColor35_slope = #if (version >= 3.1) material { #end
	texture {
		lg_clear_bright_green
		#if (LDXQual > 1) normal { bumps 0.3 scale 25*0.02 } #end
	}
	#if (LDXQual > 1) interior { lg_ior } #end
#if (version >= 3.1) } #end
#end

#ifndef (LDXColor36) // Trans Red
#declare LDXColor36 = #if (version >= 3.1) material { #end
	texture {
		lg_clear_red
	}
	#if (LDXQual > 1) interior { lg_ior } #end
#if (version >= 3.1) } #end
#declare LDXColor36_slope = #if (version >= 3.1) material { #end
	texture {
		lg_clear_red
		#if (LDXQual > 1) normal { bumps 0.3 scale 25*0.02 } #end
	}
	#if (LDXQual > 1) interior { lg_ior } #end
#if (version >= 3.1) } #end
#end

#ifndef (LDXColor47) // Trans Clear
#declare LDXColor47 = #if (version >= 3.1) material { #end
	texture {
		lg_clear
	}
	#if (LDXQual > 1) interior { lg_ior } #end
#if (version >= 3.1) } #end
#declare LDXColor47_slope = #if (version >= 3.1) material { #end
	texture {
		lg_clear
		#if (LDXQual > 1) normal { bumps 0.3 scale 25*0.02 } #end
	}
	#if (LDXQual > 1) interior { lg_ior } #end
#if (version >= 3.1) } #end
#end

#ifndef (LDXColor494) // Electric Contact Alloy
#declare LDXColor494 = #if (version >= 3.1) material { #end
	texture {
		lg_electric_contact_alloy
	}
#if (version >= 3.1) } #end
#declare LDXColor494_slope = #if (version >= 3.1) material { #end
	texture {
		lg_electric_contact_alloy
		#if (LDXQual > 1) normal { bumps 0.3 scale 25*0.02 } #end
	}
#if (version >= 3.1) } #end
#end

#include "lg_3482.inc" // Wheel Rim  8 x 17.5 with Axlehole

#include "lg_2346.inc" // Tyre 12/ 50 x 16 Offset Tread

#include "lg_3749.inc" // Technic Axle Pin

#declare LDX_wheel_dot_ldr = union {
// wheel.ldr
// ROTATION CENTER 0 0 0 1 "Custom"
// ROTATION CONFIG 0 0
	object {
		lg_3482
		matrix <0,0,-25,-25,0,0,0,-25,0,0,0,0>
		LDXSeamMatrix(44, 44, 20, 0, 0, 0)
		matrix <1,0,0,0,1,0,0,0,1,0,0,0>
		#if (version >= 3.1) material #else texture #end { LDXColor14 }
	}
	object {
		lg_2346
		matrix <0,0,-25,-25,0,0,0,-25,0,0,0,0>
		LDXSeamMatrix(70, 70, 30, 0, 0, -5)
		matrix <1,0,0,0,1,0,0,0,1,0,0,0>
		#if (version >= 3.1) material #else texture #end { LDXColor0 }
	}
	object {
		lg_3749
		matrix <0,0,-25,-25,0,0,0,-25,0,0,0,0>
		LDXSeamMatrix(40, 16, 16, 0, 0, 0)
		matrix <0,0,-1,0,1,0,1,0,0,0,0,10>
		#if (version >= 3.1) material #else texture #end { LDXColor7 }
	}
}

#include "lg_3707.inc" // Technic Axle  8

#include "lg_3713.inc" // Technic Bush with Two Flanges

#declare LDX_axel_dot_ldr = union {
// axel.ldr
// ROTATION CENTER 0 0 0 1 "Custom"
// ROTATION CONFIG 0 0
	object {
		lg_3482
		matrix <0,0,-25,-25,0,0,0,-25,0,0,0,0>
		LDXSeamMatrix(44, 44, 20, 0, 0, 0)
		matrix <1,0,0,0,1,0,0,0,1,0,0,0>
		#if (version >= 3.1) material #else texture #end { LDXColor14 }
	}
	object {
		lg_3482
		matrix <0,0,-25,-25,0,0,0,-25,0,0,0,0>
		LDXSeamMatrix(44, 44, 20, 0, 0, 0)
		matrix <1,0,0,0,1,0,0,0,1,0,0,140>
		#if (version >= 3.1) material #else texture #end { LDXColor14 }
	}
	object {
		lg_2346
		matrix <0,0,-25,-25,0,0,0,-25,0,0,0,0>
		LDXSeamMatrix(70, 70, 30, 0, 0, -5)
		matrix <1,0,0,0,1,0,0,0,1,0,0,0>
		#if (version >= 3.1) material #else texture #end { LDXColor0 }
	}
	object {
		lg_2346
		matrix <0,0,-25,-25,0,0,0,-25,0,0,0,0>
		LDXSeamMatrix(70, 70, 30, 0, 0, -5)
		matrix <-1,0,0,0,1,0,0,0,-1,0,0,140>
		#if (version >= 3.1) material #else texture #end { LDXColor0 }
	}
	object {
		lg_3707
		matrix <0,0,-25,-25,0,0,0,-25,0,0,0,0>
		LDXSeamMatrix(160, 12, 12, 0, 0, 0)
		matrix <0,0,-1,0,1,0,1,0,0,0,0,70>
		#if (version >= 3.1) material #else texture #end { LDXColor0 }
	}
	object {
		lg_3713
		matrix <0,0,-25,-25,0,0,0,-25,0,0,0,0>
		LDXSeamMatrix(18, 18, 20, 0, 0, 0)
		matrix <-1,0,0,0,1,0,0,0,-1,0,0,120>
		#if (version >= 3.1) material #else texture #end { LDXColor7 }
	}
	object {
		lg_3713
		matrix <0,0,-25,-25,0,0,0,-25,0,0,0,0>
		LDXSeamMatrix(18, 18, 20, 0, 0, 0)
		matrix <-1,0,0,0,1,0,0,0,-1,0,0,100>
		#if (version >= 3.1) material #else texture #end { LDXColor7 }
	}
	object {
		lg_3713
		matrix <0,0,-25,-25,0,0,0,-25,0,0,0,0>
		LDXSeamMatrix(18, 18, 20, 0, 0, 0)
		matrix <1,0,0,0,1,0,0,0,1,0,0,40>
		#if (version >= 3.1) material #else texture #end { LDXColor7 }
	}
	object {
		lg_3713
		matrix <0,0,-25,-25,0,0,0,-25,0,0,0,0>
		LDXSeamMatrix(18, 18, 20, 0, 0, 0)
		matrix <1,0,0,0,1,0,0,0,1,0,0,20>
		#if (version >= 3.1) material #else texture #end { LDXColor7 }
	}
}

#include "lg_4315.inc" // Hinge Plate  1 x  4 with Car Roof Holder

#include "lg_4255.inc" // ~Technic Shock Absorber  6.5L Cylinder

#declare LDX_4_dash_4cyli_dot_dat_in_part = cylinder // Cylinder 1
{
	<0,0,0>,<0,1,0>,1 open
}

#declare LDX_4_dash_4cyli_dot_dat = cylinder // Cylinder 1
{
	<0,0,0>,<0,1,0>,1 open
}

#declare LDX_4_dash_4ring3_dot_dat_in_part = disc // Ring 1
{
	<0,0,0>,<0,1,0>,4,3
}

#declare LDX_4_dash_4ring3_dot_dat = disc // Ring 1
{
	<0,0,0>,<0,1,0>,4,3
}

#declare LDX_peghole_dot_dat_in_part = union {
// Peg Hole End
// Name: peghole.dat
// Author: James Jessiman
// !LDRAW_ORG Primitive UPDATE 2010-01
// !LICENSE Redistributable under CCAL version 2.0 : see CAreadme.txt
// BFC CERTIFY CCW
// !HISTORY 2002-05-01 [mkennedy] replace code with ring3
// !HISTORY 2002-05-01 [sbliss] BFC
// !HISTORY 2002-06-11 [PTadmin] Official Update 2002-03
// !HISTORY 2007-06-24 [PTadmin] Header formatted for Contributor Agreement
// !HISTORY 2008-07-01 [PTadmin] Official Update 2008-01
// !HISTORY 2010-01-14 [cwdee] Update ring3 to 4-4ring3
// !HISTORY 2010-04-05 [PTadmin] Official Update 2010-01
	object {
		LDX_4_dash_4ring3_dot_dat_in_part
		matrix <2,0,0,0,1,0,0,0,2,0,2,0>
	}
// BFC INVERTNEXT
	object {
		LDX_4_dash_4cyli_dot_dat_in_part
		matrix <8,0,0,0,2,0,0,0,8,0,0,0>
	}
}

#declare LDX_4_dash_4ring4_dot_dat_in_part = disc // Ring 1
{
	<0,0,0>,<0,1,0>,5,4
}

#declare LDX_4_dash_4ring4_dot_dat = disc // Ring 1
{
	<0,0,0>,<0,1,0>,5,4
}

#declare LDX_1_dash_4cyls2_dot_dat_in_part = cylinder // Sloped Cylinder2 0.25
{
	<0,0,0>,<0,1,0>,1 open
	clipped_by
	{
		plane
		{
			<1,0,0>,0
		}
		plane
		{
			<0,0,-1>,0
		}
		plane
		{
			<1,1,0>,0
		}
	}
}

#declare LDX_1_dash_4cyls2_dot_dat = cylinder // Sloped Cylinder2 0.25
{
	<0,0,0>,<0,1,0>,1 open
	clipped_by
	{
		plane
		{
			<1,0,0>,0
		}
		plane
		{
			<0,0,-1>,0
		}
		plane
		{
			<1,1,0>,0
		}
	}
}

#declare LDX_4_dash_4ring2_dot_dat_in_part = disc // Ring 1
{
	<0,0,0>,<0,1,0>,3,2
}

#declare LDX_4_dash_4ring2_dot_dat = disc // Ring 1
{
	<0,0,0>,<0,1,0>,3,2
}

#declare LDX_4_dash_4ring5_dot_dat_in_part = disc // Ring 1
{
	<0,0,0>,<0,1,0>,6,5
}

#declare LDX_4_dash_4ring5_dot_dat = disc // Ring 1
{
	<0,0,0>,<0,1,0>,6,5
}

#declare LDX_4_dash_4cylo_dot_dat_in_part = union {
// Cylinder Open 1.0
// Name: 4-4cylo.dat
// Author: Mark Kennedy [mkennedy]
// !LDRAW_ORG Primitive UPDATE 2010-01
// !LICENSE Redistributable under CCAL version 2.0 : see CAreadme.txt
// BFC CERTIFY CCW
// !HISTORY 2010-04-05 [PTadmin] Official Update 2010-01
	object {
		LDX_4_dash_4cyli_dot_dat_in_part
		matrix <1,0,0,0,1,0,0,0,1,0,0,0>
	}
}

#declare LDX_4_dash_4ring6_dot_dat_in_part = disc // Ring 1
{
	<0,0,0>,<0,1,0>,7,6
}

#declare LDX_4_dash_4ring6_dot_dat = disc // Ring 1
{
	<0,0,0>,<0,1,0>,7,6
}

#declare LDX_4_dash_4disc_dot_dat_in_part = disc // Disc 1
{
	<0,0,0>,<0,1,0>,1
}

#declare LDX_4_dash_4disc_dot_dat = disc // Disc 1
{
	<0,0,0>,<0,1,0>,1
}

#declare LDX_4254_dot_dat_sub_part =
#if (LDXQual = 0)
box {
	<-10,-80,-10>,<10,10,10>
}
#else
union {
// ~Technic Shock Absorber  6.5L Piston Rod
// Name: 4254.dat
// Author: Jeff Boen [onyx]
// !LDRAW_ORG Part UPDATE 2012-01
// !LICENSE Redistributable under CCAL version 2.0 : see CAreadme.txt
// BFC CERTIFY CCW
// !HISTORY 1998-03-23 [PTadmin] Official Update 1998-03
// !HISTORY 2000-09-30 [PTadmin] Official Update 2000-02
// !HISTORY 2007-07-21 [PTadmin] Header formatted for Contributor Agreement
// !HISTORY 2008-07-01 [PTadmin] Official Update 2008-01
// !HISTORY 2008-07-07 [sbliss] moved spring to separate part file; changed to dynamic colors; bfc'ed; used more primitives (2004-11-22)
// !HISTORY 2008-07-08 [guyvivan] Fixed BFC and quad error and use more primitives (2004-12-19)
// !HISTORY 2010-04-05 [PTadmin] Renamed from 731
// !HISTORY 2011-03-09 [Brickaneer] Matched edges exactly, replaced/added prims, designed stopper more realistic.
// !HISTORY 2011-03-14 [Brickaneer] Revised.
// !HISTORY 2012-03-30 [PTadmin] Official Update 2012-01
// // Lower Peghole
// BFC INVERTNEXT
	object {
		LDX_4_dash_4cyli_dot_dat_in_part
		matrix <6,0,0,0,0,16,0,-6,0,0,0,-8>
	}
	object {
		LDX_peghole_dot_dat_in_part
		matrix <1,0,0,0,0,1,0,-1,0,0,0,-10>
	}
	object {
		LDX_peghole_dot_dat_in_part
		matrix <-1,0,0,0,0,-1,0,-1,0,0,0,10>
	}
	object {
		LDX_4_dash_4ring4_dot_dat_in_part
		matrix <2,0,0,0,0,1,0,-2,0,0,0,-10>
	}
	object {
		LDX_4_dash_4ring4_dot_dat_in_part
		matrix <-2,0,0,0,0,-1,0,-2,0,0,0,10>
	}
	object {
		LDX_4_dash_4cyli_dot_dat_in_part
		matrix <10,0,0,0,0,20,0,-10,0,0,0,-10>
	}
// // Edges of Lower Peghole base
// // Lower Peghole base surfaces
	object {
		LDX_1_dash_4cyls2_dot_dat_in_part
		matrix <-9,0,0,0,5.82,0,0,0,-9,0,-10,0>
	}
	object {
		LDX_1_dash_4cyls2_dot_dat_in_part
		matrix <9,0,0,0,5.82,0,0,0,-9,0,-10,0>
	}
	object {
		LDX_1_dash_4cyls2_dot_dat_in_part
		matrix <9,0,0,0,5.82,0,0,0,9,0,-10,0>
	}
	object {
		LDX_1_dash_4cyls2_dot_dat_in_part
		matrix <-9,0,0,0,5.82,0,0,0,9,0,-10,0>
	}
// // Axle shaft
	object {
		LDX_4_dash_4ring2_dot_dat_in_part
		matrix <3,0,0,0,1,0,0,0,3,0,-10,0>
	}
	object {
		LDX_4_dash_4ring5_dot_dat_in_part
		matrix <1,0,0,0,1,0,0,0,1,0,-10,0>
	}
	object {
		LDX_4_dash_4cylo_dot_dat_in_part
		matrix <5,0,0,0,1,0,0,0,5,0,-11,0>
	}
	object {
		LDX_4_dash_4ring5_dot_dat_in_part
		matrix <1,0,0,0,-1,0,0,0,-1,0,-11,0>
	}
	object {
		LDX_4_dash_4ring6_dot_dat_in_part
		matrix <1,0,0,0,-1,0,0,0,-1,0,-11,0>
	}
	object {
		LDX_4_dash_4cylo_dot_dat_in_part
		matrix <7,0,0,0,4,0,0,0,7,0,-15,0>
	}
	object {
		LDX_4_dash_4disc_dot_dat_in_part
		matrix <7,0,0,0,4,0,0,0,7,0,-15,0>
	}
// // Stopper block
}
#end

#declare LDX_731_dot_dat =
#if (LDXQual = 0)
box {
	<-10,-25,-10>,<10,65,10>
}
#else
union {
// ~Technic Shock Absorber  6.5L, Piston Rod with Spring (Obsolete)
// Name: 731.dat
// Author: Jeff Boen [onyx]
// !LDRAW_ORG Shortcut UPDATE 2012-01
// !LICENSE Redistributable under CCAL version 2.0 : see CAreadme.txt
// BFC CERTIFY CW
// !HISTORY 1998-03-23 [PTadmin] Official Update 1998-03
// !HISTORY 2000-09-30 [PTadmin] Official Update 2000-02
// !HISTORY 2007-07-21 [PTadmin] Header formatted for Contributor Agreement
// !HISTORY 2008-07-01 [PTadmin] Official Update 2008-01
// !HISTORY 2010-04-05 [arezey] Split out piston part to 4254
// !HISTORY 2012-01-23 [cwdee] Restore spring for backward compatibility
// !HISTORY 2012-03-30 [PTadmin] Official Update 2012-01
	object {
		LDX_4254_dot_dat_sub_part
		matrix <1,0,0,0,1,0,0,0,1,0,55,0>
	}
	mesh2 {
		vertex_vectors {
			60,
			<-6,-5,0>, <-6,40,0>, <-5.602,-5,-2>, <-5.602,-5,2>,
			<-5.602,40,-2>, <-5.602,40,2>, <-2,-25,-4>, <-2,-25,-3>,
			<-2,-25,3>, <-2,-25,4>, <-2,-20,-9>, <-2,-20,9>,
			<-2,-17,-9>, <-2,-17,-5.602>, <-2,-17,-1>, <-2,-17,1>,
			<-2,-17,5.602>, <-2,-17,9>, <-2,-5,-5.602>, <-2,-5,-2>,
			<-2,-5,-1>, <-2,-5,1>, <-2,-5,2>, <-2,-5,5.602>,
			<-2,40,-5.602>, <-2,40,-2>, <-2,40,2>, <-2,40,5.602>,
			<0,-5,-6>, <0,-5,6>, <0,40,-6>, <0,40,6>,
			<2,-25,-4>, <2,-25,-3>, <2,-25,3>, <2,-25,4>,
			<2,-20,-9>, <2,-20,9>, <2,-17,-9>, <2,-17,-5.602>,
			<2,-17,-1>, <2,-17,1>, <2,-17,5.602>, <2,-17,9>,
			<2,-5,-5.602>, <2,-5,-2>, <2,-5,-1>, <2,-5,1>,
			<2,-5,2>, <2,-5,5.602>, <2,40,-5.602>, <2,40,-2>,
			<2,40,2>, <2,40,5.602>, <5.602,-5,-2>, <5.602,-5,2>,
			<5.602,40,-2>, <5.602,40,2>, <6,-5,0>, <6,40,0>
		}
		normal_vectors {
			18,
			<-1,0,0>, <-0.980769,0,-0.195173>, <-0.980769,0,0.195173>, <-0.195173,0,-0.980769>,
			<-0.195173,0,0.980769>, <0,-1,0>, <0,0,-1>, <0,0,1>,
			<0,0.242536,-0.970143>, <0,0.242536,0.970143>, <0,0.707107,-0.707107>, <0,0.707107,0.707107>,
			<0,1,0>, <0.195173,0,-0.980769>, <0.195173,0,0.980769>, <0.980769,0,-0.195173>,
			<0.980769,0,0.195173>, <1,0,0>
		}
		face_indices {
			102,
			<0, 3, 5>, <0, 5, 1>, <3, 22, 26>, <3, 26, 5>,
			<22, 23, 27>, <22, 27, 26>, <23, 29, 31>, <23, 31, 27>,
			<58, 59, 57>, <58, 57, 55>, <55, 57, 52>, <55, 52, 48>,
			<48, 52, 53>, <48, 53, 49>, <49, 53, 31>, <49, 31, 29>,
			<0, 1, 4>, <0, 4, 2>, <2, 4, 25>, <2, 25, 19>,
			<19, 25, 24>, <19, 24, 18>, <18, 24, 30>, <18, 30, 28>,
			<58, 54, 56>, <58, 56, 59>, <54, 45, 51>, <54, 51, 56>,
			<45, 44, 50>, <45, 50, 51>, <44, 28, 30>, <44, 30, 50>,
			<28, 44, 18>, <46, 47, 21>, <46, 21, 20>, <23, 49, 29>,
			<2, 19, 20>, <2, 20, 0>, <0, 20, 21>, <0, 21, 22>,
			<0, 22, 3>, <55, 48, 47>, <55, 47, 58>, <58, 47, 46>,
			<58, 46, 45>, <58, 45, 54>, <23, 16, 42>, <23, 42, 49>,
			<22, 15, 16>, <22, 16, 23>, <22, 21, 15>, <49, 42, 41>,
			<49, 41, 48>, <41, 47, 48>, <21, 47, 41>, <21, 41, 15>,
			<46, 20, 14>, <46, 14, 40>, <14, 20, 19>, <18, 13, 14>,
			<18, 14, 19>, <45, 46, 40>, <45, 40, 39>, <45, 39, 44>,
			<44, 39, 13>, <44, 13, 18>, <38, 36, 10>, <38, 10, 12>,
			<38, 12, 13>, <38, 13, 39>, <17, 11, 37>, <17, 37, 43>,
			<17, 43, 42>, <17, 42, 16>, <16, 15, 8>, <16, 8, 9>,
			<9, 11, 17>, <9, 17, 16>, <35, 37, 11>, <35, 11, 9>,
			<34, 35, 9>, <34, 9, 8>, <41, 34, 8>, <41, 8, 15>,
			<35, 34, 41>, <35, 41, 42>, <42, 43, 37>, <42, 37, 35>,
			<6, 7, 14>, <6, 14, 13>, <13, 12, 10>, <13, 10, 6>,
			<6, 10, 36>, <6, 36, 32>, <7, 6, 32>, <7, 32, 33>,
			<14, 7, 33>, <14, 33, 40>, <39, 40, 33>, <39, 33, 32>,
			<32, 36, 38>, <32, 38, 39>
		}
		normal_indices {
			102,
			<17, 15, 15>, <17, 15, 17>, <6, 6, 6>, <6, 6, 6>,
			<17, 17, 17>, <17, 17, 17>, <13, 6, 6>, <13, 6, 13>,
			<0, 0, 1>, <0, 1, 1>, <6, 6, 6>, <6, 6, 6>,
			<0, 0, 0>, <0, 0, 0>, <3, 3, 6>, <3, 6, 6>,
			<17, 17, 16>, <17, 16, 16>, <7, 7, 7>, <7, 7, 7>,
			<17, 17, 17>, <17, 17, 17>, <14, 14, 7>, <14, 7, 7>,
			<0, 2, 2>, <0, 2, 0>, <7, 7, 7>, <7, 7, 7>,
			<0, 0, 0>, <0, 0, 0>, <4, 7, 7>, <4, 7, 4>,
			<12, 12, 12>, <12, 12, 12>, <12, 12, 12>, <12, 12, 12>,
			<12, 12, 12>, <12, 12, 12>, <12, 12, 12>, <12, 12, 12>,
			<12, 12, 12>, <12, 12, 12>, <12, 12, 12>, <12, 12, 12>,
			<12, 12, 12>, <12, 12, 12>, <6, 6, 6>, <6, 6, 6>,
			<17, 17, 17>, <17, 17, 17>, <17, 17, 17>, <0, 0, 0>,
			<0, 0, 0>, <0, 0, 0>, <7, 7, 7>, <7, 7, 7>,
			<6, 6, 6>, <6, 6, 6>, <17, 17, 17>, <17, 17, 17>,
			<17, 17, 17>, <0, 0, 0>, <0, 0, 0>, <0, 0, 0>,
			<7, 7, 7>, <7, 7, 7>, <7, 7, 7>, <7, 7, 7>,
			<5, 5, 5>, <5, 5, 5>, <6, 6, 6>, <6, 6, 6>,
			<5, 5, 5>, <5, 5, 5>, <17, 17, 17>, <17, 17, 17>,
			<17, 17, 17>, <17, 17, 17>, <10, 10, 10>, <10, 10, 10>,
			<12, 12, 12>, <12, 12, 12>, <9, 9, 9>, <9, 9, 9>,
			<0, 0, 0>, <0, 0, 0>, <0, 0, 0>, <0, 0, 0>,
			<17, 17, 17>, <17, 17, 17>, <17, 17, 17>, <17, 17, 17>,
			<11, 11, 11>, <11, 11, 11>, <12, 12, 12>, <12, 12, 12>,
			<8, 8, 8>, <8, 8, 8>, <0, 0, 0>, <0, 0, 0>,
			<0, 0, 0>, <0, 0, 0>
		}
	}
	mesh2 {
		vertex_vectors {
			568,
			<-8.02,2,0>, <-8.02,9,0>, <-8.02,9,0.02>, <-8.02,16,0>,
			<-8.02,16,0.02>, <-8.02,23,0>, <-8.02,23,0.02>, <-8.02,30,0>,
			<-8.02,30,0.02>, <-8.02,37,0>, <-8.02,37,0.02>, <-8,2,0>,
			<-8,42,0>, <-8,44,0>, <-7.45,2.43,3.08>, <-7.45,9.43,3.08>,
			<-7.45,16.43,3.08>, <-7.45,23.43,3.08>, <-7.45,30.43,3.08>, <-7.45,37.43,3.08>,
			<-7.4,8.57,-3.04>, <-7.4,15.57,-3.04>, <-7.4,22.57,-3.04>, <-7.4,29.57,-3.04>,
			<-7.4,36.57,-3.04>, <-7.39,2,-3.06>, <-7.39,2,3.06>, <-7.39,42,-3.06>,
			<-7.39,42,3.06>, <-7.39,44,-3.06>, <-7.39,44,3.06>, <-7.02,1.01,0.17>,
			<-7.02,2.99,-0.14>, <-7.02,8.01,0.17>, <-7.02,8.01,0.19>, <-7.02,9.99,-0.14>,
			<-7.02,9.99,-0.12>, <-7.02,15.01,0.17>, <-7.02,15.01,0.19>, <-7.02,16.99,-0.14>,
			<-7.02,16.99,-0.12>, <-7.02,22.01,0.17>, <-7.02,22.01,0.19>, <-7.02,23.99,-0.14>,
			<-7.02,23.99,-0.12>, <-7.02,29.01,0.17>, <-7.02,29.01,0.19>, <-7.02,30.99,-0.14>,
			<-7.02,30.99,-0.12>, <-7.02,36.009998,0.17>, <-7.02,36.009998,0.19>, <-7.02,37.990002,-0.14>,
			<-7.02,37.990002,-0.12>, <-7,1,0>, <-7,3,0>, <-7,41,0>,
			<-7,43,0>, <-7,45,0>, <-6.57,3.42,2.55>, <-6.57,10.42,2.55>,
			<-6.57,17.42,2.55>, <-6.57,24.42,2.55>, <-6.57,31.42,2.55>, <-6.57,38.419998,2.55>,
			<-6.53,7.58,-2.5>, <-6.53,14.58,-2.5>, <-6.53,21.58,-2.5>, <-6.53,28.58,-2.5>,
			<-6.53,35.580002,-2.5>, <-6.46,1,-2.67>, <-6.46,1,2.67>, <-6.46,3,-2.67>,
			<-6.46,3,2.67>, <-6.46,41,-2.67>, <-6.46,41,2.67>, <-6.46,43,-2.67>,
			<-6.46,43,2.67>, <-6.46,45,-2.67>, <-6.46,45,2.67>, <-6.45,1.44,2.84>,
			<-6.45,8.440001,2.84>, <-6.45,15.44,2.84>, <-6.45,22.440001,2.84>, <-6.45,29.440001,2.84>,
			<-6.45,36.439999,2.84>, <-6.4,9.56,-2.78>, <-6.4,16.560001,-2.78>, <-6.4,23.559999,-2.78>,
			<-6.4,30.559999,-2.78>, <-6.4,37.560001,-2.78>, <-6.02,2,0>, <-6.02,9,0>,
			<-6.02,9,0.05>, <-6.02,16,0>, <-6.02,16,0.05>, <-6.02,23,0>,
			<-6.02,23,0.05>, <-6.02,30,0>, <-6.02,30,0.05>, <-6.02,37,0>,
			<-6.02,37,0.05>, <-6,2,0>, <-6,42,0>, <-6,44,0>,
			<-5.73,2.86,5.7>, <-5.73,9.86,5.7>, <-5.73,16.860001,5.7>, <-5.73,23.860001,5.7>,
			<-5.73,30.860001,5.7>, <-5.73,37.860001,5.7>, <-5.65,2,-5.65>, <-5.65,2,5.65>,
			<-5.65,42,-5.65>, <-5.65,42,5.65>, <-5.65,44,-5.65>, <-5.65,44,5.65>,
			<-5.64,8.139999,-5.63>, <-5.64,15.14,-5.63>, <-5.64,22.139999,-5.63>, <-5.64,29.139999,-5.63>,
			<-5.64,36.139999,-5.63>, <-5.56,2.43,2.31>, <-5.56,9.43,2.31>, <-5.56,16.43,2.31>,
			<-5.56,23.43,2.31>, <-5.56,30.43,2.31>, <-5.56,37.43,2.31>, <-5.54,2,-2.29>,
			<-5.54,2,2.29>, <-5.54,42,-2.29>, <-5.54,42,2.29>, <-5.54,44,-2.29>,
			<-5.54,44,2.29>, <-5.53,8.57,-2.24>, <-5.53,15.57,-2.24>, <-5.53,22.57,-2.24>,
			<-5.53,29.57,-2.24>, <-5.53,36.57,-2.24>, <-5.12,3.85,4.87>, <-5.12,10.85,4.87>,
			<-5.12,17.85,4.87>, <-5.12,24.85,4.87>, <-5.12,31.85,4.87>, <-5.12,38.849998,4.87>,
			<-5.04,7.15,-4.79>, <-5.04,14.15,-4.79>, <-5.04,21.15,-4.79>, <-5.04,28.15,-4.79>,
			<-5.04,35.150002,-4.79>, <-4.94,1,-4.94>, <-4.94,1,4.94>, <-4.94,3,-4.94>,
			<-4.94,3,4.94>, <-4.94,41,-4.94>, <-4.94,41,4.94>, <-4.94,43,-4.94>,
			<-4.94,43,4.94>, <-4.94,45,-4.94>, <-4.94,45,4.94>, <-4.9,1.87,5.09>,
			<-4.9,8.87,5.09>, <-4.9,15.87,5.09>, <-4.9,22.870001,5.09>, <-4.9,29.870001,5.09>,
			<-4.9,36.869999,5.09>, <-4.82,9.13,-5.01>, <-4.82,16.130001,-5.01>, <-4.82,23.129999,-5.01>,
			<-4.82,30.129999,-5.01>, <-4.82,37.130001,-5.01>, <-4.28,2.86,4.27>, <-4.28,9.86,4.27>,
			<-4.28,16.860001,4.27>, <-4.28,23.860001,4.27>, <-4.28,30.860001,4.27>, <-4.28,37.860001,4.27>,
			<-4.24,2,-4.24>, <-4.24,2,4.24>, <-4.24,42,-4.24>, <-4.24,42,4.24>,
			<-4.24,44,-4.24>, <-4.24,44,4.24>, <-4.21,8.139999,-4.17>, <-4.21,15.14,-4.17>,
			<-4.21,22.139999,-4.17>, <-4.21,29.139999,-4.17>, <-4.21,36.139999,-4.17>, <-3.15,3.29,7.46>,
			<-3.15,10.29,7.46>, <-3.15,17.290001,7.46>, <-3.15,24.290001,7.46>, <-3.15,31.290001,7.46>,
			<-3.15,38.290001,7.46>, <-3.06,2,-7.39>, <-3.06,2,7.39>, <-3.06,42,-7.39>,
			<-3.06,42,7.39>, <-3.06,44,-7.39>, <-3.06,44,7.39>, <-3.03,7.71,-7.35>,
			<-3.03,14.71,-7.35>, <-3.03,21.709999,-7.35>, <-3.03,28.709999,-7.35>, <-3.03,35.709999,-7.35>,
			<-2.89,4.28,6.46>, <-2.89,11.28,6.46>, <-2.89,18.280001,6.46>, <-2.89,25.280001,6.46>,
			<-2.89,32.279999,6.46>, <-2.89,39.279999,6.46>, <-2.79,6.72,-6.35>, <-2.79,13.72,-6.35>,
			<-2.79,20.719999,-6.35>, <-2.79,27.719999,-6.35>, <-2.79,34.720001,-6.35>, <-2.67,1,-6.46>,
			<-2.67,1,6.46>, <-2.67,3,-6.46>, <-2.67,3,6.46>, <-2.67,41,-6.46>,
			<-2.67,41,6.46>, <-2.67,43,-6.46>, <-2.67,43,6.46>, <-2.67,45,-6.46>,
			<-2.67,45,6.46>, <-2.6,2.3,6.58>, <-2.6,9.3,6.58>, <-2.6,16.299999,6.58>,
			<-2.6,23.299999,6.58>, <-2.6,30.299999,6.58>, <-2.6,37.299999,6.58>, <-2.5,8.7,-6.46>,
			<-2.5,15.7,-6.46>, <-2.5,22.700001,-6.46>, <-2.5,29.700001,-6.46>, <-2.5,36.700001,-6.46>,
			<-2.35,3.29,5.58>, <-2.35,10.29,5.58>, <-2.35,17.290001,5.58>, <-2.35,24.290001,5.58>,
			<-2.35,31.290001,5.58>, <-2.35,38.290001,5.58>, <-2.29,2,-5.54>, <-2.29,2,5.54>,
			<-2.29,42,-5.54>, <-2.29,42,5.54>, <-2.29,44,-5.54>, <-2.29,44,5.54>,
			<-2.26,7.71,-5.46>, <-2.26,14.71,-5.46>, <-2.26,21.709999,-5.46>, <-2.26,28.709999,-5.46>,
			<-2.26,35.709999,-5.46>, <-0.23,4.71,7.07>, <-0.23,11.71,7.07>, <-0.23,18.709999,7.07>,
			<-0.23,25.709999,7.07>, <-0.23,32.709999,7.07>, <-0.23,39.709999,7.07>, <-0.12,6.29,-6.92>,
			<-0.12,13.29,-6.92>, <-0.12,20.290001,-6.92>, <-0.12,27.290001,-6.92>, <-0.12,34.290001,-6.92>,
			<-0.12,41.290001,-6.92>, <-0.08,3.72,8.09>, <-0.08,10.72,8.09>, <-0.08,17.719999,8.09>,
			<-0.08,24.719999,8.09>, <-0.08,31.719999,8.09>, <-0.08,38.720001,8.09>, <-0.07,3.73,6.05>,
			<-0.07,10.73,6.05>, <-0.07,17.73,6.05>, <-0.07,24.73,6.05>, <-0.07,31.73,6.05>,
			<-0.07,38.73,6.05>, <0,1,-7>, <0,1,7>, <0,2,-8>,
			<0,2,-6>, <0,2,6>, <0,2,8>, <0,3,-7>,
			<0,3,7>, <0,41,-7>, <0,41,7>, <0,42,-8>,
			<0,42,-6>, <0,42,6>, <0,42,8>, <0,43,-7>,
			<0,43,7>, <0,44,-8>, <0,44,-6>, <0,44,6>,
			<0,44,8>, <0,45,-7>, <0,45,7>, <0.03,7.27,-5.9>,
			<0.03,14.27,-5.9>, <0.03,21.27,-5.9>, <0.03,28.27,-5.9>, <0.03,35.27,-5.9>,
			<0.03,42.27,-5.9>, <0.04,7.28,-7.93>, <0.04,14.28,-7.93>, <0.04,21.280001,-7.93>,
			<0.04,28.280001,-7.93>, <0.04,35.279999,-7.93>, <0.04,42.279999,-7.93>, <0.08,2.74,7.07>,
			<0.08,9.74,7.07>, <0.08,16.74,7.07>, <0.08,23.74,7.07>, <0.08,30.74,7.07>,
			<0.08,37.740002,7.07>, <0.19,8.26,-6.91>, <0.19,15.26,-6.91>, <0.19,22.26,-6.91>,
			<0.19,29.26,-6.91>, <0.19,36.259998,-6.91>, <0.19,43.259998,-6.91>, <2.23,4.17,5.62>,
			<2.23,11.17,5.62>, <2.23,18.17,5.62>, <2.23,25.17,5.62>, <2.23,32.169998,5.62>,
			<2.23,39.169998,5.62>, <2.29,2,-5.54>, <2.29,2,5.54>, <2.29,42,-5.54>,
			<2.29,42,5.54>, <2.29,44,-5.54>, <2.29,44,5.54>, <2.31,6.83,-5.42>,
			<2.31,13.83,-5.42>, <2.31,20.83,-5.42>, <2.31,27.83,-5.42>, <2.31,34.830002,-5.42>,
			<2.31,41.830002,-5.42>, <2.46,5.15,6.62>, <2.46,12.15,6.62>, <2.46,19.15,6.62>,
			<2.46,26.15,6.62>, <2.46,33.150002,6.62>, <2.46,40.150002,6.62>, <2.57,5.85,-6.43>,
			<2.57,12.85,-6.43>, <2.57,19.85,-6.43>, <2.57,26.85,-6.43>, <2.57,33.849998,-6.43>,
			<2.57,40.849998,-6.43>, <2.67,1,-6.46>, <2.67,1,6.46>, <2.67,3,-6.46>,
			<2.67,3,6.46>, <2.67,41,-6.46>, <2.67,41,6.46>, <2.67,43,-6.46>,
			<2.67,43,6.46>, <2.67,45,-6.46>, <2.67,45,6.46>, <2.75,3.18,6.5>,
			<2.75,10.18,6.5>, <2.75,17.18,6.5>, <2.75,24.18,6.5>, <2.75,31.18,6.5>,
			<2.75,38.18,6.5>, <2.86,7.82,-6.3>, <2.86,14.82,-6.3>, <2.86,21.82,-6.3>,
			<2.86,28.82,-6.3>, <2.86,35.82,-6.3>, <2.86,42.82,-6.3>, <2.99,4.16,7.51>,
			<2.99,11.16,7.51>, <2.99,18.16,7.51>, <2.99,25.16,7.51>, <2.99,32.16,7.51>,
			<2.99,39.16,7.51>, <3.06,2,-7.39>, <3.06,2,7.39>, <3.06,42,-7.39>,
			<3.06,42,7.39>, <3.06,44,-7.39>, <3.06,44,7.39>, <3.11,6.84,-7.3>,
			<3.11,13.84,-7.3>, <3.11,20.84,-7.3>, <3.11,27.84,-7.3>, <3.11,34.84,-7.3>,
			<3.11,41.84,-7.3>, <4.18,4.61,4.34>, <4.18,11.61,4.34>, <4.18,18.610001,4.34>,
			<4.18,25.610001,4.34>, <4.18,32.610001,4.34>, <4.18,39.610001,4.34>, <4.24,2,-4.24>,
			<4.24,2,4.24>, <4.24,6.39,-4.11>, <4.24,13.39,-4.11>, <4.24,20.389999,-4.11>,
			<4.24,27.389999,-4.11>, <4.24,34.389999,-4.11>, <4.24,41.389999,-4.11>, <4.24,42,-4.24>,
			<4.24,42,4.24>, <4.24,44,-4.24>, <4.24,44,4.24>, <4.78,5.6,5.18>,
			<4.78,12.6,5.18>, <4.78,19.6,5.18>, <4.78,26.6,5.18>, <4.78,33.599998,5.18>,
			<4.78,40.599998,5.18>, <4.86,5.4,-4.94>, <4.86,12.4,-4.94>, <4.86,19.4,-4.94>,
			<4.86,26.4,-4.94>, <4.86,33.400002,-4.94>, <4.86,40.400002,-4.94>, <4.94,1,-4.94>,
			<4.94,1,4.94>, <4.94,3,-4.94>, <4.94,3,4.94>, <4.94,41,-4.94>,
			<4.94,41,4.94>, <4.94,43,-4.94>, <4.94,43,4.94>, <4.94,45,-4.94>,
			<4.94,45,4.94>, <5,3.62,4.95>, <5,10.62,4.95>, <5,17.620001,4.95>,
			<5,24.620001,4.95>, <5,31.620001,4.95>, <5,38.619999,4.95>, <5.08,7.38,-4.71>,
			<5.08,14.38,-4.71>, <5.08,21.379999,-4.71>, <5.08,28.379999,-4.71>, <5.08,35.380001,-4.71>,
			<5.08,42.380001,-4.71>, <5.49,5.05,2.41>, <5.49,12.05,2.41>, <5.49,19.049999,2.41>,
			<5.49,26.049999,2.41>, <5.49,33.049999,2.41>, <5.49,40.049999,2.41>, <5.52,5.95,-2.17>,
			<5.52,12.95,-2.17>, <5.52,19.950001,-2.17>, <5.52,26.950001,-2.17>, <5.52,33.950001,-2.17>,
			<5.52,40.950001,-2.17>, <5.54,2,-2.29>, <5.54,2,2.29>, <5.54,42,-2.29>,
			<5.54,42,2.29>, <5.54,44,-2.29>, <5.54,44,2.29>, <5.61,4.61,5.79>,
			<5.61,11.61,5.79>, <5.61,18.610001,5.79>, <5.61,25.610001,5.79>, <5.61,32.610001,5.79>,
			<5.61,39.610001,5.79>, <5.65,2,-5.65>, <5.65,2,5.65>, <5.65,42,-5.65>,
			<5.65,42,5.65>, <5.65,44,-5.65>, <5.65,44,5.65>, <5.7,6.39,-5.54>,
			<5.7,13.39,-5.54>, <5.7,20.389999,-5.54>, <5.7,27.389999,-5.54>, <5.7,34.389999,-5.54>,
			<5.7,41.389999,-5.54>, <5.96,5.5,0.13>, <5.96,12.5,0.13>, <5.96,19.5,0.13>,
			<5.96,26.5,0.13>, <5.96,33.5,0.13>, <5.96,40.5,0.13>, <6,2,0>,
			<6,42,0>, <6,44,0>, <6.37,6.04,2.95>, <6.37,13.04,2.95>,
			<6.37,20.040001,2.95>, <6.37,27.040001,2.95>, <6.37,34.040001,2.95>, <6.37,41.040001,2.95>,
			<6.41,4.96,-2.7>, <6.41,11.96,-2.7>, <6.41,18.959999,-2.7>, <6.41,25.959999,-2.7>,
			<6.41,32.959999,-2.7>, <6.41,39.959999,-2.7>, <6.46,1,-2.67>, <6.46,1,2.67>,
			<6.46,3,-2.67>, <6.46,3,2.67>, <6.46,41,-2.67>, <6.46,41,2.67>,
			<6.46,43,-2.67>, <6.46,43,2.67>, <6.46,45,-2.67>, <6.46,45,2.67>,
			<6.49,4.07,2.66>, <6.49,11.07,2.66>, <6.49,18.07,2.66>, <6.49,25.07,2.66>,
			<6.49,32.07,2.66>, <6.49,39.07,2.66>, <6.53,6.93,-2.4>, <6.53,13.93,-2.4>,
			<6.53,20.93,-2.4>, <6.53,27.93,-2.4>, <6.53,34.93,-2.4>, <6.53,41.93,-2.4>,
			<6.98,4.51,-0.03>, <6.98,6.49,0.29>, <6.98,11.51,-0.03>, <6.98,13.49,0.29>,
			<6.98,18.51,-0.03>, <6.98,20.49,0.29>, <6.98,25.51,-0.03>, <6.98,27.49,0.29>,
			<6.98,32.510002,-0.03>, <6.98,34.490002,0.29>, <6.98,39.509998,-0.03>, <6.98,41.490002,0.29>,
			<7,1,0>, <7,3,0>, <7,41,0>, <7,43,0>,
			<7,45,0>, <7.37,5.05,3.2>, <7.37,12.05,3.2>, <7.37,19.049999,3.2>,
			<7.37,26.049999,3.2>, <7.37,33.049999,3.2>, <7.37,40.049999,3.2>, <7.39,2,-3.06>,
			<7.39,2,3.06>, <7.39,42,-3.06>, <7.39,42,3.06>, <7.39,44,-3.06>,
			<7.39,44,3.06>, <7.41,5.95,-2.93>, <7.41,12.95,-2.93>, <7.41,19.950001,-2.93>,
			<7.41,26.950001,-2.93>, <7.41,33.950001,-2.93>, <7.41,40.950001,-2.93>, <8,2,0>,
			<8,5.5,0.14>, <8,12.5,0.14>, <8,19.5,0.14>, <8,26.5,0.14>,
			<8,33.5,0.14>, <8,40.5,0.14>, <8,42,0>, <8,44,0>
		}
		normal_vectors {
			280,
			<-0.720584,-0.6922,-0.040216>, <-0.716945,0.696611,0.026893>, <-0.715513,-0.694296,-0.077424>, <-0.713124,0.698586,0.058578>,
			<-0.706734,-0.705869,-0.047697>, <-0.706684,-0.705942,0.047371>, <-0.706734,0.705869,-0.047697>, <-0.706684,0.705942,0.047371>,
			<-0.705989,-0.706658,0.047054>, <-0.705989,0.706658,0.047054>, <-0.705402,-0.707219,-0.047428>, <-0.705293,-0.707374,0.046736>,
			<-0.705402,0.707219,-0.047428>, <-0.705293,0.707374,0.046736>, <-0.702875,0.711273,0.007565>, <-0.70023,0.674029,-0.235296>,
			<-0.698667,-0.713872,-0.047447>, <-0.697125,-0.666978,0.262977>, <-0.697231,0.70894,0.106176>, <-0.69538,-0.706815,-0.129843>,
			<-0.694204,-0.711051,0.111747>, <-0.692427,0.712851,-0.111303>, <-0.689446,-0.695673,0.201749>, <-0.686268,-0.694002,-0.217712>,
			<-0.685792,0.709464,0.162329>, <-0.685414,-0.709716,-0.162822>, <-0.682796,0.699056,0.212392>, <-0.678825,0.700978,-0.218692>,
			<-0.676245,-0.695053,0.244118>, <-0.671122,-0.705138,-0.228857>, <-0.671231,-0.705185,0.228391>, <-0.670897,0.696759,-0.253819>,
			<-0.671122,0.705138,-0.228857>, <-0.671231,0.705185,0.228391>, <-0.668425,-0.708195,-0.227305>, <-0.668166,-0.70834,0.227613>,
			<-0.668425,0.708195,-0.227305>, <-0.668166,0.70834,0.227613>, <-0.639987,0.695427,0.326798>, <-0.636505,-0.703978,-0.315083>,
			<-0.637437,-0.694732,0.333198>, <-0.636505,0.703978,-0.315083>, <-0.636294,-0.704063,0.315317>, <-0.636294,0.704063,0.315317>,
			<-0.634917,0.696938,-0.333403>, <-0.631932,-0.708881,-0.313289>, <-0.631717,-0.708789,0.31393>, <-0.632238,-0.693557,-0.345331>,
			<-0.631932,0.708881,-0.313289>, <-0.631717,0.708789,0.31393>, <-0.603075,0.71075,0.362127>, <-0.59836,-0.711699,0.368037>,
			<-0.595896,0.713277,-0.368977>, <-0.590538,-0.711383,-0.381049>, <-0.577693,-0.712133,0.39892>, <-0.57319,0.70855,0.411595>,
			<-0.5718,-0.709516,-0.411864>, <-0.563282,0.711495,-0.420105>, <-0.560112,-0.695904,0.449435>, <-0.550496,-0.696056,-0.460934>,
			<-0.549782,0.697662,0.459356>, <-0.543033,0.700911,-0.462427>, <-0.534934,-0.70332,-0.468173>, <-0.534521,-0.703433,0.468476>,
			<-0.534934,0.70332,-0.468173>, <-0.534521,0.703433,0.468476>, <-0.530588,-0.708364,-0.465507>, <-0.530896,-0.708282,0.465282>,
			<-0.530588,0.708364,-0.465507>, <-0.530896,0.708282,0.465282>, <-0.468476,-0.703433,-0.534521>, <-0.468173,-0.70332,0.534934>,
			<-0.468476,0.703433,-0.534521>, <-0.468173,0.70332,0.534934>, <-0.465507,-0.708364,0.530588>, <-0.466103,0.696312,0.5458>,
			<-0.465507,0.708364,0.530588>, <-0.465282,-0.708282,-0.530896>, <-0.465282,0.708282,-0.530896>, <-0.461699,-0.695387,0.5507>,
			<-0.457207,0.699611,-0.549096>, <-0.451994,-0.693014,-0.561635>, <-0.419364,0.70967,0.566129>, <-0.411161,-0.712605,0.568455>,
			<-0.409222,0.714687,-0.567239>, <-0.401135,-0.710566,-0.578088>, <-0.381838,-0.710433,0.591172>, <-0.371115,0.708947,0.599723>,
			<-0.368993,-0.709616,-0.600241>, <-0.362128,0.712041,-0.601548>, <-0.343216,-0.697399,0.629156>, <-0.335463,-0.69281,-0.638341>,
			<-0.333774,0.69733,0.634291>, <-0.323886,0.702923,-0.633243>, <-0.315317,-0.704063,-0.636294>, <-0.315083,-0.703978,0.636505>,
			<-0.315317,0.704063,-0.636294>, <-0.315083,0.703978,0.636505>, <-0.31393,-0.708789,-0.631717>, <-0.31393,0.708789,-0.631717>,
			<-0.313289,-0.708881,0.631932>, <-0.313289,0.708881,0.631932>, <-0.268283,-0.674655,0.687651>, <-0.252701,-0.699164,0.668814>,
			<-0.228857,-0.705138,0.671122>, <-0.228857,0.705138,0.671122>, <-0.227613,-0.70834,-0.668166>, <-0.228391,-0.705185,-0.671231>,
			<-0.228391,0.705185,-0.671231>, <-0.227613,0.70834,-0.668166>, <-0.227305,-0.708195,0.668425>, <-0.227305,0.708195,0.668425>,
			<-0.221869,0.695151,0.683768>, <-0.21456,-0.694606,0.686649>, <-0.213803,0.699974,-0.681414>, <-0.201283,-0.694095,-0.691171>,
			<-0.173309,0.709686,0.682869>, <-0.16015,-0.713501,0.682106>, <-0.160182,0.715029,-0.680497>, <-0.151034,-0.708049,-0.689822>,
			<-0.124375,-0.712048,0.691028>, <-0.114728,0.707374,0.697466>, <-0.111472,-0.710944,-0.694357>, <-0.103087,0.71268,-0.693873>,
			<-0.075874,-0.696988,0.713057>, <-0.067201,0.696574,0.714331>, <-0.065739,-0.692772,-0.718154>, <-0.055818,0.700889,-0.711083>,
			<-0.047697,-0.705869,0.706734>, <-0.047697,0.705869,0.706734>, <-0.047054,-0.706658,-0.705989>, <-0.046736,-0.707374,-0.705293>,
			<-0.047428,-0.707219,0.705402>, <-0.047371,-0.705942,-0.706684>, <-0.047371,0.705942,-0.706684>, <-0.047054,0.706658,-0.705989>,
			<-0.046736,0.707374,-0.705293>, <-0.047428,0.707219,0.705402>, <-0.03225,0.695689,0.717619>, <-0.010409,0.714928,0.699121>,
			<0.033501,-0.69484,-0.718383>, <0.040914,-0.716777,-0.696101>, <0.047428,-0.707219,-0.705402>, <0.046736,-0.707374,0.705293>,
			<0.047054,-0.706658,0.705989>, <0.047371,-0.705942,0.706684>, <0.047371,0.705942,0.706684>, <0.047428,0.707219,-0.705402>,
			<0.046736,0.707374,0.705293>, <0.047054,0.706658,0.705989>, <0.047697,-0.705869,-0.706734>, <0.047697,0.705869,-0.706734>,
			<0.05464,0.694808,0.717117>, <0.065376,-0.697318,0.713774>, <0.066067,0.700551,-0.710537>, <0.075827,-0.694625,-0.715364>,
			<0.101603,0.708291,0.69857>, <0.113531,-0.712482,0.692445>, <0.114373,0.712853,-0.691924>, <0.12446,-0.710307,-0.692802>,
			<0.149677,-0.713713,0.684259>, <0.158094,0.708447,0.68783>, <0.159413,-0.710404,-0.685503>, <0.173282,0.714826,-0.677493>,
			<0.204463,-0.69574,0.688579>, <0.212758,0.694767,0.687046>, <0.213917,-0.694909,-0.686543>, <0.223297,0.699333,-0.679023>,
			<0.227305,-0.708195,-0.668425>, <0.227305,0.708195,-0.668425>, <0.227613,-0.70834,0.668166>, <0.228391,-0.705185,0.671231>,
			<0.228391,0.705185,0.671231>, <0.227613,0.70834,0.668166>, <0.228857,-0.705138,-0.671122>, <0.228857,0.705138,-0.671122>,
			<0.23754,0.682778,-0.690934>, <0.255499,0.704247,-0.662387>, <0.313289,-0.708881,-0.631932>, <0.313289,0.708881,-0.631932>,
			<0.31393,-0.708789,0.631717>, <0.31393,0.708789,0.631717>, <0.315083,-0.703978,-0.636505>, <0.315317,-0.704063,0.636294>,
			<0.315083,0.703978,-0.636505>, <0.315317,0.704063,0.636294>, <0.322667,0.696809,0.64058>, <0.334199,-0.696497,0.634982>,
			<0.335139,0.703631,-0.626566>, <0.340987,-0.695671,-0.632273>, <0.362897,0.707041,0.606958>, <0.372543,-0.710771,0.596671>,
			<0.373258,0.711605,-0.595229>, <0.378747,-0.710324,-0.593288>, <0.402386,-0.710807,0.576922>, <0.408912,-0.711214,-0.571809>,
			<0.408847,0.710107,0.573229>, <0.421279,0.715129,-0.557776>, <0.453802,-0.695319,0.55731>, <0.457454,0.695914,0.553569>,
			<0.458044,-0.694466,-0.554899>, <0.465282,-0.708282,0.530896>, <0.465282,0.708282,0.530896>, <0.465507,-0.708364,-0.530588>,
			<0.465507,0.708364,-0.530588>, <0.468173,-0.70332,-0.534934>, <0.468476,-0.703433,0.534521>, <0.467521,0.698215,-0.542144>,
			<0.468173,0.70332,-0.534934>, <0.468476,0.703433,0.534521>, <0.530896,-0.708282,-0.465282>, <0.530588,-0.708364,0.465507>,
			<0.530896,0.708282,-0.465282>, <0.530588,0.708364,0.465507>, <0.534521,-0.703433,-0.468476>, <0.534934,-0.70332,0.468173>,
			<0.534521,0.703433,-0.468476>, <0.534934,0.70332,0.468173>, <0.543647,0.697424,0.466956>, <0.550663,0.700871,-0.453376>,
			<0.55382,-0.693984,0.460077>, <0.558629,-0.694476,-0.453472>, <0.562558,0.710419,0.422887>, <0.572623,-0.711334,0.407563>,
			<0.57389,-0.712565,-0.403611>, <0.573818,0.710173,-0.407906>, <0.593047,-0.710052,0.379632>, <0.597249,0.709397,0.374231>,
			<0.59842,-0.709075,-0.372969>, <0.603389,0.71174,-0.35965>, <0.631303,0.698946,0.336052>, <0.631717,-0.708789,-0.31393>,
			<0.631932,-0.708881,0.313289>, <0.631717,0.708789,-0.31393>, <0.631932,0.708881,0.313289>, <0.633641,-0.696688,-0.336339>,
			<0.634462,-0.6937,0.340938>, <0.636294,-0.704063,-0.315317>, <0.636294,0.704063,-0.315317>, <0.636505,-0.703978,0.315083>,
			<0.636505,0.703978,0.315083>, <0.642495,0.695651,-0.321357>, <0.668166,-0.70834,-0.227613>, <0.668425,-0.708195,0.227305>,
			<0.668166,0.70834,-0.227613>, <0.668425,0.708195,0.227305>, <0.671231,-0.705185,-0.228391>, <0.671122,-0.705138,0.228857>,
			<0.671231,0.705185,-0.228391>, <0.671122,0.705138,0.228857>, <0.675041,-0.693457,0.251868>, <0.677297,0.695674,-0.239388>,
			<0.682217,0.695816,0.224544>, <0.681816,0.710523,0.174023>, <0.683406,0.699201,-0.209936>, <0.685443,-0.711909,-0.152819>,
			<0.687931,-0.694067,0.212185>, <0.690856,-0.692891,-0.206446>, <0.693117,-0.710526,0.121414>, <0.696266,-0.665144,0.269811>,
			<0.696259,0.710851,-0.099569>, <0.697925,-0.706796,-0.115499>, <0.697823,0.70656,0.11754>, <0.701078,-0.712442,-0.030281>,
			<0.702259,0.711781,0.014141>, <0.705293,-0.707374,-0.046736>, <0.705402,-0.707219,0.047428>, <0.704604,0.673191,-0.224382>,
			<0.705293,0.707374,-0.046736>, <0.705402,0.707219,0.047428>, <0.705989,-0.706658,-0.047054>, <0.705989,0.706658,-0.047054>,
			<0.706684,-0.705942,-0.047371>, <0.706734,-0.705869,0.047697>, <0.706684,0.705942,-0.047371>, <0.706734,0.705869,0.047697>,
			<0.713641,0.697186,0.068179>, <0.716399,-0.694228,-0.069426>, <0.719122,0.694046,0.034106>, <0.722227,-0.691247,-0.023771>
		}
		face_indices {
			1120,
			<559, 548, 503>, <559, 503, 536>, <548, 470, 424>, <548, 424, 503>,
			<470, 382, 354>, <470, 354, 424>, <382, 282, 278>, <382, 278, 354>,
			<282, 194, 216>, <282, 216, 278>, <194, 111, 150>, <194, 150, 216>,
			<111, 26, 70>, <111, 70, 150>, <26, 11, 53>, <26, 53, 70>,
			<11, 25, 69>, <11, 69, 53>, <25, 110, 149>, <25, 149, 69>,
			<110, 193, 215>, <110, 215, 149>, <193, 279, 277>, <193, 277, 215>,
			<279, 381, 353>, <279, 353, 277>, <381, 469, 423>, <381, 423, 353>,
			<469, 547, 502>, <469, 502, 423>, <547, 559, 536>, <547, 536, 502>,
			<503, 458, 487>, <503, 487, 536>, <424, 400, 458>, <424, 458, 503>,
			<354, 330, 400>, <354, 400, 424>, <278, 281, 330>, <278, 330, 354>,
			<216, 243, 281>, <216, 281, 278>, <150, 177, 243>, <150, 243, 216>,
			<70, 128, 177>, <70, 177, 150>, <53, 101, 128>, <53, 128, 70>,
			<69, 127, 101>, <69, 101, 53>, <149, 176, 127>, <149, 127, 69>,
			<215, 242, 176>, <215, 176, 149>, <277, 280, 242>, <277, 242, 215>,
			<353, 329, 280>, <353, 280, 277>, <423, 399, 329>, <423, 329, 353>,
			<502, 457, 399>, <502, 399, 423>, <536, 487, 457>, <536, 457, 502>,
			<505, 548, 559>, <505, 559, 537>, <426, 470, 548>, <426, 548, 505>,
			<356, 382, 470>, <356, 470, 426>, <284, 282, 382>, <284, 382, 356>,
			<218, 194, 282>, <218, 282, 284>, <152, 111, 194>, <152, 194, 218>,
			<72, 26, 111>, <72, 111, 152>, <54, 11, 26>, <54, 26, 72>,
			<71, 25, 11>, <71, 11, 54>, <151, 110, 25>, <151, 25, 71>,
			<217, 193, 110>, <217, 110, 151>, <283, 279, 193>, <283, 193, 217>,
			<355, 381, 279>, <355, 279, 283>, <425, 469, 381>, <425, 381, 355>,
			<504, 547, 469>, <504, 469, 425>, <537, 559, 547>, <537, 547, 504>,
			<487, 458, 505>, <487, 505, 537>, <458, 400, 426>, <458, 426, 505>,
			<400, 330, 356>, <400, 356, 426>, <330, 281, 284>, <330, 284, 356>,
			<281, 243, 218>, <281, 218, 284>, <243, 177, 152>, <243, 152, 218>,
			<177, 128, 72>, <177, 72, 152>, <128, 101, 54>, <128, 54, 72>,
			<101, 127, 71>, <101, 71, 54>, <127, 176, 151>, <127, 151, 71>,
			<176, 242, 217>, <176, 217, 151>, <242, 280, 283>, <242, 283, 217>,
			<280, 329, 355>, <280, 355, 283>, <329, 399, 425>, <329, 425, 355>,
			<399, 457, 504>, <399, 504, 425>, <457, 487, 537>, <457, 537, 504>,
			<566, 550, 507>, <566, 507, 538>, <550, 472, 428>, <550, 428, 507>,
			<472, 384, 358>, <472, 358, 428>, <384, 290, 286>, <384, 286, 358>,
			<290, 196, 220>, <290, 220, 286>, <196, 113, 154>, <196, 154, 220>,
			<113, 28, 74>, <113, 74, 154>, <28, 12, 55>, <28, 55, 74>,
			<12, 27, 73>, <12, 73, 55>, <27, 112, 153>, <27, 153, 73>,
			<112, 195, 219>, <112, 219, 153>, <195, 287, 285>, <195, 285, 219>,
			<287, 383, 357>, <287, 357, 285>, <383, 471, 427>, <383, 427, 357>,
			<471, 549, 506>, <471, 506, 427>, <549, 566, 538>, <549, 538, 506>,
			<507, 460, 488>, <507, 488, 538>, <428, 408, 460>, <428, 460, 507>,
			<358, 332, 408>, <358, 408, 428>, <286, 289, 332>, <286, 332, 358>,
			<220, 245, 289>, <220, 289, 286>, <154, 179, 245>, <154, 245, 220>,
			<74, 130, 179>, <74, 179, 154>, <55, 102, 130>, <55, 130, 74>,
			<73, 129, 102>, <73, 102, 55>, <153, 178, 129>, <153, 129, 73>,
			<219, 244, 178>, <219, 178, 153>, <285, 288, 244>, <285, 244, 219>,
			<357, 331, 288>, <357, 288, 285>, <427, 407, 331>, <427, 331, 357>,
			<506, 459, 407>, <506, 407, 427>, <538, 488, 459>, <538, 459, 506>,
			<509, 550, 566>, <509, 566, 539>, <430, 472, 550>, <430, 550, 509>,
			<360, 384, 472>, <360, 472, 430>, <292, 290, 384>, <292, 384, 360>,
			<222, 196, 290>, <222, 290, 292>, <156, 113, 196>, <156, 196, 222>,
			<76, 28, 113>, <76, 113, 156>, <56, 12, 28>, <56, 28, 76>,
			<75, 27, 12>, <75, 12, 56>, <155, 112, 27>, <155, 27, 75>,
			<221, 195, 112>, <221, 112, 155>, <291, 287, 195>, <291, 195, 221>,
			<359, 383, 287>, <359, 287, 291>, <429, 471, 383>, <429, 383, 359>,
			<508, 549, 471>, <508, 471, 429>, <539, 566, 549>, <539, 549, 508>,
			<488, 460, 509>, <488, 509, 539>, <460, 408, 430>, <460, 430, 509>,
			<408, 332, 360>, <408, 360, 430>, <332, 289, 292>, <332, 292, 360>,
			<289, 245, 222>, <289, 222, 292>, <245, 179, 156>, <245, 156, 222>,
			<179, 130, 76>, <179, 76, 156>, <130, 102, 56>, <130, 56, 76>,
			<102, 129, 75>, <102, 75, 56>, <129, 178, 155>, <129, 155, 75>,
			<178, 244, 221>, <178, 221, 155>, <244, 288, 291>, <244, 291, 221>,
			<288, 331, 359>, <288, 359, 291>, <331, 407, 429>, <331, 429, 359>,
			<407, 459, 508>, <407, 508, 429>, <459, 488, 539>, <459, 539, 508>,
			<567, 552, 509>, <567, 509, 539>, <552, 474, 430>, <552, 430, 509>,
			<474, 386, 360>, <474, 360, 430>, <386, 296, 292>, <386, 292, 360>,
			<296, 198, 222>, <296, 222, 292>, <198, 115, 156>, <198, 156, 222>,
			<115, 30, 76>, <115, 76, 156>, <30, 13, 56>, <30, 56, 76>,
			<13, 29, 75>, <13, 75, 56>, <29, 114, 155>, <29, 155, 75>,
			<114, 197, 221>, <114, 221, 155>, <197, 293, 291>, <197, 291, 221>,
			<293, 385, 359>, <293, 359, 291>, <385, 473, 429>, <385, 429, 359>,
			<473, 551, 508>, <473, 508, 429>, <551, 567, 539>, <551, 539, 508>,
			<509, 462, 489>, <509, 489, 539>, <430, 410, 462>, <430, 462, 509>,
			<360, 334, 410>, <360, 410, 430>, <292, 295, 334>, <292, 334, 360>,
			<222, 247, 295>, <222, 295, 292>, <156, 181, 247>, <156, 247, 222>,
			<76, 132, 181>, <76, 181, 156>, <56, 103, 132>, <56, 132, 76>,
			<75, 131, 103>, <75, 103, 56>, <155, 180, 131>, <155, 131, 75>,
			<221, 246, 180>, <221, 180, 155>, <291, 294, 246>, <291, 246, 221>,
			<359, 333, 294>, <359, 294, 291>, <429, 409, 333>, <429, 333, 359>,
			<508, 461, 409>, <508, 409, 429>, <539, 489, 461>, <539, 461, 508>,
			<511, 552, 567>, <511, 567, 540>, <432, 474, 552>, <432, 552, 511>,
			<362, 386, 474>, <362, 474, 432>, <298, 296, 386>, <298, 386, 362>,
			<224, 198, 296>, <224, 296, 298>, <158, 115, 198>, <158, 198, 224>,
			<78, 30, 115>, <78, 115, 158>, <57, 13, 30>, <57, 30, 78>,
			<77, 29, 13>, <77, 13, 57>, <157, 114, 29>, <157, 29, 77>,
			<223, 197, 114>, <223, 114, 157>, <297, 293, 197>, <297, 197, 223>,
			<361, 385, 293>, <361, 293, 297>, <431, 473, 385>, <431, 385, 361>,
			<510, 551, 473>, <510, 473, 431>, <540, 567, 551>, <540, 551, 510>,
			<489, 462, 511>, <489, 511, 540>, <462, 410, 432>, <462, 432, 511>,
			<410, 334, 362>, <410, 362, 432>, <334, 295, 298>, <334, 298, 362>,
			<295, 247, 224>, <295, 224, 298>, <247, 181, 158>, <247, 158, 224>,
			<181, 132, 78>, <181, 78, 158>, <132, 103, 57>, <132, 57, 78>,
			<103, 131, 77>, <103, 77, 57>, <131, 180, 157>, <131, 157, 77>,
			<180, 246, 223>, <180, 223, 157>, <246, 294, 297>, <246, 297, 223>,
			<294, 333, 361>, <294, 361, 297>, <333, 409, 431>, <333, 431, 361>,
			<409, 461, 510>, <409, 510, 431>, <461, 489, 540>, <461, 540, 510>,
			<31, 79, 14>, <31, 14, 0>, <79, 159, 104>, <79, 104, 14>,
			<159, 225, 187>, <159, 187, 104>, <225, 311, 265>, <225, 265, 187>,
			<311, 363, 375>, <311, 375, 265>, <363, 433, 463>, <363, 463, 375>,
			<433, 512, 541>, <433, 541, 463>, <512, 524, 560>, <512, 560, 541>,
			<524, 496, 553>, <524, 553, 560>, <496, 417, 475>, <496, 475, 553>,
			<417, 347, 387>, <417, 387, 475>, <347, 259, 305>, <347, 305, 387>,
			<259, 210, 199>, <259, 199, 305>, <210, 144, 116>, <210, 116, 199>,
			<144, 64, 20>, <144, 20, 116>, <64, 34, 2>, <64, 2, 20>,
			<121, 79, 31>, <90, 121, 31>, <170, 159, 79>, <121, 170, 79>,
			<236, 225, 159>, <170, 236, 159>, <271, 311, 225>, <236, 271, 225>,
			<323, 363, 311>, <271, 323, 311>, <393, 433, 363>, <323, 393, 363>,
			<445, 512, 433>, <393, 445, 433>, <481, 524, 512>, <445, 481, 512>,
			<451, 496, 524>, <481, 451, 524>, <401, 417, 496>, <451, 401, 496>,
			<335, 347, 417>, <401, 335, 417>, <299, 259, 347>, <335, 299, 347>,
			<248, 210, 259>, <299, 248, 259>, <182, 144, 210>, <248, 182, 210>,
			<133, 64, 144>, <182, 133, 144>, <92, 34, 64>, <133, 92, 64>,
			<14, 58, 32>, <0, 14, 32>, <104, 138, 58>, <14, 104, 58>,
			<187, 204, 138>, <104, 187, 138>, <265, 253, 204>, <187, 265, 204>,
			<375, 341, 253>, <265, 375, 253>, <463, 411, 341>, <375, 463, 341>,
			<541, 490, 411>, <463, 541, 411>, <560, 525, 490>, <541, 560, 490>,
			<553, 518, 525>, <560, 553, 525>, <475, 439, 518>, <553, 475, 518>,
			<387, 369, 439>, <475, 387, 439>, <305, 317, 369>, <387, 305, 369>,
			<199, 231, 317>, <305, 199, 317>, <116, 165, 231>, <199, 116, 231>,
			<20, 85, 165>, <116, 20, 165>, <2, 36, 85>, <20, 2, 85>,
			<32, 58, 121>, <32, 121, 90>, <58, 138, 170>, <58, 170, 121>,
			<138, 204, 236>, <138, 236, 170>, <204, 253, 271>, <204, 271, 236>,
			<253, 341, 323>, <253, 323, 271>, <341, 411, 393>, <341, 393, 323>,
			<411, 490, 445>, <411, 445, 393>, <490, 525, 481>, <490, 481, 445>,
			<525, 518, 451>, <525, 451, 481>, <518, 439, 401>, <518, 401, 451>,
			<439, 369, 335>, <439, 335, 401>, <369, 317, 299>, <369, 299, 335>,
			<317, 231, 248>, <317, 248, 299>, <231, 165, 182>, <231, 182, 248>,
			<165, 85, 133>, <165, 133, 182>, <85, 36, 92>, <85, 92, 133>,
			<33, 80, 15>, <33, 15, 1>, <80, 160, 105>, <80, 105, 15>,
			<160, 226, 188>, <160, 188, 105>, <226, 312, 266>, <226, 266, 188>,
			<312, 364, 376>, <312, 376, 266>, <364, 434, 464>, <364, 464, 376>,
			<434, 513, 542>, <434, 542, 464>, <513, 526, 561>, <513, 561, 542>,
			<526, 497, 554>, <526, 554, 561>, <497, 418, 476>, <497, 476, 554>,
			<418, 348, 388>, <418, 388, 476>, <348, 260, 306>, <348, 306, 388>,
			<260, 211, 200>, <260, 200, 306>, <211, 145, 117>, <211, 117, 200>,
			<145, 65, 21>, <145, 21, 117>, <65, 38, 4>, <65, 4, 21>,
			<122, 80, 33>, <91, 122, 33>, <171, 160, 80>, <122, 171, 80>,
			<237, 226, 160>, <171, 237, 160>, <272, 312, 226>, <237, 272, 226>,
			<324, 364, 312>, <272, 324, 312>, <394, 434, 364>, <324, 394, 364>,
			<446, 513, 434>, <394, 446, 434>, <482, 526, 513>, <446, 482, 513>,
			<452, 497, 526>, <482, 452, 526>, <402, 418, 497>, <452, 402, 497>,
			<336, 348, 418>, <402, 336, 418>, <300, 260, 348>, <336, 300, 348>,
			<249, 211, 260>, <300, 249, 260>, <183, 145, 211>, <249, 183, 211>,
			<134, 65, 145>, <183, 134, 145>, <94, 38, 65>, <134, 94, 65>,
			<15, 59, 35>, <1, 15, 35>, <105, 139, 59>, <15, 105, 59>,
			<188, 205, 139>, <105, 188, 139>, <266, 254, 205>, <188, 266, 205>,
			<376, 342, 254>, <266, 376, 254>, <464, 412, 342>, <376, 464, 342>,
			<542, 491, 412>, <464, 542, 412>, <561, 527, 491>, <542, 561, 491>,
			<554, 519, 527>, <561, 554, 527>, <476, 440, 519>, <554, 476, 519>,
			<388, 370, 440>, <476, 388, 440>, <306, 318, 370>, <388, 306, 370>,
			<200, 232, 318>, <306, 200, 318>, <117, 166, 232>, <200, 117, 232>,
			<21, 86, 166>, <117, 21, 166>, <4, 40, 86>, <21, 4, 86>,
			<35, 59, 122>, <35, 122, 91>, <59, 139, 171>, <59, 171, 122>,
			<139, 205, 237>, <139, 237, 171>, <205, 254, 272>, <205, 272, 237>,
			<254, 342, 324>, <254, 324, 272>, <342, 412, 394>, <342, 394, 324>,
			<412, 491, 446>, <412, 446, 394>, <491, 527, 482>, <491, 482, 446>,
			<527, 519, 452>, <527, 452, 482>, <519, 440, 402>, <519, 402, 452>,
			<440, 370, 336>, <440, 336, 402>, <370, 318, 300>, <370, 300, 336>,
			<318, 232, 249>, <318, 249, 300>, <232, 166, 183>, <232, 183, 249>,
			<166, 86, 134>, <166, 134, 183>, <86, 40, 94>, <86, 94, 134>,
			<37, 81, 16>, <37, 16, 3>, <81, 161, 106>, <81, 106, 16>,
			<161, 227, 189>, <161, 189, 106>, <227, 313, 267>, <227, 267, 189>,
			<313, 365, 377>, <313, 377, 267>, <365, 435, 465>, <365, 465, 377>,
			<435, 514, 543>, <435, 543, 465>, <514, 528, 562>, <514, 562, 543>,
			<528, 498, 555>, <528, 555, 562>, <498, 419, 477>, <498, 477, 555>,
			<419, 349, 389>, <419, 389, 477>, <349, 261, 307>, <349, 307, 389>,
			<261, 212, 201>, <261, 201, 307>, <212, 146, 118>, <212, 118, 201>,
			<146, 66, 22>, <146, 22, 118>, <66, 42, 6>, <66, 6, 22>,
			<123, 81, 37>, <93, 123, 37>, <172, 161, 81>, <123, 172, 81>,
			<238, 227, 161>, <172, 238, 161>, <273, 313, 227>, <238, 273, 227>,
			<325, 365, 313>, <273, 325, 313>, <395, 435, 365>, <325, 395, 365>,
			<447, 514, 435>, <395, 447, 435>, <483, 528, 514>, <447, 483, 514>,
			<453, 498, 528>, <483, 453, 528>, <403, 419, 498>, <453, 403, 498>,
			<337, 349, 419>, <403, 337, 419>, <301, 261, 349>, <337, 301, 349>,
			<250, 212, 261>, <301, 250, 261>, <184, 146, 212>, <250, 184, 212>,
			<135, 66, 146>, <184, 135, 146>, <96, 42, 66>, <135, 96, 66>,
			<16, 60, 39>, <3, 16, 39>, <106, 140, 60>, <16, 106, 60>,
			<189, 206, 140>, <106, 189, 140>, <267, 255, 206>, <189, 267, 206>,
			<377, 343, 255>, <267, 377, 255>, <465, 413, 343>, <377, 465, 343>,
			<543, 492, 413>, <465, 543, 413>, <562, 529, 492>, <543, 562, 492>,
			<555, 520, 529>, <562, 555, 529>, <477, 441, 520>, <555, 477, 520>,
			<389, 371, 441>, <477, 389, 441>, <307, 319, 371>, <389, 307, 371>,
			<201, 233, 319>, <307, 201, 319>, <118, 167, 233>, <201, 118, 233>,
			<22, 87, 167>, <118, 22, 167>, <6, 44, 87>, <22, 6, 87>,
			<39, 60, 123>, <39, 123, 93>, <60, 140, 172>, <60, 172, 123>,
			<140, 206, 238>, <140, 238, 172>, <206, 255, 273>, <206, 273, 238>,
			<255, 343, 325>, <255, 325, 273>, <343, 413, 395>, <343, 395, 325>,
			<413, 492, 447>, <413, 447, 395>, <492, 529, 483>, <492, 483, 447>,
			<529, 520, 453>, <529, 453, 483>, <520, 441, 403>, <520, 403, 453>,
			<441, 371, 337>, <441, 337, 403>, <371, 319, 301>, <371, 301, 337>,
			<319, 233, 250>, <319, 250, 301>, <233, 167, 184>, <233, 184, 250>,
			<167, 87, 135>, <167, 135, 184>, <87, 44, 96>, <87, 96, 135>,
			<41, 82, 17>, <41, 17, 5>, <82, 162, 107>, <82, 107, 17>,
			<162, 228, 190>, <162, 190, 107>, <228, 314, 268>, <228, 268, 190>,
			<314, 366, 378>, <314, 378, 268>, <366, 436, 466>, <366, 466, 378>,
			<436, 515, 544>, <436, 544, 466>, <515, 530, 563>, <515, 563, 544>,
			<530, 499, 556>, <530, 556, 563>, <499, 420, 478>, <499, 478, 556>,
			<420, 350, 390>, <420, 390, 478>, <350, 262, 308>, <350, 308, 390>,
			<262, 213, 202>, <262, 202, 308>, <213, 147, 119>, <213, 119, 202>,
			<147, 67, 23>, <147, 23, 119>, <67, 46, 8>, <67, 8, 23>,
			<124, 82, 41>, <95, 124, 41>, <173, 162, 82>, <124, 173, 82>,
			<239, 228, 162>, <173, 239, 162>, <274, 314, 228>, <239, 274, 228>,
			<326, 366, 314>, <274, 326, 314>, <396, 436, 366>, <326, 396, 366>,
			<448, 515, 436>, <396, 448, 436>, <484, 530, 515>, <448, 484, 515>,
			<454, 499, 530>, <484, 454, 530>, <404, 420, 499>, <454, 404, 499>,
			<338, 350, 420>, <404, 338, 420>, <302, 262, 350>, <338, 302, 350>,
			<251, 213, 262>, <302, 251, 262>, <185, 147, 213>, <251, 185, 213>,
			<136, 67, 147>, <185, 136, 147>, <98, 46, 67>, <136, 98, 67>,
			<17, 61, 43>, <5, 17, 43>, <107, 141, 61>, <17, 107, 61>,
			<190, 207, 141>, <107, 190, 141>, <268, 256, 207>, <190, 268, 207>,
			<378, 344, 256>, <268, 378, 256>, <466, 414, 344>, <378, 466, 344>,
			<544, 493, 414>, <466, 544, 414>, <563, 531, 493>, <544, 563, 493>,
			<556, 521, 531>, <563, 556, 531>, <478, 442, 521>, <556, 478, 521>,
			<390, 372, 442>, <478, 390, 442>, <308, 320, 372>, <390, 308, 372>,
			<202, 234, 320>, <308, 202, 320>, <119, 168, 234>, <202, 119, 234>,
			<23, 88, 168>, <119, 23, 168>, <8, 48, 88>, <23, 8, 88>,
			<43, 61, 124>, <43, 124, 95>, <61, 141, 173>, <61, 173, 124>,
			<141, 207, 239>, <141, 239, 173>, <207, 256, 274>, <207, 274, 239>,
			<256, 344, 326>, <256, 326, 274>, <344, 414, 396>, <344, 396, 326>,
			<414, 493, 448>, <414, 448, 396>, <493, 531, 484>, <493, 484, 448>,
			<531, 521, 454>, <531, 454, 484>, <521, 442, 404>, <521, 404, 454>,
			<442, 372, 338>, <442, 338, 404>, <372, 320, 302>, <372, 302, 338>,
			<320, 234, 251>, <320, 251, 302>, <234, 168, 185>, <234, 185, 251>,
			<168, 88, 136>, <168, 136, 185>, <88, 48, 98>, <88, 98, 136>,
			<45, 83, 18>, <45, 18, 7>, <83, 163, 108>, <83, 108, 18>,
			<163, 229, 191>, <163, 191, 108>, <229, 315, 269>, <229, 269, 191>,
			<315, 367, 379>, <315, 379, 269>, <367, 437, 467>, <367, 467, 379>,
			<437, 516, 545>, <437, 545, 467>, <516, 532, 564>, <516, 564, 545>,
			<532, 500, 557>, <532, 557, 564>, <500, 421, 479>, <500, 479, 557>,
			<421, 351, 391>, <421, 391, 479>, <351, 263, 309>, <351, 309, 391>,
			<263, 214, 203>, <263, 203, 309>, <214, 148, 120>, <214, 120, 203>,
			<148, 68, 24>, <148, 24, 120>, <68, 50, 10>, <68, 10, 24>,
			<125, 83, 45>, <97, 125, 45>, <174, 163, 83>, <125, 174, 83>,
			<240, 229, 163>, <174, 240, 163>, <275, 315, 229>, <240, 275, 229>,
			<327, 367, 315>, <275, 327, 315>, <397, 437, 367>, <327, 397, 367>,
			<449, 516, 437>, <397, 449, 437>, <485, 532, 516>, <449, 485, 516>,
			<455, 500, 532>, <485, 455, 532>, <405, 421, 500>, <455, 405, 500>,
			<339, 351, 421>, <405, 339, 421>, <303, 263, 351>, <339, 303, 351>,
			<252, 214, 263>, <303, 252, 263>, <186, 148, 214>, <252, 186, 214>,
			<137, 68, 148>, <186, 137, 148>, <100, 50, 68>, <137, 100, 68>,
			<18, 62, 47>, <7, 18, 47>, <108, 142, 62>, <18, 108, 62>,
			<191, 208, 142>, <108, 191, 142>, <269, 257, 208>, <191, 269, 208>,
			<379, 345, 257>, <269, 379, 257>, <467, 415, 345>, <379, 467, 345>,
			<545, 494, 415>, <467, 545, 415>, <564, 533, 494>, <545, 564, 494>,
			<557, 522, 533>, <564, 557, 533>, <479, 443, 522>, <557, 479, 522>,
			<391, 373, 443>, <479, 391, 443>, <309, 321, 373>, <391, 309, 373>,
			<203, 235, 321>, <309, 203, 321>, <120, 169, 235>, <203, 120, 235>,
			<24, 89, 169>, <120, 24, 169>, <10, 52, 89>, <24, 10, 89>,
			<47, 62, 125>, <47, 125, 97>, <62, 142, 174>, <62, 174, 125>,
			<142, 208, 240>, <142, 240, 174>, <208, 257, 275>, <208, 275, 240>,
			<257, 345, 327>, <257, 327, 275>, <345, 415, 397>, <345, 397, 327>,
			<415, 494, 449>, <415, 449, 397>, <494, 533, 485>, <494, 485, 449>,
			<533, 522, 455>, <533, 455, 485>, <522, 443, 405>, <522, 405, 455>,
			<443, 373, 339>, <443, 339, 405>, <373, 321, 303>, <373, 303, 339>,
			<321, 235, 252>, <321, 252, 303>, <235, 169, 186>, <235, 186, 252>,
			<169, 89, 137>, <169, 137, 186>, <89, 52, 100>, <89, 100, 137>,
			<49, 84, 19>, <49, 19, 9>, <84, 164, 109>, <84, 109, 19>,
			<164, 230, 192>, <164, 192, 109>, <230, 316, 270>, <230, 270, 192>,
			<316, 368, 380>, <316, 380, 270>, <368, 438, 468>, <368, 468, 380>,
			<438, 517, 546>, <438, 546, 468>, <517, 534, 565>, <517, 565, 546>,
			<534, 501, 558>, <534, 558, 565>, <501, 422, 480>, <501, 480, 558>,
			<422, 352, 392>, <422, 392, 480>, <352, 264, 310>, <352, 310, 392>,
			<126, 84, 49>, <99, 126, 49>, <175, 164, 84>, <126, 175, 84>,
			<241, 230, 164>, <175, 241, 164>, <276, 316, 230>, <241, 276, 230>,
			<328, 368, 316>, <276, 328, 316>, <398, 438, 368>, <328, 398, 368>,
			<450, 517, 438>, <398, 450, 438>, <486, 534, 517>, <450, 486, 517>,
			<456, 501, 534>, <486, 456, 534>, <406, 422, 501>, <456, 406, 501>,
			<340, 352, 422>, <406, 340, 422>, <304, 264, 352>, <340, 304, 352>,
			<19, 63, 51>, <9, 19, 51>, <109, 143, 63>, <19, 109, 63>,
			<192, 209, 143>, <109, 192, 143>, <270, 258, 209>, <192, 270, 209>,
			<380, 346, 258>, <270, 380, 258>, <468, 416, 346>, <380, 468, 346>,
			<546, 495, 416>, <468, 546, 416>, <565, 535, 495>, <546, 565, 495>,
			<558, 523, 535>, <565, 558, 535>, <480, 444, 523>, <558, 480, 523>,
			<392, 374, 444>, <480, 392, 444>, <310, 322, 374>, <392, 310, 374>,
			<51, 63, 126>, <51, 126, 99>, <63, 143, 175>, <63, 175, 126>,
			<143, 209, 241>, <143, 241, 175>, <209, 258, 276>, <209, 276, 241>,
			<258, 346, 328>, <258, 328, 276>, <346, 416, 398>, <346, 398, 328>,
			<416, 495, 450>, <416, 450, 398>, <495, 535, 486>, <495, 486, 450>,
			<535, 523, 456>, <535, 456, 486>, <523, 444, 406>, <523, 406, 456>,
			<444, 374, 340>, <444, 340, 406>, <374, 322, 304>, <374, 304, 340>
		}
		normal_indices {
			1120,
			<12, 48, 36>, <12, 36, 13>, <48, 78, 68>, <48, 68, 36>,
			<78, 109, 99>, <78, 99, 68>, <109, 147, 136>, <109, 136, 99>,
			<147, 179, 169>, <147, 169, 136>, <179, 212, 204>, <179, 204, 169>,
			<212, 244, 233>, <212, 233, 204>, <244, 269, 268>, <244, 268, 233>,
			<269, 234, 245>, <269, 245, 268>, <234, 202, 213>, <234, 213, 245>,
			<202, 173, 181>, <202, 181, 213>, <173, 137, 148>, <173, 148, 181>,
			<137, 101, 111>, <137, 111, 148>, <101, 69, 76>, <101, 76, 111>,
			<69, 37, 49>, <69, 49, 76>, <37, 12, 13>, <37, 13, 49>,
			<249, 240, 275>, <249, 275, 274>, <217, 209, 240>, <217, 240, 249>,
			<185, 172, 209>, <185, 209, 217>, <146, 129, 172>, <146, 172, 185>,
			<105, 97, 129>, <105, 129, 146>, <73, 65, 97>, <73, 97, 105>,
			<43, 33, 65>, <43, 65, 73>, <7, 6, 33>, <7, 33, 43>,
			<32, 41, 6>, <32, 6, 7>, <64, 72, 41>, <64, 41, 32>,
			<96, 108, 72>, <96, 72, 64>, <134, 151, 108>, <134, 108, 96>,
			<175, 184, 151>, <175, 151, 134>, <208, 216, 184>, <208, 184, 175>,
			<238, 248, 216>, <238, 216, 208>, <274, 275, 248>, <274, 248, 238>,
			<34, 45, 10>, <34, 10, 11>, <66, 77, 45>, <66, 45, 34>,
			<98, 106, 77>, <98, 77, 66>, <131, 142, 106>, <131, 106, 98>,
			<168, 178, 142>, <168, 142, 131>, <203, 210, 178>, <203, 178, 168>,
			<231, 242, 210>, <231, 210, 203>, <265, 266, 242>, <265, 242, 231>,
			<243, 232, 266>, <243, 266, 265>, <211, 201, 232>, <211, 232, 243>,
			<180, 170, 201>, <180, 201, 211>, <143, 132, 170>, <143, 170, 180>,
			<110, 100, 132>, <110, 132, 143>, <74, 67, 100>, <74, 100, 110>,
			<46, 35, 67>, <46, 67, 74>, <11, 10, 35>, <11, 35, 46>,
			<273, 239, 247>, <273, 247, 272>, <239, 206, 215>, <239, 215, 247>,
			<206, 171, 183>, <206, 183, 215>, <171, 128, 145>, <171, 145, 183>,
			<128, 95, 104>, <128, 104, 145>, <95, 63, 71>, <95, 71, 104>,
			<63, 30, 42>, <63, 42, 71>, <30, 4, 5>, <30, 5, 42>,
			<4, 39, 29>, <4, 29, 5>, <39, 70, 62>, <39, 62, 29>,
			<70, 107, 94>, <70, 94, 62>, <107, 150, 133>, <107, 133, 94>,
			<150, 182, 174>, <150, 174, 133>, <182, 214, 205>, <182, 205, 174>,
			<214, 246, 237>, <214, 237, 205>, <246, 273, 272>, <246, 272, 237>,
			<12, 48, 36>, <12, 36, 13>, <48, 78, 68>, <48, 68, 36>,
			<78, 109, 99>, <78, 99, 68>, <109, 147, 136>, <109, 136, 99>,
			<147, 179, 169>, <147, 169, 136>, <179, 212, 204>, <179, 204, 169>,
			<212, 244, 233>, <212, 233, 204>, <244, 269, 268>, <244, 268, 233>,
			<269, 234, 245>, <269, 245, 268>, <234, 202, 213>, <234, 213, 245>,
			<202, 173, 181>, <202, 181, 213>, <173, 137, 148>, <173, 148, 181>,
			<137, 101, 111>, <137, 111, 148>, <101, 69, 76>, <101, 76, 111>,
			<69, 37, 49>, <69, 49, 76>, <37, 12, 13>, <37, 13, 49>,
			<249, 240, 275>, <249, 275, 274>, <217, 209, 240>, <217, 240, 249>,
			<185, 172, 209>, <185, 209, 217>, <146, 129, 172>, <146, 172, 185>,
			<105, 97, 129>, <105, 129, 146>, <73, 65, 97>, <73, 97, 105>,
			<43, 33, 65>, <43, 65, 73>, <7, 6, 33>, <7, 33, 43>,
			<32, 41, 6>, <32, 6, 7>, <64, 72, 41>, <64, 41, 32>,
			<96, 108, 72>, <96, 72, 64>, <134, 151, 108>, <134, 108, 96>,
			<175, 184, 151>, <175, 151, 134>, <208, 216, 184>, <208, 184, 175>,
			<238, 248, 216>, <238, 216, 208>, <274, 275, 248>, <274, 248, 238>,
			<34, 45, 10>, <34, 10, 8>, <66, 77, 45>, <66, 45, 34>,
			<98, 106, 77>, <98, 77, 66>, <130, 142, 106>, <130, 106, 98>,
			<168, 178, 142>, <168, 142, 130>, <203, 210, 178>, <203, 178, 168>,
			<231, 242, 210>, <231, 210, 203>, <270, 266, 242>, <270, 242, 231>,
			<243, 232, 266>, <243, 266, 270>, <211, 201, 232>, <211, 232, 243>,
			<180, 170, 201>, <180, 201, 211>, <144, 132, 170>, <144, 170, 180>,
			<110, 100, 132>, <110, 132, 144>, <74, 67, 100>, <74, 100, 110>,
			<46, 35, 67>, <46, 67, 74>, <8, 10, 35>, <8, 35, 46>,
			<273, 239, 247>, <273, 247, 270>, <239, 206, 215>, <239, 215, 247>,
			<206, 171, 183>, <206, 183, 215>, <171, 128, 144>, <171, 144, 183>,
			<128, 95, 104>, <128, 104, 144>, <95, 63, 71>, <95, 71, 104>,
			<63, 30, 42>, <63, 42, 71>, <30, 4, 8>, <30, 8, 42>,
			<4, 39, 29>, <4, 29, 8>, <39, 70, 62>, <39, 62, 29>,
			<70, 107, 94>, <70, 94, 62>, <107, 150, 130>, <107, 130, 94>,
			<150, 182, 174>, <150, 174, 130>, <182, 214, 205>, <182, 205, 174>,
			<214, 246, 237>, <214, 237, 205>, <246, 273, 270>, <246, 270, 237>,
			<12, 48, 36>, <12, 36, 9>, <48, 78, 68>, <48, 68, 36>,
			<78, 109, 99>, <78, 99, 68>, <109, 147, 135>, <109, 135, 99>,
			<147, 179, 169>, <147, 169, 135>, <179, 212, 204>, <179, 204, 169>,
			<212, 244, 233>, <212, 233, 204>, <244, 269, 271>, <244, 271, 233>,
			<269, 234, 245>, <269, 245, 271>, <234, 202, 213>, <234, 213, 245>,
			<202, 173, 181>, <202, 181, 213>, <173, 137, 149>, <173, 149, 181>,
			<137, 101, 111>, <137, 111, 149>, <101, 69, 76>, <101, 76, 111>,
			<69, 37, 49>, <69, 49, 76>, <37, 12, 9>, <37, 9, 49>,
			<249, 240, 275>, <249, 275, 271>, <217, 209, 240>, <217, 240, 249>,
			<185, 172, 209>, <185, 209, 217>, <149, 129, 172>, <149, 172, 185>,
			<105, 97, 129>, <105, 129, 149>, <73, 65, 97>, <73, 97, 105>,
			<43, 33, 65>, <43, 65, 73>, <9, 6, 33>, <9, 33, 43>,
			<32, 41, 6>, <32, 6, 9>, <64, 72, 41>, <64, 41, 32>,
			<96, 108, 72>, <96, 72, 64>, <135, 151, 108>, <135, 108, 96>,
			<175, 184, 151>, <175, 151, 135>, <208, 216, 184>, <208, 184, 175>,
			<238, 248, 216>, <238, 216, 208>, <271, 275, 248>, <271, 248, 238>,
			<34, 45, 10>, <34, 10, 11>, <66, 77, 45>, <66, 45, 34>,
			<98, 106, 77>, <98, 77, 66>, <131, 142, 106>, <131, 106, 98>,
			<168, 178, 142>, <168, 142, 131>, <203, 210, 178>, <203, 178, 168>,
			<231, 242, 210>, <231, 210, 203>, <265, 266, 242>, <265, 242, 231>,
			<243, 232, 266>, <243, 266, 265>, <211, 201, 232>, <211, 232, 243>,
			<180, 170, 201>, <180, 201, 211>, <143, 132, 170>, <143, 170, 180>,
			<110, 100, 132>, <110, 132, 143>, <74, 67, 100>, <74, 100, 110>,
			<46, 35, 67>, <46, 67, 74>, <11, 10, 35>, <11, 35, 46>,
			<273, 239, 247>, <273, 247, 272>, <239, 206, 215>, <239, 215, 247>,
			<206, 171, 183>, <206, 183, 215>, <171, 128, 145>, <171, 145, 183>,
			<128, 95, 104>, <128, 104, 145>, <95, 63, 71>, <95, 71, 104>,
			<63, 30, 42>, <63, 42, 71>, <30, 4, 5>, <30, 5, 42>,
			<4, 39, 29>, <4, 29, 5>, <39, 70, 62>, <39, 62, 29>,
			<70, 107, 94>, <70, 94, 62>, <107, 150, 133>, <107, 133, 94>,
			<150, 182, 174>, <150, 174, 133>, <182, 214, 205>, <182, 205, 174>,
			<214, 246, 237>, <214, 237, 205>, <246, 273, 272>, <246, 272, 237>,
			<251, 225, 241>, <251, 241, 267>, <225, 192, 207>, <225, 207, 241>,
			<192, 158, 167>, <192, 167, 207>, <158, 118, 127>, <158, 127, 167>,
			<118, 84, 93>, <118, 93, 127>, <84, 52, 61>, <84, 61, 93>,
			<52, 21, 27>, <52, 27, 61>, <21, 24, 3>, <21, 3, 27>,
			<24, 55, 38>, <24, 38, 3>, <55, 87, 75>, <55, 75, 38>,
			<87, 121, 112>, <87, 112, 75>, <121, 161, 152>, <121, 152, 112>,
			<161, 196, 186>, <161, 186, 152>, <196, 227, 218>, <196, 218, 186>,
			<227, 262, 252>, <227, 252, 218>, <262, 264, 278>, <262, 278, 252>,
			<18, 26, 1>, <14, 18, 1>, <50, 60, 26>, <18, 50, 26>,
			<82, 92, 60>, <50, 82, 60>, <116, 125, 92>, <82, 116, 92>,
			<156, 165, 125>, <116, 156, 125>, <190, 199, 165>, <156, 190, 165>,
			<222, 230, 199>, <190, 222, 199>, <253, 276, 230>, <222, 253, 230>,
			<260, 254, 276>, <253, 260, 276>, <229, 219, 254>, <260, 229, 254>,
			<197, 188, 219>, <229, 197, 219>, <163, 154, 188>, <197, 163, 188>,
			<123, 114, 154>, <163, 123, 154>, <89, 80, 114>, <123, 89, 114>,
			<57, 44, 80>, <89, 57, 80>, <31, 15, 44>, <57, 31, 44>,
			<261, 257, 279>, <263, 261, 279>, <228, 221, 257>, <261, 228, 257>,
			<195, 189, 221>, <228, 195, 221>, <162, 155, 189>, <195, 162, 189>,
			<122, 115, 155>, <162, 122, 155>, <88, 81, 115>, <122, 88, 115>,
			<56, 47, 81>, <88, 56, 81>, <25, 2, 47>, <56, 25, 47>,
			<20, 22, 2>, <25, 20, 2>, <51, 58, 22>, <20, 51, 22>,
			<83, 90, 58>, <51, 83, 58>, <117, 124, 90>, <83, 117, 90>,
			<157, 164, 124>, <117, 157, 124>, <191, 198, 164>, <157, 191, 164>,
			<223, 236, 198>, <191, 223, 198>, <250, 259, 236>, <223, 250, 236>,
			<28, 54, 40>, <28, 40, 17>, <54, 86, 79>, <54, 79, 40>,
			<86, 120, 113>, <86, 113, 79>, <120, 160, 153>, <120, 153, 113>,
			<160, 194, 187>, <160, 187, 153>, <194, 226, 220>, <194, 220, 187>,
			<226, 258, 256>, <226, 256, 220>, <258, 255, 277>, <258, 277, 256>,
			<255, 224, 235>, <255, 235, 277>, <224, 193, 200>, <224, 200, 235>,
			<193, 159, 166>, <193, 166, 200>, <159, 119, 126>, <159, 126, 166>,
			<119, 85, 91>, <119, 91, 126>, <85, 53, 59>, <85, 59, 91>,
			<53, 19, 23>, <53, 23, 59>, <19, 16, 0>, <19, 0, 23>,
			<251, 225, 241>, <251, 241, 267>, <225, 192, 207>, <225, 207, 241>,
			<192, 158, 167>, <192, 167, 207>, <158, 118, 127>, <158, 127, 167>,
			<118, 84, 93>, <118, 93, 127>, <84, 52, 61>, <84, 61, 93>,
			<52, 21, 27>, <52, 27, 61>, <21, 24, 3>, <21, 3, 27>,
			<24, 55, 38>, <24, 38, 3>, <55, 87, 75>, <55, 75, 38>,
			<87, 121, 112>, <87, 112, 75>, <121, 161, 152>, <121, 152, 112>,
			<161, 196, 186>, <161, 186, 152>, <196, 227, 218>, <196, 218, 186>,
			<227, 262, 252>, <227, 252, 218>, <262, 264, 278>, <262, 278, 252>,
			<18, 26, 1>, <14, 18, 1>, <50, 60, 26>, <18, 50, 26>,
			<82, 92, 60>, <50, 82, 60>, <116, 125, 92>, <82, 116, 92>,
			<156, 165, 125>, <116, 156, 125>, <190, 199, 165>, <156, 190, 165>,
			<222, 230, 199>, <190, 222, 199>, <253, 276, 230>, <222, 253, 230>,
			<260, 254, 276>, <253, 260, 276>, <229, 219, 254>, <260, 229, 254>,
			<197, 188, 219>, <229, 197, 219>, <163, 154, 188>, <197, 163, 188>,
			<123, 114, 154>, <163, 123, 154>, <89, 80, 114>, <123, 89, 114>,
			<57, 44, 80>, <89, 57, 80>, <31, 15, 44>, <57, 31, 44>,
			<261, 257, 279>, <263, 261, 279>, <228, 221, 257>, <261, 228, 257>,
			<195, 189, 221>, <228, 195, 221>, <162, 155, 189>, <195, 162, 189>,
			<122, 115, 155>, <162, 122, 155>, <88, 81, 115>, <122, 88, 115>,
			<56, 47, 81>, <88, 56, 81>, <25, 2, 47>, <56, 25, 47>,
			<20, 22, 2>, <25, 20, 2>, <51, 58, 22>, <20, 51, 22>,
			<83, 90, 58>, <51, 83, 58>, <117, 124, 90>, <83, 117, 90>,
			<157, 164, 124>, <117, 157, 124>, <191, 198, 164>, <157, 191, 164>,
			<223, 236, 198>, <191, 223, 198>, <250, 259, 236>, <223, 250, 236>,
			<28, 54, 40>, <28, 40, 17>, <54, 86, 79>, <54, 79, 40>,
			<86, 120, 113>, <86, 113, 79>, <120, 160, 153>, <120, 153, 113>,
			<160, 194, 187>, <160, 187, 153>, <194, 226, 220>, <194, 220, 187>,
			<226, 258, 256>, <226, 256, 220>, <258, 255, 277>, <258, 277, 256>,
			<255, 224, 235>, <255, 235, 277>, <224, 193, 200>, <224, 200, 235>,
			<193, 159, 166>, <193, 166, 200>, <159, 119, 126>, <159, 126, 166>,
			<119, 85, 91>, <119, 91, 126>, <85, 53, 59>, <85, 59, 91>,
			<53, 19, 23>, <53, 23, 59>, <19, 16, 0>, <19, 0, 23>,
			<251, 225, 241>, <251, 241, 267>, <225, 192, 207>, <225, 207, 241>,
			<192, 158, 167>, <192, 167, 207>, <158, 118, 127>, <158, 127, 167>,
			<118, 84, 93>, <118, 93, 127>, <84, 52, 61>, <84, 61, 93>,
			<52, 21, 27>, <52, 27, 61>, <21, 24, 3>, <21, 3, 27>,
			<24, 55, 38>, <24, 38, 3>, <55, 87, 75>, <55, 75, 38>,
			<87, 121, 112>, <87, 112, 75>, <121, 161, 152>, <121, 152, 112>,
			<161, 196, 186>, <161, 186, 152>, <196, 227, 218>, <196, 218, 186>,
			<227, 262, 252>, <227, 252, 218>, <262, 264, 278>, <262, 278, 252>,
			<18, 26, 1>, <14, 18, 1>, <50, 60, 26>, <18, 50, 26>,
			<82, 92, 60>, <50, 82, 60>, <116, 125, 92>, <82, 116, 92>,
			<156, 165, 125>, <116, 156, 125>, <190, 199, 165>, <156, 190, 165>,
			<222, 230, 199>, <190, 222, 199>, <253, 276, 230>, <222, 253, 230>,
			<260, 254, 276>, <253, 260, 276>, <229, 219, 254>, <260, 229, 254>,
			<197, 188, 219>, <229, 197, 219>, <163, 154, 188>, <197, 163, 188>,
			<123, 114, 154>, <163, 123, 154>, <89, 80, 114>, <123, 89, 114>,
			<57, 44, 80>, <89, 57, 80>, <31, 15, 44>, <57, 31, 44>,
			<261, 257, 279>, <263, 261, 279>, <228, 221, 257>, <261, 228, 257>,
			<195, 189, 221>, <228, 195, 221>, <162, 155, 189>, <195, 162, 189>,
			<122, 115, 155>, <162, 122, 155>, <88, 81, 115>, <122, 88, 115>,
			<56, 47, 81>, <88, 56, 81>, <25, 2, 47>, <56, 25, 47>,
			<20, 22, 2>, <25, 20, 2>, <51, 58, 22>, <20, 51, 22>,
			<83, 90, 58>, <51, 83, 58>, <117, 124, 90>, <83, 117, 90>,
			<157, 164, 124>, <117, 157, 124>, <191, 198, 164>, <157, 191, 164>,
			<223, 236, 198>, <191, 223, 198>, <250, 259, 236>, <223, 250, 236>,
			<28, 54, 40>, <28, 40, 17>, <54, 86, 79>, <54, 79, 40>,
			<86, 120, 113>, <86, 113, 79>, <120, 160, 153>, <120, 153, 113>,
			<160, 194, 187>, <160, 187, 153>, <194, 226, 220>, <194, 220, 187>,
			<226, 258, 256>, <226, 256, 220>, <258, 255, 277>, <258, 277, 256>,
			<255, 224, 235>, <255, 235, 277>, <224, 193, 200>, <224, 200, 235>,
			<193, 159, 166>, <193, 166, 200>, <159, 119, 126>, <159, 126, 166>,
			<119, 85, 91>, <119, 91, 126>, <85, 53, 59>, <85, 59, 91>,
			<53, 19, 23>, <53, 23, 59>, <19, 16, 0>, <19, 0, 23>,
			<251, 225, 241>, <251, 241, 267>, <225, 192, 207>, <225, 207, 241>,
			<192, 158, 167>, <192, 167, 207>, <158, 118, 127>, <158, 127, 167>,
			<118, 84, 93>, <118, 93, 127>, <84, 52, 61>, <84, 61, 93>,
			<52, 21, 27>, <52, 27, 61>, <21, 24, 3>, <21, 3, 27>,
			<24, 55, 38>, <24, 38, 3>, <55, 87, 75>, <55, 75, 38>,
			<87, 121, 112>, <87, 112, 75>, <121, 161, 152>, <121, 152, 112>,
			<161, 196, 186>, <161, 186, 152>, <196, 227, 218>, <196, 218, 186>,
			<227, 262, 252>, <227, 252, 218>, <262, 264, 278>, <262, 278, 252>,
			<18, 26, 1>, <14, 18, 1>, <50, 60, 26>, <18, 50, 26>,
			<82, 92, 60>, <50, 82, 60>, <116, 125, 92>, <82, 116, 92>,
			<156, 165, 125>, <116, 156, 125>, <190, 199, 165>, <156, 190, 165>,
			<222, 230, 199>, <190, 222, 199>, <253, 276, 230>, <222, 253, 230>,
			<260, 254, 276>, <253, 260, 276>, <229, 219, 254>, <260, 229, 254>,
			<197, 188, 219>, <229, 197, 219>, <163, 154, 188>, <197, 163, 188>,
			<123, 114, 154>, <163, 123, 154>, <89, 80, 114>, <123, 89, 114>,
			<57, 44, 80>, <89, 57, 80>, <31, 15, 44>, <57, 31, 44>,
			<261, 257, 279>, <263, 261, 279>, <228, 221, 257>, <261, 228, 257>,
			<195, 189, 221>, <228, 195, 221>, <162, 155, 189>, <195, 162, 189>,
			<122, 115, 155>, <162, 122, 155>, <88, 81, 115>, <122, 88, 115>,
			<56, 47, 81>, <88, 56, 81>, <25, 2, 47>, <56, 25, 47>,
			<20, 22, 2>, <25, 20, 2>, <51, 58, 22>, <20, 51, 22>,
			<83, 90, 58>, <51, 83, 58>, <117, 124, 90>, <83, 117, 90>,
			<157, 164, 124>, <117, 157, 124>, <191, 198, 164>, <157, 191, 164>,
			<223, 236, 198>, <191, 223, 198>, <250, 259, 236>, <223, 250, 236>,
			<28, 54, 40>, <28, 40, 17>, <54, 86, 79>, <54, 79, 40>,
			<86, 120, 113>, <86, 113, 79>, <120, 160, 153>, <120, 153, 113>,
			<160, 194, 187>, <160, 187, 153>, <194, 226, 220>, <194, 220, 187>,
			<226, 258, 256>, <226, 256, 220>, <258, 255, 277>, <258, 277, 256>,
			<255, 224, 235>, <255, 235, 277>, <224, 193, 200>, <224, 200, 235>,
			<193, 159, 166>, <193, 166, 200>, <159, 119, 126>, <159, 126, 166>,
			<119, 85, 91>, <119, 91, 126>, <85, 53, 59>, <85, 59, 91>,
			<53, 19, 23>, <53, 23, 59>, <19, 16, 0>, <19, 0, 23>,
			<251, 225, 241>, <251, 241, 267>, <225, 192, 207>, <225, 207, 241>,
			<192, 158, 167>, <192, 167, 207>, <158, 118, 127>, <158, 127, 167>,
			<118, 84, 93>, <118, 93, 127>, <84, 52, 61>, <84, 61, 93>,
			<52, 21, 27>, <52, 27, 61>, <21, 24, 3>, <21, 3, 27>,
			<24, 55, 38>, <24, 38, 3>, <55, 87, 75>, <55, 75, 38>,
			<87, 121, 112>, <87, 112, 75>, <121, 161, 152>, <121, 152, 112>,
			<161, 196, 186>, <161, 186, 152>, <196, 227, 218>, <196, 218, 186>,
			<227, 262, 252>, <227, 252, 218>, <262, 264, 278>, <262, 278, 252>,
			<18, 26, 1>, <14, 18, 1>, <50, 60, 26>, <18, 50, 26>,
			<82, 92, 60>, <50, 82, 60>, <116, 125, 92>, <82, 116, 92>,
			<156, 165, 125>, <116, 156, 125>, <190, 199, 165>, <156, 190, 165>,
			<222, 230, 199>, <190, 222, 199>, <253, 276, 230>, <222, 253, 230>,
			<260, 254, 276>, <253, 260, 276>, <229, 219, 254>, <260, 229, 254>,
			<197, 188, 219>, <229, 197, 219>, <163, 154, 188>, <197, 163, 188>,
			<123, 114, 154>, <163, 123, 154>, <89, 80, 114>, <123, 89, 114>,
			<57, 44, 80>, <89, 57, 80>, <31, 15, 44>, <57, 31, 44>,
			<261, 257, 279>, <263, 261, 279>, <228, 221, 257>, <261, 228, 257>,
			<195, 189, 221>, <228, 195, 221>, <162, 155, 189>, <195, 162, 189>,
			<122, 115, 155>, <162, 122, 155>, <88, 81, 115>, <122, 88, 115>,
			<56, 47, 81>, <88, 56, 81>, <25, 2, 47>, <56, 25, 47>,
			<20, 22, 2>, <25, 20, 2>, <51, 58, 22>, <20, 51, 22>,
			<83, 90, 58>, <51, 83, 58>, <117, 124, 90>, <83, 117, 90>,
			<157, 164, 124>, <117, 157, 124>, <191, 198, 164>, <157, 191, 164>,
			<223, 236, 198>, <191, 223, 198>, <250, 259, 236>, <223, 250, 236>,
			<28, 54, 40>, <28, 40, 17>, <54, 86, 79>, <54, 79, 40>,
			<86, 120, 113>, <86, 113, 79>, <120, 160, 153>, <120, 153, 113>,
			<160, 194, 187>, <160, 187, 153>, <194, 226, 220>, <194, 220, 187>,
			<226, 258, 256>, <226, 256, 220>, <258, 255, 277>, <258, 277, 256>,
			<255, 224, 235>, <255, 235, 277>, <224, 193, 200>, <224, 200, 235>,
			<193, 159, 166>, <193, 166, 200>, <159, 119, 126>, <159, 126, 166>,
			<119, 85, 91>, <119, 91, 126>, <85, 53, 59>, <85, 59, 91>,
			<53, 19, 23>, <53, 23, 59>, <19, 16, 0>, <19, 0, 23>,
			<251, 225, 241>, <251, 241, 267>, <225, 192, 207>, <225, 207, 241>,
			<192, 158, 167>, <192, 167, 207>, <158, 118, 127>, <158, 127, 167>,
			<118, 84, 93>, <118, 93, 127>, <84, 52, 61>, <84, 61, 93>,
			<52, 21, 27>, <52, 27, 61>, <21, 24, 3>, <21, 3, 27>,
			<24, 55, 38>, <24, 38, 3>, <55, 87, 75>, <55, 75, 38>,
			<87, 121, 112>, <87, 112, 75>, <121, 139, 138>, <121, 138, 112>,
			<18, 26, 1>, <14, 18, 1>, <50, 60, 26>, <18, 50, 26>,
			<82, 92, 60>, <50, 82, 60>, <116, 125, 92>, <82, 116, 92>,
			<156, 165, 125>, <116, 156, 125>, <190, 199, 165>, <156, 190, 165>,
			<222, 230, 199>, <190, 222, 199>, <253, 276, 230>, <222, 253, 230>,
			<260, 254, 276>, <253, 260, 276>, <229, 219, 254>, <260, 229, 254>,
			<197, 188, 219>, <229, 197, 219>, <177, 176, 188>, <197, 177, 188>,
			<261, 257, 279>, <263, 261, 279>, <228, 221, 257>, <261, 228, 257>,
			<195, 189, 221>, <228, 195, 221>, <162, 155, 189>, <195, 162, 189>,
			<122, 115, 155>, <162, 122, 155>, <88, 81, 115>, <122, 88, 115>,
			<56, 47, 81>, <88, 56, 81>, <25, 2, 47>, <56, 25, 47>,
			<20, 22, 2>, <25, 20, 2>, <51, 58, 22>, <20, 51, 22>,
			<83, 90, 58>, <51, 83, 58>, <103, 102, 90>, <83, 103, 90>,
			<28, 54, 40>, <28, 40, 17>, <54, 86, 79>, <54, 79, 40>,
			<86, 120, 113>, <86, 113, 79>, <120, 160, 153>, <120, 153, 113>,
			<160, 194, 187>, <160, 187, 153>, <194, 226, 220>, <194, 220, 187>,
			<226, 258, 256>, <226, 256, 220>, <258, 255, 277>, <258, 277, 256>,
			<255, 224, 235>, <255, 235, 277>, <224, 193, 200>, <224, 200, 235>,
			<193, 159, 166>, <193, 166, 200>, <159, 141, 140>, <159, 140, 166>
		}
		#if (version >= 3.1) material #else texture #end { LDXColor494 }
	}
}
#end

#declare LDX_hydro_dot_ldr = union {
// hydro.ldr
// ROTATION CENTER 0 0 0 1 "Custom"
// ROTATION CONFIG 0 0
	object {
		lg_4255
		matrix <0,0,-25,-25,0,0,0,-25,0,0,0,0>
		LDXSeamMatrix(20, 68, 20, 0, 24, 0)
		matrix <1,0,0,0,1,0,0,0,1,0,0,0>
		#if (version >= 3.1) material #else texture #end { LDXColor7 }
	}
	object {
		LDX_731_dot_dat
		LDXSeamMatrix(20, 90, 20, 0, 20, 0)
		matrix <1,0,0,0,1,0,0,0,1,0,0,0>
		#if (version >= 3.1) material #else texture #end { LDXColor7 }
	}
}

#include "lg_2711.inc" // Technic Rotor  2 Blade with 2 Studs

#declare LDX_susp_dot_ldr = union {
// susp.ldr
// ROTATION CENTER 0 0 0 1 "Custom"
// ROTATION CONFIG 0 0
	object {
		LDX_hydro_dot_ldr
		matrix <0.76,-0.65,0,0.65,0.76,0,0,0,1,35.93,3.93,0>
		#if (version >= 3.1) material #else texture #end { LDXColor7 }
	}
	object {
		lg_2711
		matrix <0,0,-25,-25,0,0,0,-25,0,0,0,0>
		LDXSeamMatrix(100.003998, 12, 20.004, 0, 2, 0)
		matrix <0.89,0.45,0,0,0,1,0.45,-0.89,0,35.610001,27.5,-18>
		#if (version >= 3.1) material #else texture #end { LDXColor0 }
	}
	object {
		lg_2711
		matrix <0,0,-25,-25,0,0,0,-25,0,0,0,0>
		LDXSeamMatrix(100.003998, 12, 20.004, 0, 2, 0)
		matrix <0.89,0.45,0,0,0,-1,-0.45,0.89,0,35.889999,27.93,18.43>
		#if (version >= 3.1) material #else texture #end { LDXColor0 }
	}
	object {
		lg_3707
		matrix <0,0,-25,-25,0,0,0,-25,0,0,0,0>
		LDXSeamMatrix(160, 12, 12, 0, 0, 0)
		matrix <0,0,-1,0,1,0,1,0,0,-0.11,9.93,0.43>
		#if (version >= 3.1) material #else texture #end { LDXColor0 }
	}
	object {
		lg_3713
		matrix <0,0,-25,-25,0,0,0,-25,0,0,0,0>
		LDXSeamMatrix(18, 18, 20, 0, 0, 0)
		matrix <1,0,0,0,1,0,0,0,1,-0.11,9.93,30.43>
		#if (version >= 3.1) material #else texture #end { LDXColor7 }
	}
	object {
		lg_3713
		matrix <0,0,-25,-25,0,0,0,-25,0,0,0,0>
		LDXSeamMatrix(18, 18, 20, 0, 0, 0)
		matrix <-1,0,0,0,1,0,0,0,-1,-0.11,9.93,-29.57>
		#if (version >= 3.1) material #else texture #end { LDXColor7 }
	}
}

#include "lg_4213.inc" // Hinge Car Roof  4 x  4

#include "lg_3070a.inc" // Tile  1 x  1 without Groove

#declare LDX_light_dot_dat =
#if (LDXQual = 0)
box {
	<-4,-4,-4>,<4,4,4>
}
#else
union {
// Pov-RAY Light Source
// Name: light.dat
// Author: James Jessiman
// !LDRAW_ORG Part ORIGINAL
// !LICENSE Redistributable under CCAL version 2.0 : see CAreadme.txt
// !HISTORY 2007-07-29 [PTadmin] Header formatted for Contributor Agreement
// !HISTORY 2008-07-01 [PTadmin] Official Update 2008-01
}
#end

#declare LDX_stud2a_dot_dat_in_part = union {
// Stud Open without Base Edges
// Name: stud2a.dat
// Author: James Jessiman
// !LDRAW_ORG Primitive UPDATE 2009-02
// !LICENSE Redistributable under CCAL version 2.0 : see CAreadme.txt
// BFC CERTIFY CCW
// !HISTORY 1999-07-05 [PTadmin] Official Update 1999-05
// !HISTORY 2002-04-04 [sbliss] Modified for BFC compliance
// !HISTORY 2002-04-25 [PTadmin] Official Update 2002-02
// !HISTORY 2007-06-24 [PTadmin] Header formatted for Contributor Agreement
// !HISTORY 2008-07-01 [PTadmin] Official Update 2008-01
// !HISTORY 2009-06-21 [cwdee] Update ring references to 4-4ring
// !HISTORY 2009-09-03 [PTadmin] Official Update 2009-02
// BFC INVERTNEXT
	object {
		LDX_4_dash_4cyli_dot_dat_in_part
		matrix <4,0,0,0,4,0,0,0,4,0,-4,0>
	}
	object {
		LDX_4_dash_4cyli_dot_dat_in_part
		matrix <6,0,0,0,4,0,0,0,6,0,-4,0>
	}
	object {
		LDX_4_dash_4ring2_dot_dat_in_part
		matrix <2,0,0,0,1,0,0,0,2,0,-4,0>
	}
}

#declare LDX_4_dash_4cyls_dot_dat_in_part = cylinder // Sloped Cylinder 1
{
	<0,0,0>,<0,2,0>,1 open
	clipped_by
	{
		plane
		{
			<1,1,0>,0.70710678118654757274
		}
	}
}

#declare LDX_4_dash_4cyls_dot_dat = cylinder // Sloped Cylinder 1
{
	<0,0,0>,<0,2,0>,1 open
	clipped_by
	{
		plane
		{
			<1,1,0>,0.70710678118654757274
		}
	}
}

#declare LDX_stud2s_dot_dat_in_part = union {
// Stud Tube Open Sliced
// Name: stud2s.dat
// Author: Dee Earley [DeannaEarley]
// !LDRAW_ORG Primitive UPDATE 2009-03
// !LICENSE Redistributable under CCAL version 2.0 : see CAreadme.txt
// BFC CERTIFY CCW
// !HISTORY 2006-02-20 [guyvivan] Adjust precision
// !HISTORY 2009-12-29 [PTadmin] Official Update 2009-03
	object {
		LDX_4_dash_4cyls_dot_dat_in_part
		matrix <6,0,0,0,1,0,0,0,6,0,0,0>
	}
// BFC INVERTNEXT
	object {
		LDX_4_dash_4cyls_dot_dat_in_part
		matrix <4,0,0,0,0.667,0,0,0,4,0,0.333,0>
	}
// BFC INVERTNEXT
	object {
		LDX_4_dash_4cyli_dot_dat_in_part
		matrix <4,0,0,0,0.333,0,0,0,4,0,0,0>
	}
}

#declare LDX_4287a_dot_dat =
#if (LDXQual = 0)
box {
	<-10,-4,-50>,<10,24,10>
}
#else
union {
// Slope Brick 33  3 x  1 Inverted with Notch and Thick Front
// Name: 4287a.dat
// Author: James Jessiman
// !LDRAW_ORG Part UPDATE 2017-01
// !LICENSE Redistributable under CCAL version 2.0 : see CAreadme.txt
// BFC CERTIFY CCW
// !HISTORY 1998-06-20 [PTadmin] Official Update 1998-06
// !HISTORY 2002-09-13 [izanette] Modified with WINDZ for BFC compliance
// !HISTORY 2003-08-01 [PTadmin] Official Update 2003-02
// !HISTORY 2007-07-04 [PTadmin] Header formatted for Contributor Agreement
// !HISTORY 2008-07-01 [PTadmin] Official Update 2008-01
// !HISTORY 2017-07-17 [PTadmin] Renamesd from 4287
// !HISTORY 2017-09-16 [Sirio] Renamed and redrew for the notch
// !HISTORY 2017-12-30 [PTadmin] Official Update 2017-01
// // Studs without blocker
	#if (LDXStuds)
		object {
			lg_knob
			matrix <0,0,-25,-25,0,0,0,-25,0,0,0,0>
		matrix <1,0,0,0,1,0,0,0,1,0,0,0>
		}
		object {
			LDX_stud2a_dot_dat_in_part
			matrix <1,0,0,0,4,0,0,0,1,0,12,-20>
		}
		object {
			LDX_stud2a_dot_dat_in_part
			matrix <1,0,0,0,1.5,0,0,0,1,0,2,-40>
		}
		object {
			LDX_stud2s_dot_dat_in_part
			matrix <0,0,-1,0,3,0,-1,0,0,0,12,-20>
		}
		object {
			LDX_stud2s_dot_dat_in_part
			matrix <0,0,-1,0,3,0,-1,0,0,0,2,-40>
		}
	#end // LDXStuds
// // Underside box
// // Underside surface
// // Internal surface
// // Upper surface
// // Lateral surface
// // Sloped surface and Notch
	mesh2 {
		vertex_vectors {
			50,
			<-10,0,-50>, <-10,0,10>, <-10,4,-50>, <-10,24,-10>,
			<-10,24,10>, <-8,0,-46>, <-8,0,-10>, <-8,2,-46>,
			<-8,20,-10>, <-6,2.75,-6.75>, <-6,2.75,6>, <-6,24,-6.75>,
			<-6,24,6>, <-5.602,20,-18>, <-5.5434,20,-17.7038>, <-5.5434,20.148001,-17.7038>,
			<-4.2426,20,-15.7574>, <-4.2426,21.121,-15.7574>, <-2.2962,20,-14.4566>, <-2.2962,21.771999,-14.4566>,
			<-1.25,2.75,-6.75>, <-1.25,2.75,-6>, <-1.25,24,-6.75>, <-1.25,24,-6>,
			<0,20,-14>, <0,22,-14>, <1.25,2.75,-6.75>, <1.25,2.75,-6>,
			<1.25,24,-6.75>, <1.25,24,-6>, <2.2962,20,-14.4566>, <2.2962,21.771999,-14.4566>,
			<4.2426,20,-15.7574>, <4.2426,21.121,-15.7574>, <5.5434,20,-17.7038>, <5.5434,20.148001,-17.7038>,
			<5.602,20,-18>, <6,2.75,-6.75>, <6,2.75,6>, <6,24,-6.75>,
			<6,24,6>, <8,0,-46>, <8,0,-10>, <8,2,-46>,
			<8,20,-10>, <10,0,-50>, <10,0,10>, <10,4,-50>,
			<10,24,-10>, <10,24,10>
		}
		normal_vectors {
			16,
			<-1,0,0>, <-0.980986,0,0.194079>, <-0.924059,0,0.382249>, <-0.707107,0,0.707107>,
			<-0.382698,0,0.923874>, <0,-1,0>, <-0.00016,-0.894482,0.447103>, <0,0,-1>,
			<0,0,1>, <0,0.894427,-0.447214>, <0,1,0>, <0.382698,0,0.923874>,
			<0.707107,0,0.707107>, <0.924059,0,0.382249>, <0.980986,0,0.194079>, <1,0,0>
		}
		face_indices {
			96,
			<10, 12, 40>, <10, 40, 38>, <10, 9, 11>, <10, 11, 12>,
			<9, 20, 22>, <9, 22, 11>, <27, 21, 23>, <27, 23, 29>,
			<23, 22, 28>, <23, 28, 29>, <21, 20, 22>, <21, 22, 23>,
			<29, 28, 26>, <29, 26, 27>, <39, 28, 26>, <39, 26, 37>,
			<40, 39, 37>, <40, 37, 38>, <10, 21, 20>, <10, 20, 9>,
			<27, 21, 10>, <27, 10, 38>, <37, 26, 27>, <37, 27, 38>,
			<49, 40, 12>, <49, 12, 4>, <4, 12, 11>, <4, 11, 3>,
			<11, 22, 3>, <3, 22, 28>, <3, 28, 48>, <28, 39, 48>,
			<48, 39, 40>, <48, 40, 49>, <6, 8, 44>, <6, 44, 42>,
			<8, 7, 43>, <8, 43, 44>, <41, 43, 7>, <41, 7, 5>,
			<8, 6, 5>, <8, 5, 7>, <44, 43, 41>, <44, 41, 42>,
			<46, 1, 6>, <46, 6, 42>, <1, 0, 5>, <1, 5, 6>,
			<0, 45, 41>, <0, 41, 5>, <45, 46, 42>, <45, 42, 41>,
			<46, 49, 4>, <46, 4, 1>, <3, 2, 1>, <3, 1, 4>,
			<48, 49, 46>, <48, 46, 47>, <0, 1, 2>, <47, 45, 0>,
			<47, 0, 2>, <45, 47, 46>, <3, 48, 25>, <3, 25, 19>,
			<3, 19, 17>, <3, 17, 15>, <3, 15, 13>, <48, 31, 25>,
			<48, 33, 31>, <48, 35, 33>, <48, 36, 35>, <15, 14, 13>,
			<17, 16, 14>, <17, 14, 15>, <19, 18, 16>, <19, 16, 17>,
			<25, 24, 18>, <25, 18, 19>, <31, 30, 24>, <31, 24, 25>,
			<33, 32, 30>, <33, 30, 31>, <35, 34, 32>, <35, 32, 33>,
			<36, 34, 35>, <24, 30, 18>, <16, 18, 30>, <16, 30, 32>,
			<34, 14, 16>, <34, 16, 32>, <36, 13, 14>, <36, 14, 34>,
			<3, 13, 2>, <48, 47, 36>, <13, 36, 47>, <13, 47, 2>
		}
		normal_indices {
			96,
			<8, 8, 8>, <8, 8, 8>, <0, 0, 0>, <0, 0, 0>,
			<7, 7, 7>, <7, 7, 7>, <8, 8, 8>, <8, 8, 8>,
			<10, 10, 10>, <10, 10, 10>, <0, 0, 0>, <0, 0, 0>,
			<15, 15, 15>, <15, 15, 15>, <7, 7, 7>, <7, 7, 7>,
			<15, 15, 15>, <15, 15, 15>, <5, 5, 5>, <5, 5, 5>,
			<5, 5, 5>, <5, 5, 5>, <5, 5, 5>, <5, 5, 5>,
			<5, 5, 5>, <5, 5, 5>, <5, 5, 5>, <5, 5, 5>,
			<5, 5, 5>, <5, 5, 5>, <5, 5, 5>, <5, 5, 5>,
			<5, 5, 5>, <5, 5, 5>, <8, 8, 8>, <8, 8, 8>,
			<9, 9, 9>, <9, 9, 9>, <7, 7, 7>, <7, 7, 7>,
			<0, 0, 0>, <0, 0, 0>, <15, 15, 15>, <15, 15, 15>,
			<10, 10, 10>, <10, 10, 10>, <10, 10, 10>, <10, 10, 10>,
			<10, 10, 10>, <10, 10, 10>, <10, 10, 10>, <10, 10, 10>,
			<7, 7, 7>, <7, 7, 7>, <15, 15, 15>, <15, 15, 15>,
			<0, 0, 0>, <0, 0, 0>, <15, 15, 15>, <8, 8, 8>,
			<8, 8, 8>, <0, 0, 0>, <6, 6, 6>, <6, 6, 6>,
			<6, 6, 6>, <6, 6, 6>, <6, 6, 6>, <6, 6, 6>,
			<6, 6, 6>, <6, 6, 6>, <6, 6, 6>, <2, 2, 1>,
			<3, 3, 2>, <3, 2, 2>, <4, 4, 3>, <4, 3, 3>,
			<8, 8, 4>, <8, 4, 4>, <11, 11, 8>, <11, 8, 8>,
			<12, 12, 11>, <12, 11, 11>, <13, 13, 12>, <13, 12, 12>,
			<14, 13, 13>, <5, 5, 5>, <5, 5, 5>, <5, 5, 5>,
			<5, 5, 5>, <5, 5, 5>, <5, 5, 5>, <5, 5, 5>,
			<6, 6, 6>, <6, 6, 6>, <6, 6, 6>, <6, 6, 6>
		}
	}
}
#end

#include "lg_3956.inc" // Bracket  2 x  2 -  2 x  2 Up

#include "lg_4229.inc" // Plate  2 x  2 with Jet Engine

#declare LDX_gate_dot_ldr = union {
// gate.ldr
// ROTATION CENTER 0 0 0 1 "Custom"
// ROTATION CONFIG 0 0
	object {
		lg_4213
		matrix <0,0,-25,-25,0,0,0,-25,0,0,0,0>
		LDXSeamMatrix(80, 12, 80, 0, 2, 0)
		matrix <1,0,0,0,1,0,0,0,1,0,0,0>
		#if (version >= 3.1) material #else texture #end { LDXColor0 }
	}
	object {
		lg_4213
		matrix <0,0,-25,-25,0,0,0,-25,0,0,0,0>
		LDXSeamMatrix(80, 12, 80, 0, 2, 0)
		matrix <-1,0,0,0,1,0,0,0,-1,0,-8,-20>
		#if (version >= 3.1) material #else texture #end { LDXColor1 }
	}
	object {
		lg_3070a_clear
		matrix <0,0,-25,-25,0,0,0,-25,0,0,0,0>
		LDXSeamMatrix(20, 8, 20, 0, 4, 0)
		matrix <1,0,0,0,1,0,0,0,1,10,-16,10>
		#if (version >= 3.1) material #else texture #end { LDXColor36 }
	}
	object {
		LDX_light_dot_dat
		LDXSeamMatrix(8, 8, 8, 0, 0, 0)
		matrix <1,0,0,0,1,0,0,0,1,10,-16,10>
		#if (version >= 3.1) material #else texture #end { LDXColor36 }
	}
	object {
		lg_3070a_clear
		matrix <0,0,-25,-25,0,0,0,-25,0,0,0,0>
		LDXSeamMatrix(20, 8, 20, 0, 4, 0)
		matrix <1,0,0,0,1,0,0,0,1,-10,-16,10>
		#if (version >= 3.1) material #else texture #end { LDXColor36 }
	}
	object {
		LDX_light_dot_dat
		LDXSeamMatrix(8, 8, 8, 0, 0, 0)
		matrix <1,0,0,0,1,0,0,0,1,-10,-16,10>
		#if (version >= 3.1) material #else texture #end { LDXColor36 }
	}
	object {
		LDX_4287a_dot_dat
		LDXSeamMatrix(20, 28, 60, 0, 10, -20)
		matrix <1,0,0,0,1,0,0,0,1,30,8,10>
		#if (version >= 3.1) material #else texture #end { LDXColor0 }
	}
	object {
		LDX_4287a_dot_dat
		LDXSeamMatrix(20, 28, 60, 0, 10, -20)
		matrix <1,0,0,0,1,0,0,0,1,-30,8,10>
		#if (version >= 3.1) material #else texture #end { LDXColor0 }
	}
	object {
		lg_3956
		matrix <0,0,-25,-25,0,0,0,-25,0,0,0,0>
		LDXSeamMatrix(40, 48, 52, 0, -16, -6)
		matrix <1,0,0,0,1,0,0,0,1,0,-16,-20>
		#if (version >= 3.1) material #else texture #end { LDXColor0 }
	}
	object {
		lg_4229
		matrix <0,0,-25,-25,0,0,0,-25,0,0,0,0>
		LDXSeamMatrix(40, 43.880001, 84, 0, 17.940001, -2)
		matrix <0,1,0,0,0,1,1,0,0,0,-36,-40>
		#if (version >= 3.1) material #else texture #end { LDXColor0 }
	}
}

#include "lg_3036.inc" // Plate  6 x  8

#include "lg_3747a.inc" // Slope Brick 33  3 x  2 Inverted without Ribs between Studs

#include "lg_3939.inc" // Slope Brick 33  3 x  6

#include "lg_3822.inc" // Door  1 x  3 x  1 Left

#include "lg_3821.inc" // Door  1 x  3 x  1 Right

#include "lg_3039.inc" // Slope Brick 45  2 x  2

#declare LDX_2_dash_4cyls_dot_dat_in_part = cylinder // Sloped Cylinder 0.5
{
	<0,0,0>,<0,2,0>,1 open
	clipped_by
	{
		plane
		{
			<0,0,-1>,0
		}
		plane
		{
			<1,1,0>,0.70710678118654757274
		}
	}
}

#declare LDX_2_dash_4cyls_dot_dat = cylinder // Sloped Cylinder 0.5
{
	<0,0,0>,<0,2,0>,1 open
	clipped_by
	{
		plane
		{
			<0,0,-1>,0
		}
		plane
		{
			<1,1,0>,0.70710678118654757274
		}
	}
}

#declare LDX_2_dash_4cyli_dot_dat_in_part = cylinder // Cylinder 0.5
{
	<0,0,0>,<0,1,0>,1 open
	clipped_by
	{
		plane
		{
			<0,0,-1>,0
		}
	}
}

#declare LDX_2_dash_4cyli_dot_dat = cylinder // Cylinder 0.5
{
	<0,0,0>,<0,1,0>,1 open
	clipped_by
	{
		plane
		{
			<0,0,-1>,0
		}
	}
}

#declare LDX_2_dash_4chrd_dot_dat_in_part = disc // Disc 0.5
{
	<0,0,0>,<0,1,0>,1
	clipped_by
	{
		plane
		{
			<-0.00000000000000012246,0,-2>,-0.00000000000000006123
		}
	}
}

#declare LDX_2_dash_4chrd_dot_dat = disc // Disc 0.5
{
	<0,0,0>,<0,1,0>,1
	clipped_by
	{
		plane
		{
			<-0.00000000000000012246,0,-2>,-0.00000000000000006123
		}
	}
}

#declare LDX_3048b_dot_dat =
#if (LDXQual = 0)
box {
	<-20,0,-10>,<20,24,10>
}
#else
union {
// Slope Brick 45  1 x  2 Triple
// Name: 3048b.dat
// Author: James Jessiman
// !LDRAW_ORG Part UPDATE 2015-02
// !LICENSE Redistributable under CCAL version 2.0 : see CAreadme.txt
// BFC CERTIFY CCW
// !HISTORY 1998-06-20 [PTadmin] Official Update 1998-06
// !HISTORY 2002-09-13 [izanette] Modified with WINDZ for BFC compliance
// !HISTORY 2003-12-19 [PTadmin] Official Update 2003-03
// !HISTORY 2007-06-10 [PTadmin] Header formatted for Contributor Agreement
// !HISTORY 2008-07-01 [PTadmin] Official Update 2008-01
// !HISTORY 2015-10-13 [Philo] Replaced bottom stud3 with a bar
// !HISTORY 2015-10-18 [PTadmin] Renamed from 3048
// !HISTORY 2015-10-20 [MMR1988] Used more primitives
// !HISTORY 2015-12-30 [PTadmin] Official Update 2015-02
	object {
		LDX_2_dash_4cyls_dot_dat_in_part
		matrix <0,0,-1.5,0,-1.5,0,1.5,0,0,2.5,15.5,0>
	}
	object {
		LDX_2_dash_4cyls_dot_dat_in_part
		matrix <0,0,-1.5,0,-1.5,0,-1.5,0,0,-2.5,15.5,0>
	}
	object {
		LDX_2_dash_4cyli_dot_dat_in_part
		matrix <0,0,-1.5,0,-8.5,0,-1.5,0,0,-2.5,24,0>
	}
	object {
		LDX_2_dash_4chrd_dot_dat_in_part
		matrix <0,0,-1.5,0,-1,0,-1.5,0,0,-2.5,24,0>
	}
	object {
		LDX_2_dash_4cyli_dot_dat_in_part
		matrix <0,0,1.5,0,-8.5,0,1.5,0,0,2.5,24,0>
	}
	object {
		LDX_2_dash_4chrd_dot_dat_in_part
		matrix <0,0,1.5,0,-1,0,1.5,0,0,2.5,24,0>
	}
	mesh2 {
		vertex_vectors {
			33,
			<-20,20,-10>, <-20,20,10>, <-20,24,-10>, <-20,24,10>,
			<-16,20,-6>, <-16,20,6>, <-16,24,-6>, <-16,24,6>,
			<-4,8,6>, <-2.5,12.5,1.5>, <-2.5,15.5,-1.5>, <-2.5,24,-1.5>,
			<-2.5,24,1.5>, <-1,8,6>, <-1,19,-5>, <-1,19,6>,
			<0,0,10>, <1,8,6>, <1,19,-5>, <1,19,6>,
			<2.5,12.5,1.5>, <2.5,15.5,-1.5>, <2.5,24,-1.5>, <2.5,24,1.5>,
			<4,8,6>, <16,20,-6>, <16,20,6>, <16,24,-6>,
			<16,24,6>, <20,20,-10>, <20,20,10>, <20,24,-10>,
			<20,24,10>
		}
		normal_vectors {
			13,
			<-1,0,0>, <-1,0,0>, <0,-1,0>, <0,-0.707107,-0.707107>,
			<0,0,-1>, <0,0,-1>, <0,0,1>, <0,0.707107,0.707107>,
			<0,1,0>, <0.707107,-0.707107,0>, <0.707107,0.707107,0>, <1,0,0>,
			<1,0,0>
		}
		face_indices {
			44,
			<32, 28, 7>, <32, 7, 3>, <3, 7, 6>, <3, 6, 2>,
			<2, 6, 27>, <2, 27, 31>, <31, 27, 28>, <31, 28, 32>,
			<30, 1, 16>, <29, 16, 0>, <25, 4, 8>, <25, 8, 24>,
			<26, 24, 8>, <26, 8, 5>, <1, 3, 32>, <1, 32, 30>,
			<0, 2, 3>, <0, 3, 1>, <29, 31, 2>, <29, 2, 0>,
			<30, 32, 31>, <30, 31, 29>, <30, 29, 16>, <1, 0, 16>,
			<5, 7, 28>, <5, 28, 26>, <4, 6, 7>, <4, 7, 5>,
			<25, 27, 6>, <25, 6, 4>, <26, 28, 27>, <26, 27, 25>,
			<26, 25, 24>, <5, 4, 8>, <18, 19, 15>, <18, 15, 14>,
			<17, 19, 18>, <14, 15, 13>, <23, 22, 11>, <23, 11, 12>,
			<23, 12, 9>, <23, 9, 20>, <11, 22, 21>, <11, 21, 10>
		}
		normal_indices {
			44,
			<2, 2, 2>, <2, 2, 2>, <2, 2, 2>, <2, 2, 2>,
			<2, 2, 2>, <2, 2, 2>, <2, 2, 2>, <2, 2, 2>,
			<4, 4, 4>, <7, 7, 7>, <3, 3, 3>, <3, 3, 3>,
			<6, 6, 6>, <6, 6, 6>, <6, 6, 6>, <6, 6, 6>,
			<0, 0, 0>, <0, 0, 0>, <4, 4, 4>, <4, 4, 4>,
			<11, 11, 11>, <11, 11, 11>, <9, 9, 9>, <10, 10, 10>,
			<6, 6, 6>, <6, 6, 6>, <0, 0, 0>, <0, 0, 0>,
			<4, 4, 4>, <4, 4, 4>, <11, 11, 11>, <11, 11, 11>,
			<9, 9, 9>, <10, 10, 10>, <8, 8, 8>, <8, 8, 8>,
			<12, 11, 11>, <0, 0, 1>, <2, 2, 2>, <2, 2, 2>,
			<4, 4, 4>, <4, 4, 5>, <6, 6, 6>, <6, 6, 6>
		}
	}
}
#end

#include "lg_3816.inc" // Minifig Leg Right

#include "lg_3817.inc" // Minifig Leg Left

#include "lg_0973.inc" // Minifig Torso

#declare LDX_4_dash_4ndis_dot_dat_in_part = disc // Not-Disc 1
{
	<0,0,0>,<0,1,0>,2,1
	clipped_by
	{
		box
		{
			<-1,-1,-1>,<1,1,1>
		}
	}
}

#declare LDX_4_dash_4ndis_dot_dat = disc // Not-Disc 1
{
	<0,0,0>,<0,1,0>,2,1
	clipped_by
	{
		box
		{
			<-1,-1,-1>,<1,1,1>
		}
	}
}

#declare LDX_s_slash_3626p05s01_dot_dat_in_part = union {
// ~Minifig Head with Standard Grin and Eyebrows Pattern - Half Face
// Name: s\3626p05s01.dat
// Author: Stephan Meisinger [smr]
// !LDRAW_ORG Subpart UPDATE 2014-02
// !LICENSE Redistributable under CCAL version 2.0 : see CAreadme.txt
// BFC CERTIFY CCW
// !HISTORY 2014-12-23 [PTadmin] Official Update 2014-02
	object {
		LDX_4_dash_4ndis_dot_dat_in_part
		matrix <-1.25,0,-0.248563,0.237046,0,0.971499,0,-1.25,0,3.5,10,-12.30402>
	}
	object {
		LDX_4_dash_4disc_dot_dat_in_part
		matrix <-1.25,0,-0.248563,0.237046,0,0.971499,0,-1.25,0,3.5,10,-12.30402>
		#if (version >= 3.1) material #else texture #end { LDXColor0 }
	}
}

#declare LDX_s_slash_3626bs02_dot_dat_in_part = union {
// ~Minifig Head - Stud Hollow without Outer Face
// Name: s\3626bs02.dat
// Author: Andy Westrate [westrate]
// !LDRAW_ORG Subpart UPDATE 2011-02
// !LICENSE Redistributable under CCAL version 2.0 : see CAreadme.txt
// BFC CERTIFY CW
// !HISTORY 2005-12-28 [PTadmin] Official Update 2005-01
// !HISTORY 2007-08-31 [PTadmin] Header formatted for Contributor Agreement
// !HISTORY 2008-07-01 [PTadmin] Official Update 2008-01
// !HISTORY 2011-12-01 [MagFors] Corrected colour of some conditional lines and use of 'move to'-primitives
// !HISTORY 2011-12-29 [PTadmin] Official Update 2011-02
	#if (LDXStuds)
		object {
			LDX_stud2a_dot_dat_in_part
			matrix <1,0,0,0,1,0,0,0,1,0,0,0>
		}
	#end // LDXStuds
	object {
		LDX_4_dash_4ring3_dot_dat_in_part
		matrix <2,0,0,0,1,0,0,0,2,0,0,0>
	}
	object {
		LDX_4_dash_4ring2_dot_dat_in_part
		matrix <2,0,0,0,-1,0,0,0,-2,0,4,0>
	}
// BFC INVERTNEXT
	object {
		LDX_4_dash_4cyli_dot_dat_in_part
		matrix <6,0,0,0,20,0,0,0,6,0,4,0>
	}
	object {
		LDX_4_dash_4ring3_dot_dat_in_part
		matrix <2,0,0,0,-1,0,0,0,-2,0,24,0>
	}
	object {
		LDX_4_dash_4cyli_dot_dat_in_part
		matrix <8,0,0,0,3,0,0,0,8,0,21,0>
	}
// //
// //
// //
// //
// //
}

#declare LDX_t04o6250_dot_dat_in_part = torus // Torus 0.25
{
	1,0.625
	clipped_by
	{
		plane
		{
			<0,0,-1>,0
		}
		plane
		{
			<-1,0,0>,0
		}
		difference
		{
			cylinder
			{
				<0,0,0>,<0,1,0>,2			}
			cylinder
			{
				<0,0,0>,<0,1,0>,1			}
		}
	}
}

#declare LDX_t04o6250_dot_dat = torus // Torus 0.25
{
	1,0.625
	clipped_by
	{
		plane
		{
			<0,0,-1>,0
		}
		plane
		{
			<-1,0,0>,0
		}
		difference
		{
			cylinder
			{
				<0,0,0>,<0,1,0>,2			}
			cylinder
			{
				<0,0,0>,<0,1,0>,1			}
		}
	}
}

#declare LDX_1_dash_8cyli_dot_dat_in_part = cylinder // Cylinder 0.125
{
	<0,0,0>,<0,1,0>,1 open
	clipped_by
	{
		plane
		{
			<0,0,-1>,0
		}
		plane
		{
			<-0.70710678118654746172,0,0.70710678118654757274>,0
		}
	}
}

#declare LDX_1_dash_8cyli_dot_dat = cylinder // Cylinder 0.125
{
	<0,0,0>,<0,1,0>,1 open
	clipped_by
	{
		plane
		{
			<0,0,-1>,0
		}
		plane
		{
			<-0.70710678118654746172,0,0.70710678118654757274>,0
		}
	}
}

#declare LDX_t04o6250_dot_dat_in_part = torus // Torus 0.25
{
	1,0.625
	clipped_by
	{
		plane
		{
			<0,0,-1>,0
		}
		plane
		{
			<-1,0,0>,0
		}
		difference
		{
			cylinder
			{
				<0,0,0>,<0,1,0>,2			}
			cylinder
			{
				<0,0,0>,<0,1,0>,1			}
		}
	}
}

#declare LDX_t04o6250_dot_dat = torus // Torus 0.25
{
	1,0.625
	clipped_by
	{
		plane
		{
			<0,0,-1>,0
		}
		plane
		{
			<-1,0,0>,0
		}
		difference
		{
			cylinder
			{
				<0,0,0>,<0,1,0>,2			}
			cylinder
			{
				<0,0,0>,<0,1,0>,1			}
		}
	}
}

#declare LDX_t04o6250_dot_dat_in_part = torus // Torus 0.25
{
	1,0.625
	clipped_by
	{
		plane
		{
			<0,0,-1>,0
		}
		plane
		{
			<-1,0,0>,0
		}
		difference
		{
			cylinder
			{
				<0,0,0>,<0,1,0>,2			}
			cylinder
			{
				<0,0,0>,<0,1,0>,1			}
		}
	}
}

#declare LDX_t04o6250_dot_dat = torus // Torus 0.25
{
	1,0.625
	clipped_by
	{
		plane
		{
			<0,0,-1>,0
		}
		plane
		{
			<-1,0,0>,0
		}
		difference
		{
			cylinder
			{
				<0,0,0>,<0,1,0>,2			}
			cylinder
			{
				<0,0,0>,<0,1,0>,1			}
		}
	}
}

#declare LDX_t04o6250_dot_dat_in_part = torus // Torus 0.25
{
	1,0.625
	clipped_by
	{
		plane
		{
			<0,0,-1>,0
		}
		plane
		{
			<-1,0,0>,0
		}
		difference
		{
			cylinder
			{
				<0,0,0>,<0,1,0>,2			}
			cylinder
			{
				<0,0,0>,<0,1,0>,1			}
		}
	}
}

#declare LDX_t04o6250_dot_dat = torus // Torus 0.25
{
	1,0.625
	clipped_by
	{
		plane
		{
			<0,0,-1>,0
		}
		plane
		{
			<-1,0,0>,0
		}
		difference
		{
			cylinder
			{
				<0,0,0>,<0,1,0>,2			}
			cylinder
			{
				<0,0,0>,<0,1,0>,1			}
		}
	}
}

#declare LDX_t04o6250_dot_dat_in_part = torus // Torus 0.25
{
	1,0.625
	clipped_by
	{
		plane
		{
			<0,0,-1>,0
		}
		plane
		{
			<-1,0,0>,0
		}
		difference
		{
			cylinder
			{
				<0,0,0>,<0,1,0>,2			}
			cylinder
			{
				<0,0,0>,<0,1,0>,1			}
		}
	}
}

#declare LDX_t04o6250_dot_dat = torus // Torus 0.25
{
	1,0.625
	clipped_by
	{
		plane
		{
			<0,0,-1>,0
		}
		plane
		{
			<-1,0,0>,0
		}
		difference
		{
			cylinder
			{
				<0,0,0>,<0,1,0>,2			}
			cylinder
			{
				<0,0,0>,<0,1,0>,1			}
		}
	}
}

#declare LDX_t04o6250_dot_dat_in_part = torus // Torus 0.25
{
	1,0.625
	clipped_by
	{
		plane
		{
			<0,0,-1>,0
		}
		plane
		{
			<-1,0,0>,0
		}
		difference
		{
			cylinder
			{
				<0,0,0>,<0,1,0>,2			}
			cylinder
			{
				<0,0,0>,<0,1,0>,1			}
		}
	}
}

#declare LDX_t04o6250_dot_dat = torus // Torus 0.25
{
	1,0.625
	clipped_by
	{
		plane
		{
			<0,0,-1>,0
		}
		plane
		{
			<-1,0,0>,0
		}
		difference
		{
			cylinder
			{
				<0,0,0>,<0,1,0>,2			}
			cylinder
			{
				<0,0,0>,<0,1,0>,1			}
		}
	}
}

#declare LDX_t04o6250_dot_dat_in_part = torus // Torus 0.25
{
	1,0.625
	clipped_by
	{
		plane
		{
			<0,0,-1>,0
		}
		plane
		{
			<-1,0,0>,0
		}
		difference
		{
			cylinder
			{
				<0,0,0>,<0,1,0>,2			}
			cylinder
			{
				<0,0,0>,<0,1,0>,1			}
		}
	}
}

#declare LDX_t04o6250_dot_dat = torus // Torus 0.25
{
	1,0.625
	clipped_by
	{
		plane
		{
			<0,0,-1>,0
		}
		plane
		{
			<-1,0,0>,0
		}
		difference
		{
			cylinder
			{
				<0,0,0>,<0,1,0>,2			}
			cylinder
			{
				<0,0,0>,<0,1,0>,1			}
		}
	}
}

#declare LDX_t04o6250_dot_dat_in_part = torus // Torus 0.25
{
	1,0.625
	clipped_by
	{
		plane
		{
			<0,0,-1>,0
		}
		plane
		{
			<-1,0,0>,0
		}
		difference
		{
			cylinder
			{
				<0,0,0>,<0,1,0>,2			}
			cylinder
			{
				<0,0,0>,<0,1,0>,1			}
		}
	}
}

#declare LDX_t04o6250_dot_dat = torus // Torus 0.25
{
	1,0.625
	clipped_by
	{
		plane
		{
			<0,0,-1>,0
		}
		plane
		{
			<-1,0,0>,0
		}
		difference
		{
			cylinder
			{
				<0,0,0>,<0,1,0>,2			}
			cylinder
			{
				<0,0,0>,<0,1,0>,1			}
		}
	}
}

#declare LDX_t04o6250_dot_dat_in_part = torus // Torus 0.25
{
	1,0.625
	clipped_by
	{
		plane
		{
			<0,0,-1>,0
		}
		plane
		{
			<-1,0,0>,0
		}
		difference
		{
			cylinder
			{
				<0,0,0>,<0,1,0>,2			}
			cylinder
			{
				<0,0,0>,<0,1,0>,1			}
		}
	}
}

#declare LDX_t04o6250_dot_dat = torus // Torus 0.25
{
	1,0.625
	clipped_by
	{
		plane
		{
			<0,0,-1>,0
		}
		plane
		{
			<-1,0,0>,0
		}
		difference
		{
			cylinder
			{
				<0,0,0>,<0,1,0>,2			}
			cylinder
			{
				<0,0,0>,<0,1,0>,1			}
		}
	}
}

#declare LDX_3626bp05_dot_dat =
#if (LDXQual = 0)
box {
	<-13,-4,-13>,<13,24,13>
}
#else
union {
// Minifig Head with Standard Grin and Eyebrows Pattern
// Name: 3626bp05.dat
// Author: Chris Dee [cwdee]
// !LDRAW_ORG Part UPDATE 2014-02
// !LICENSE Redistributable under CCAL version 2.0 : see CAreadme.txt
// BFC CERTIFY CCW
// !HISTORY 1999-05-24 [PTadmin] Official Update 1999-04
// !HISTORY 2003-11-02 [hmick] corrected overlapping quads
// !HISTORY 2004-07-13 [westrate] added torus primitives
// !HISTORY 2005-12-28 [PTadmin] Official Update 2005-01
// !HISTORY 2007-06-29 [PTadmin] Header formatted for Contributor Agreement
// !HISTORY 2008-07-01 [PTadmin] Official Update 2008-01
// !HISTORY 2014-02-13 [smr] moved half face from 3626bp05 to s\3626p05s01.dat
// !HISTORY 2014-12-23 [PTadmin] Official Update 2014-02
// // replacing s\3626bs00.dat
	object {
		LDX_s_slash_3626p05s01_dot_dat_in_part
		matrix <1,0,0,0,1,0,0,0,1,0,0,0>
	}
	object {
		LDX_s_slash_3626p05s01_dot_dat_in_part
		matrix <-1,0,0,0,1,0,0,0,1,0,0,0>
	}
	object {
		LDX_s_slash_3626bs02_dot_dat_in_part
		matrix <1,0,0,0,1,0,0,0,1,0,0,0>
	}
	object {
		LDX_2_dash_4cyli_dot_dat_in_part
		matrix <13,0,0,0,13,0,0,0,13,0,4,0>
	}
	object {
		LDX_t04o6250_dot_dat_in_part
		matrix <0,0,8,0,-6.4,0,8,0,0,0,4,0>
	}
	object {
		LDX_t04o6250_dot_dat_in_part
		matrix <-8,0,0,0,-6.4,0,0,0,8,0,4,0>
	}
	object {
		LDX_t04o6250_dot_dat_in_part
		matrix <0,0,8,0,6.4,0,-8,0,0,0,17,0>
	}
	object {
		LDX_t04o6250_dot_dat_in_part
		matrix <8,0,0,0,6.4,0,0,0,8,0,17,0>
	}
	object {
		LDX_t04o6250_dot_dat_in_part
		matrix <0,0,-8,0,-6.4,0,-8,0,0,0,4,0>
	}
	object {
		LDX_t04o6250_dot_dat_in_part
		matrix <8,0,0,0,-6.4,0,0,0,-8,0,4,0>
	}
	object {
		LDX_t04o6250_dot_dat_in_part
		matrix <0,0,-8,0,6.4,0,8,0,0,0,17,0>
	}
	object {
		LDX_t04o6250_dot_dat_in_part
		matrix <-8,0,0,0,6.4,0,0,0,-8,0,17,0>
	}
	object {
		LDX_1_dash_8cyli_dot_dat_in_part
		matrix <13,0,0,0,13,0,0,0,-13,0,4,0>
	}
	object {
		LDX_1_dash_8cyli_dot_dat_in_part
		matrix <-13,0,0,0,13,0,0,0,-13,0,4,0>
	}
	mesh2 {
		vertex_vectors {
			32,
			<-6,7.7,-11.32575>, <-5.6,8.25,-11.59307>, <-4.975,7.05,-12.01074>, <-4.975,7.8,-12.01074>,
			<-3.5,6.75,-12.30402>, <-3.5,7.5,-12.30402>, <-3.5,14.5,-12.30402>, <-3.5,15,-12.30402>,
			<-3,14.2,-12.40345>, <-2.025,7.05,-12.59733>, <-2.025,7.8,-12.59733>, <-1.75,14.75,-12.65201>,
			<-1.75,15.75,-12.65201>, <-1.4,8.25,-12.72161>, <-1,7.7,-12.80115>, <0,15,-13>,
			<0,16,-13>, <1,7.7,-12.80115>, <1.4,8.25,-12.72161>, <1.75,14.75,-12.65201>,
			<1.75,15.75,-12.65201>, <2.025,7.05,-12.59733>, <2.025,7.8,-12.59733>, <3,14.2,-12.40345>,
			<3.5,6.75,-12.30402>, <3.5,7.5,-12.30402>, <3.5,14.5,-12.30402>, <3.5,15,-12.30402>,
			<4.975,7.05,-12.01074>, <4.975,7.8,-12.01074>, <5.6,8.25,-11.59307>, <6,7.7,-11.32575>
		}
		normal_vectors {
			8,
			<-0.555624,0,-0.831434>, <-0.555624,0,0.831434>, <-0.382678,0,-0.923882>, <-0.382678,0,0.923882>,
			<-0.195016,0,-0.9808>, <-0.195016,0,0.9808>, <0,0,-1>, <0,0,1>
		}
		face_indices {
			26,
			<24, 25, 29>, <24, 29, 28>, <21, 22, 25>, <21, 25, 24>,
			<17, 18, 22>, <17, 22, 21>, <20, 19, 15>, <20, 15, 16>,
			<27, 23, 19>, <27, 19, 20>, <26, 23, 27>, <28, 29, 30>,
			<28, 30, 31>, <4, 5, 3>, <4, 3, 2>, <9, 10, 5>,
			<9, 5, 4>, <14, 13, 10>, <14, 10, 9>, <12, 11, 15>,
			<12, 15, 16>, <7, 8, 11>, <7, 11, 12>, <6, 8, 7>,
			<2, 3, 1>, <2, 1, 0>
		}
		normal_indices {
			26,
			<5, 5, 3>, <5, 3, 3>, <5, 5, 5>, <5, 5, 5>,
			<5, 5, 5>, <5, 5, 5>, <5, 5, 7>, <5, 7, 7>,
			<5, 5, 5>, <5, 5, 5>, <5, 5, 5>, <3, 3, 1>,
			<3, 1, 1>, <4, 4, 2>, <4, 2, 2>, <4, 4, 4>,
			<4, 4, 4>, <4, 4, 4>, <4, 4, 4>, <4, 4, 6>,
			<4, 6, 6>, <4, 4, 4>, <4, 4, 4>, <4, 4, 4>,
			<2, 2, 0>, <2, 0, 0>
		}
		#if (version >= 3.1) material #else texture #end { LDXColor0 }
	}
	mesh2 {
		vertex_vectors {
			110,
			<-9.192075,4,-9.19245>, <-9.19215,17,-9.1924>, <-6,7.7,-11.32575>, <-5.6,8.25,-11.59307>,
			<-4.97502,4,-12.01073>, <-4.975,7.05,-12.01074>, <-4.975,7.8,-12.01074>, <-4.975,17,-12.01074>,
			<-4.75,8.75,-12.05546>, <-4.75,10,-12.05546>, <-4.75,11.25,-12.05546>, <-4,0,0>,
			<-4,4,0>, <-3.79,0,-1.04>, <-3.79,4,-1.04>, <-3.6956,0,1.5308>,
			<-3.6956,4,1.5308>, <-3.6955,0,-1.5307>, <-3.6955,4,-1.5307>, <-3.5,6.75,-12.30402>,
			<-3.5,7.5,-12.30402>, <-3.5,8.75,-12.30402>, <-3.5,11.25,-12.30402>, <-3.5,14.5,-12.30402>,
			<-3.5,15,-12.30402>, <-3,14.2,-12.40345>, <-2.85,0,-2.8>, <-2.85,4,-2.8>,
			<-2.8284,0,-2.8284>, <-2.8284,0,2.8284>, <-2.8284,4,-2.8284>, <-2.8284,4,2.8284>,
			<-2.25,8.75,-12.55259>, <-2.25,10,-12.55259>, <-2.25,11.25,-12.55259>, <-2.025,7.05,-12.59733>,
			<-2.025,7.8,-12.59733>, <-1.75,14.75,-12.65201>, <-1.75,15.75,-12.65201>, <-1.5308,0,-3.6956>,
			<-1.5308,0,3.6956>, <-1.5308,4,-3.6956>, <-1.5308,4,3.6956>, <-1.4,8.25,-12.72161>,
			<-1,0,0.58>, <-1,0,3.8011>, <-1,4,0.58>, <-1,4,3.8011>,
			<-1,7.7,-12.80115>, <0,0,-4>, <0,0,-1.15>, <0,0,0>,
			<0,0,4>, <0,4,-13>, <0,4,-4>, <0,4,-1.15>,
			<0,4,0>, <0,4,4>, <0,15,-13>, <0,16,-13>,
			<0,17,-13>, <1,0,0.58>, <1,0,3.8011>, <1,4,0.58>,
			<1,4,3.8011>, <1,7.7,-12.80115>, <1.4,8.25,-12.72161>, <1.5308,0,-3.6956>,
			<1.5308,0,3.6956>, <1.5308,4,-3.6956>, <1.5308,4,3.6956>, <1.75,14.75,-12.65201>,
			<1.75,15.75,-12.65201>, <2.025,7.05,-12.59733>, <2.025,7.8,-12.59733>, <2.25,8.75,-12.55259>,
			<2.25,10,-12.55259>, <2.25,11.25,-12.55259>, <2.8284,0,-2.8284>, <2.8284,0,2.8284>,
			<2.8284,4,-2.8284>, <2.8284,4,2.8284>, <2.85,0,-2.8>, <2.85,4,-2.8>,
			<3,14.2,-12.40345>, <3.5,6.75,-12.30402>, <3.5,7.5,-12.30402>, <3.5,8.75,-12.30402>,
			<3.5,11.25,-12.30402>, <3.5,14.5,-12.30402>, <3.5,15,-12.30402>, <3.6955,0,-1.5307>,
			<3.6955,4,-1.5307>, <3.6956,0,1.5308>, <3.6956,4,1.5308>, <3.79,0,-1.04>,
			<3.79,4,-1.04>, <4,0,0>, <4,4,0>, <4.75,8.75,-12.05546>,
			<4.75,10,-12.05546>, <4.75,11.25,-12.05546>, <4.97502,4,-12.01073>, <4.975,7.05,-12.01074>,
			<4.975,7.8,-12.01074>, <4.975,17,-12.01074>, <5.6,8.25,-11.59307>, <6,7.7,-11.32575>,
			<9.192075,4,-9.19245>, <9.19215,17,-9.1924>
		}
		normal_vectors {
			33,
			<-1,0,0>, <-0.999999,0,0.001477>, <-0.980217,0,0.197928>, <-0.923873,0,-0.382698>,
			<-0.795946,0,0.605368>, <-0.707107,0,-0.707107>, <-0.685182,0,0.728372>, <-0.55563,0.000001,-0.83143>,
			<-0.55563,-0.000001,0.83143>, <-0.502136,0,0.864789>, <-0.501036,0,-0.865426>, <-0.472259,0.000001,-0.88146>,
			<-0.472259,-0.000001,0.88146>, <-0.382688,0.000003,-0.923878>, <-0.382688,-0.000003,0.923878>, <-0.195029,0.000005,-0.980797>,
			<-0.195029,-0.000005,0.980797>, <0,-1,0>, <-0.000001,0.000003,-1>, <0.000001,-0.000003,1>,
			<0,1,0>, <0.194943,0,-0.980815>, <0.382656,0,-0.923891>, <0.382698,0,0.923873>,
			<0.501036,0,-0.865426>, <0.502136,0,0.864789>, <0.685182,0,0.728372>, <0.707107,0,-0.707107>,
			<0.795946,0,0.605368>, <0.923873,0,-0.382698>, <0.980217,0,0.197928>, <1,0,0>,
			<0.999999,0,0.001477>
		}
		face_indices {
			134,
			<85, 102, 53>, <85, 53, 73>, <53, 65, 73>, <103, 102, 85>,
			<76, 66, 65>, <76, 65, 58>, <53, 58, 65>, <66, 76, 75>,
			<66, 75, 74>, <74, 75, 87>, <74, 87, 86>, <86, 87, 99>,
			<86, 99, 104>, <100, 104, 99>, <100, 101, 105>, <100, 105, 104>,
			<71, 77, 76>, <71, 76, 58>, <84, 88, 77>, <84, 77, 71>,
			<88, 84, 89>, <88, 89, 101>, <72, 60, 105>, <72, 105, 90>,
			<59, 60, 72>, <89, 90, 105>, <89, 105, 101>, <102, 103, 107>,
			<102, 107, 108>, <107, 105, 109>, <107, 109, 108>, <107, 106, 105>,
			<104, 105, 106>, <19, 4, 53>, <19, 53, 35>, <53, 48, 35>,
			<5, 4, 19>, <33, 43, 48>, <33, 48, 58>, <53, 58, 48>,
			<43, 33, 32>, <43, 32, 36>, <36, 32, 21>, <36, 21, 20>,
			<20, 21, 8>, <20, 8, 6>, <9, 6, 8>, <9, 10, 7>,
			<9, 7, 6>, <37, 34, 33>, <37, 33, 58>, <25, 22, 34>,
			<25, 34, 37>, <22, 25, 23>, <22, 23, 10>, <38, 60, 7>,
			<38, 7, 24>, <59, 60, 38>, <23, 24, 7>, <23, 7, 10>,
			<4, 5, 2>, <4, 2, 0>, <2, 7, 1>, <2, 1, 0>,
			<2, 3, 7>, <6, 7, 3>, <62, 61, 51>, <62, 51, 52>,
			<51, 44, 45>, <51, 45, 52>, <13, 44, 51>, <13, 51, 17>,
			<51, 50, 26>, <51, 26, 17>, <82, 50, 51>, <82, 51, 91>,
			<51, 61, 95>, <51, 95, 91>, <56, 63, 64>, <56, 64, 57>,
			<47, 46, 56>, <47, 56, 57>, <56, 46, 14>, <56, 14, 18>,
			<27, 55, 56>, <27, 56, 18>, <56, 55, 83>, <56, 83, 92>,
			<96, 63, 56>, <96, 56, 92>, <63, 61, 62>, <63, 62, 64>,
			<45, 44, 46>, <45, 46, 47>, <46, 44, 13>, <46, 13, 14>,
			<26, 50, 55>, <26, 55, 27>, <55, 50, 82>, <55, 82, 83>,
			<95, 61, 63>, <95, 63, 96>, <94, 93, 97>, <94, 97, 98>,
			<81, 79, 93>, <81, 93, 94>, <70, 68, 79>, <70, 79, 81>,
			<31, 29, 40>, <31, 40, 42>, <16, 15, 29>, <16, 29, 31>,
			<12, 11, 15>, <12, 15, 16>, <41, 39, 28>, <41, 28, 30>,
			<54, 49, 39>, <54, 39, 41>, <69, 67, 49>, <69, 49, 54>,
			<80, 78, 67>, <80, 67, 69>, <64, 62, 68>, <64, 68, 70>,
			<42, 40, 45>, <42, 45, 47>, <14, 13, 11>, <14, 11, 12>,
			<30, 28, 26>, <30, 26, 27>, <83, 82, 78>, <83, 78, 80>,
			<98, 97, 95>, <98, 95, 96>
		}
		normal_indices {
			134,
			<16, 14, 19>, <16, 19, 16>, <19, 16, 16>, <14, 14, 16>,
			<16, 16, 16>, <16, 16, 19>, <19, 19, 16>, <16, 16, 16>,
			<16, 16, 16>, <16, 16, 16>, <16, 16, 16>, <16, 16, 16>,
			<16, 16, 14>, <16, 14, 16>, <16, 16, 12>, <16, 12, 14>,
			<16, 16, 16>, <16, 16, 19>, <16, 16, 16>, <16, 16, 16>,
			<16, 16, 16>, <16, 16, 16>, <16, 19, 12>, <16, 12, 16>,
			<19, 19, 16>, <16, 16, 12>, <16, 12, 16>, <14, 14, 8>,
			<14, 8, 8>, <8, 12, 8>, <8, 8, 8>, <8, 8, 12>,
			<14, 12, 8>, <15, 13, 18>, <15, 18, 15>, <18, 15, 15>,
			<13, 13, 15>, <15, 15, 15>, <15, 15, 18>, <18, 18, 15>,
			<15, 15, 15>, <15, 15, 15>, <15, 15, 15>, <15, 15, 15>,
			<15, 15, 15>, <15, 15, 13>, <15, 13, 15>, <15, 15, 11>,
			<15, 11, 13>, <15, 15, 15>, <15, 15, 18>, <15, 15, 15>,
			<15, 15, 15>, <15, 15, 15>, <15, 15, 15>, <15, 18, 11>,
			<15, 11, 15>, <18, 18, 15>, <15, 15, 11>, <15, 11, 15>,
			<13, 13, 7>, <13, 7, 7>, <7, 11, 7>, <7, 7, 7>,
			<7, 7, 11>, <13, 11, 7>, <17, 17, 17>, <17, 17, 17>,
			<17, 17, 17>, <17, 17, 17>, <17, 17, 17>, <17, 17, 17>,
			<17, 17, 17>, <17, 17, 17>, <17, 17, 17>, <17, 17, 17>,
			<17, 17, 17>, <17, 17, 17>, <20, 20, 20>, <20, 20, 20>,
			<20, 20, 20>, <20, 20, 20>, <20, 20, 20>, <20, 20, 20>,
			<20, 20, 20>, <20, 20, 20>, <20, 20, 20>, <20, 20, 20>,
			<20, 20, 20>, <20, 20, 20>, <31, 31, 31>, <31, 31, 31>,
			<0, 0, 0>, <0, 0, 0>, <9, 9, 9>, <9, 9, 9>,
			<24, 24, 24>, <24, 24, 24>, <10, 10, 10>, <10, 10, 10>,
			<25, 25, 25>, <25, 25, 25>, <3, 3, 1>, <3, 1, 1>,
			<5, 5, 3>, <5, 3, 3>, <13, 13, 5>, <13, 5, 5>,
			<27, 27, 22>, <27, 22, 22>, <29, 29, 27>, <29, 27, 27>,
			<32, 32, 29>, <32, 29, 29>, <23, 23, 26>, <23, 26, 26>,
			<19, 19, 23>, <19, 23, 23>, <14, 14, 19>, <14, 19, 19>,
			<6, 6, 14>, <6, 14, 14>, <15, 15, 13>, <15, 13, 13>,
			<22, 22, 21>, <22, 21, 21>, <30, 30, 32>, <30, 32, 32>,
			<26, 26, 28>, <26, 28, 28>, <4, 4, 6>, <4, 6, 6>,
			<1, 1, 2>, <1, 2, 2>
		}
	}
}
#end

#include "lg_2446.inc" // Minifig Helmet Modern

#include "lg_2447.inc" // Minifig Helmet Visor

#include "lg_3815.inc" // Minifig Hips

#include "lg_0976.inc" // ~Minifig Arm Left (Obsolete)

#include "lg_0977.inc" // ~Minifig Hand (Obsolete)

#declare LDX_larm_dot_ldr = union {
// larm.ldr
// ROTATION CENTER 0 0 0 1 "Custom"
// ROTATION CONFIG 0 0
	object {
		lg_0976
		matrix <0,0,-25,-25,0,0,0,-25,0,0,0,0>
		LDXSeamMatrix(12.484699, 29.181366, 18.261364, 20.604, 8.848385, -3.819385)
		matrix <0,0,-1,-0.71,0.71,0,0.71,0.71,0,0,0,50>
		#if (version >= 3.1) material #else texture #end { LDXColor1 }
	}
	object {
		lg_0977
		matrix <0,0,-25,-25,0,0,0,-25,0,0,0,0>
		LDXSeamMatrix(25.52, 12, 12, 3.24, 2, 0)
		matrix <1,0,0,0,1,0,0,0,1,-29,4,28>
		#if (version >= 3.1) material #else texture #end { LDXColor14 }
	}
}

#include "lg_0975.inc" // ~Minifig Arm Right (Obsolete)

#declare LDX_rarm_dot_ldr = union {
// rarm.ldr
// ROTATION CENTER 0 0 0 1 "Custom"
// ROTATION CONFIG 0 0
	object {
		lg_0975
		matrix <0,0,-25,-25,0,0,0,-25,0,0,0,0>
		LDXSeamMatrix(12.484699, 29.181366, 18.261364, -20.604, 8.848385, -3.819385)
		matrix <0,0,-1,-0.71,0.71,0,0.71,0.71,0,0,0,0>
		#if (version >= 3.1) material #else texture #end { LDXColor1 }
	}
	object {
		lg_0977
		matrix <0,0,-25,-25,0,0,0,-25,0,0,0,0>
		LDXSeamMatrix(25.52, 12, 12, 3.24, 2, 0)
		matrix <1,0,0,0,1,0,0,0,1,-29,4,22>
		#if (version >= 3.1) material #else texture #end { LDXColor14 }
	}
// NOFILE
}

#declare LDX_person_dot_ldr = union {
// person.ldr
// ROTATION CENTER 0 0 0 1 "Custom"
// ROTATION CONFIG 0 0
	object {
		lg_0973
		matrix <0,0,-25,-25,0,0,0,-25,0,0,0,0>
		LDXSeamMatrix(38, 44, 20, 0, 10, 0)
		matrix <1,0,0,0,1,0,0,0,1,0,0,0>
		#if (version >= 3.1) material #else texture #end { LDXColor1 }
	}
	object {
		LDX_3626bp05_dot_dat
		LDXSeamMatrix(26, 28, 26, 0, 10, 0)
		matrix <1,0,0,0,1,0,0,0,1,0,-24,0>
		#if (version >= 3.1) material #else texture #end { LDXColor14 }
	}
	object {
		lg_2446
		matrix <0,0,-25,-25,0,0,0,-25,0,0,0,0>
		LDXSeamMatrix(31.6, 34.615421, 34.5, 0, 7.807711, -1.25)
		matrix <1,0,0,0,1,0,0,0,1,0,-24,0>
		#if (version >= 3.1) material #else texture #end { LDXColor1 }
	}
	object {
		lg_2447_clear
		matrix <0,0,-25,-25,0,0,0,-25,0,0,0,0>
		LDXSeamMatrix(34, 17, 24, 0, 11, -8)
		matrix <1,0,0,0,1,0,0,0,1,0,-24,0>
		#if (version >= 3.1) material #else texture #end { LDXColor35 }
	}
	object {
		lg_3815
		matrix <0,0,-25,-25,0,0,0,-25,0,0,0,0>
		LDXSeamMatrix(36, 32.000195, 20, 0, 5.000097, 0)
		matrix <1,0,0,0,1,0,0,0,1,0,32,0>
		#if (version >= 3.1) material #else texture #end { LDXColor1 }
	}
	object {
		LDX_larm_dot_ldr
		matrix <0,-0.5,0.87,0,0.87,0.5,-1,0,0,50,9,0>
		#if (version >= 3.1) material #else texture #end { LDXColor1 }
	}
	object {
		LDX_rarm_dot_ldr
		matrix <0,-0.5,0.87,0,0.87,0.5,-1,0,0,0,9,0>
		#if (version >= 3.1) material #else texture #end { LDXColor1 }
	}
}

#include "lg_3651.inc" // Technic Connector (Pin/Bush) with 2 Studs

#include "lg_3622.inc" // Brick  1 x  3

#include "lg_3829c01.inc" // Car Steering Stand and Wheel (Complete)

#include "lg_3895.inc" // Technic Brick  1 x 12 with Holes

#include "lg_3894.inc" // Technic Brick  1 x  6 with Holes

#include "lg_4873.inc" // Bar  1 x  6 with Studs Open

#include "lg_4865a.inc" // Panel  1 x  2 x  1 with Square Corners

#include "lg_3710.inc" // Plate  1 x  4

#include "lg_4286.inc" // Slope Brick 33  3 x  1

#include "lg_3937.inc" // Hinge  1 x  2 Base

#include "lg_4590.inc" // Plate  1 x  4 Offset

#include "lg_3938.inc" // Hinge  1 x  2 Top

#include "lg_6141.inc" // Plate  1 x  1 Round

#declare LDX_lamp_dot_ldr = union {
// lamp.ldr
// ROTATION CENTER 0 0 0 1 "Custom"
// ROTATION CONFIG 0 0
	object {
		lg_4590
		matrix <0,0,-25,-25,0,0,0,-25,0,0,0,0>
		LDXSeamMatrix(76, 20, 28, 0, 6, 4)
		matrix <1,0,0,0,1,0,0,0,1,0,0,0>
		#if (version >= 3.1) material #else texture #end { LDXColor1 }
	}
	object {
		lg_3938
		matrix <0,0,-25,-25,0,0,0,-25,0,0,0,0>
		LDXSeamMatrix(40, 20, 20, 0, 6, 0)
		matrix <1,0,0,0,1,0,0,0,1,0,8,0>
		#if (version >= 3.1) material #else texture #end { LDXColor1 }
	}
	object {
		lg_6141_clear
		matrix <0,0,-25,-25,0,0,0,-25,0,0,0,0>
		LDXSeamMatrix(20, 12, 20, 0, 2, 0)
		matrix <1,0,0,0,1,0,0,0,1,-30,-8,10>
		#if (version >= 3.1) material #else texture #end { LDXColor47 }
	}
	object {
		lg_6141_clear
		matrix <0,0,-25,-25,0,0,0,-25,0,0,0,0>
		LDXSeamMatrix(20, 12, 20, 0, 2, 0)
		matrix <1,0,0,0,1,0,0,0,1,30,-8,10>
		#if (version >= 3.1) material #else texture #end { LDXColor47 }
	}
	object {
		LDX_light_dot_dat
		LDXSeamMatrix(8, 8, 8, 0, 0, 0)
		matrix <1,0,0,0,1,0,0,0,1,30,-8,10>
		#if (version >= 3.1) material #else texture #end { LDXColor47 }
	}
	#if (LDXStuds)
		object {
			lg_knob
			matrix <0,0,-25,-25,0,0,0,-25,0,0,0,0>
		matrix <1,0,0,0,1,0,0,0,1,30,16,10>
			#if (version >= 3.1) material #else texture #end { LDXColor1 }
		}
	#end // LDXStuds
	object {
		LDX_light_dot_dat
		LDXSeamMatrix(8, 8, 8, 0, 0, 0)
		matrix <1,0,0,0,1,0,0,0,1,-30,-8,10>
		#if (version >= 3.1) material #else texture #end { LDXColor47 }
	}
	#if (LDXStuds)
		object {
			lg_knob
			matrix <0,0,-25,-25,0,0,0,-25,0,0,0,0>
		matrix <1,0,0,0,1,0,0,0,1,-30,16,10>
			#if (version >= 3.1) material #else texture #end { LDXColor1 }
		}
	#end // LDXStuds
}

#include "lg_3020.inc" // Plate  2 x  4

#include "lg_3034.inc" // Plate  2 x  8

#include "lg_3666.inc" // Plate  1 x  6

#declare LDX_spoil_dot_ldr = union {
// spoil.ldr
// ROTATION CENTER 0 0 0 1 "Custom"
// ROTATION CONFIG 0 0
	object {
		lg_4213
		matrix <0,0,-25,-25,0,0,0,-25,0,0,0,0>
		LDXSeamMatrix(80, 12, 80, 0, 2, 0)
		matrix <1,0,0,0,1,0,0,0,1,0,0,0>
		#if (version >= 3.1) material #else texture #end { LDXColor0 }
	}
	object {
		lg_3020
		matrix <0,0,-25,-25,0,0,0,-25,0,0,0,0>
		LDXSeamMatrix(80, 12, 40, 0, 2, 0)
		matrix <1,0,0,0,1,0,0,0,1,0,-8,0>
		#if (version >= 3.1) material #else texture #end { LDXColor1 }
	}
	object {
		lg_3034
		matrix <0,0,-25,-25,0,0,0,-25,0,0,0,0>
		LDXSeamMatrix(160, 12, 40, 0, 2, 0)
		matrix <1,0,0,0,1,0,0,0,1,0,-8,-40>
		#if (version >= 3.1) material #else texture #end { LDXColor1 }
	}
	object {
		lg_4865a
		matrix <0,0,-25,-25,0,0,0,-25,0,0,0,0>
		LDXSeamMatrix(40, 24, 20, 0, 12, 0)
		matrix <0,0,-1,0,1,0,1,0,0,70,-32,-40>
		#if (version >= 3.1) material #else texture #end { LDXColor1 }
	}
	object {
		lg_4865a
		matrix <0,0,-25,-25,0,0,0,-25,0,0,0,0>
		LDXSeamMatrix(40, 24, 20, 0, 12, 0)
		matrix <0,0,1,0,1,0,-1,0,0,-70,-32,-40>
		#if (version >= 3.1) material #else texture #end { LDXColor1 }
	}
	object {
		lg_3666
		matrix <0,0,-25,-25,0,0,0,-25,0,0,0,0>
		LDXSeamMatrix(120, 12, 20, 0, 2, 0)
		matrix <1,0,0,0,1,0,0,0,1,0,-16,-50>
		#if (version >= 3.1) material #else texture #end { LDXColor0 }
	}
}

#include "lg_3024.inc" // Plate  1 x  1

#include "lg_3069b.inc" // Tile  1 x  2 with Groove

#include "lg_3068b.inc" // Tile  2 x  2 with Groove

#include "lg_4274.inc" // Technic Pin 1/2

#include "lg_3040b.inc" // Slope Brick 45  2 x  1

#include "lg_3010.inc" // Brick  1 x  4

#declare LDX_strcture_dot_ldr = union {
// strcture.ldr
// ROTATION CENTER 0 0 0 1 "Custom"
// ROTATION CONFIG 0 0
	object {
		LDX_wheel_dot_ldr
		matrix <0,0,1,0,1,0,-1,0,0,70,-14,-100>
		#if (version >= 3.1) material #else texture #end { LDXColor1 }
	}
	object {
		LDX_wheel_dot_ldr
		matrix <0,0,-1,0,1,0,1,0,0,-70,-14,-100>
		#if (version >= 3.1) material #else texture #end { LDXColor1 }
	}
	object {
		LDX_axel_dot_ldr
		matrix <0,0,-1,0,1,0,1,0,0,-70,22,151>
		#if (version >= 3.1) material #else texture #end { LDXColor1 }
	}
	object {
		lg_4315
		matrix <0,0,-25,-25,0,0,0,-25,0,0,0,0>
		LDXSeamMatrix(80, 12, 28, 0, 2, -4)
		matrix <-1,0,0,0,1,0,0,0,-1,0,-80,110>
		#if (version >= 3.1) material #else texture #end { LDXColor0 }
	}
	object {
		lg_4315
		matrix <0,0,-25,-25,0,0,0,-25,0,0,0,0>
		LDXSeamMatrix(80, 12, 28, 0, 2, -4)
		matrix <-1,0,0,0,1,0,0,0,-1,0,-88,110>
		#if (version >= 3.1) material #else texture #end { LDXColor0 }
	}
	object {
		LDX_susp_dot_ldr
		matrix <0,0,1,0,1,0,-1,0,0,0,-24,80>
		#if (version >= 3.1) material #else texture #end { LDXColor1 }
	}
	object {
		LDX_gate_dot_ldr
		matrix <-1,0,0,0,0.27,-0.96,0,-0.96,-0.27,0,-41.810001,137.389999>
		#if (version >= 3.1) material #else texture #end { LDXColor0 }
	}
	object {
		lg_4315
		matrix <0,0,-25,-25,0,0,0,-25,0,0,0,0>
		LDXSeamMatrix(80, 12, 28, 0, 2, -4)
		matrix <1,0,0,0,0.9,-0.44,0,0.44,0.9,0,12.57,170.899994>
		#if (version >= 3.1) material #else texture #end { LDXColor0 }
	}
	object {
		lg_3036
		matrix <0,0,-25,-25,0,0,0,-25,0,0,0,0>
		LDXSeamMatrix(160, 12, 120, 0, 2, 0)
		matrix <0,0,-1,0,1,0,1,0,0,0,0,0>
		#if (version >= 3.1) material #else texture #end { LDXColor1 }
	}
	object {
		LDX_4287a_dot_dat
		LDXSeamMatrix(20, 28, 60, 0, 10, -20)
		matrix <1,0,0,0,1,0,0,0,1,-30,-24,-70>
		#if (version >= 3.1) material #else texture #end { LDXColor1 }
	}
	object {
		LDX_4287a_dot_dat
		LDXSeamMatrix(20, 28, 60, 0, 10, -20)
		matrix <1,0,0,0,1,0,0,0,1,30,-24,-70>
		#if (version >= 3.1) material #else texture #end { LDXColor1 }
	}
	object {
		lg_3747a
		matrix <0,0,-25,-25,0,0,0,-25,0,0,0,0>
		LDXSeamMatrix(40, 28, 60, 0, 10, -20)
		matrix <1,0,0,0,1,0,0,0,1,0,-24,-70>
		#if (version >= 3.1) material #else texture #end { LDXColor0 }
	}
	object {
		lg_3747a_slope
		matrix <0,0,-25,-25,0,0,0,-25,0,0,0,0>
		LDXSeamMatrix(40, 28, 60, 0, 10, -20)
		matrix <1,0,0,0,1,0,0,0,1,0,-24,-70>
		#if (version >= 3.1) material #else texture #end { LDXColor0_slope }
	}
	object {
		lg_3939
		matrix <0,0,-25,-25,0,0,0,-25,0,0,0,0>
		LDXSeamMatrix(120, 28, 60, 0, 10, -20)
		matrix <1,0,0,0,1,0,0,0,1,0,-48,-70>
		#if (version >= 3.1) material #else texture #end { LDXColor1 }
	}
	object {
		lg_3939_clear
		matrix <0,0,-25,-25,0,0,0,-25,0,0,0,0>
		LDXSeamMatrix(120, 28, 60, 0, 10, -20)
		matrix <1,0,0,0,1,0,0,0,1,0,-72,-30>
		#if (version >= 3.1) material #else texture #end { LDXColor33 }
	}
	object {
		lg_3822
		matrix <0,0,-25,-25,0,0,0,-25,0,0,0,0>
		LDXSeamMatrix(25, 28, 60, 2.5, 10, 20)
		matrix <1,0,0,0,1,0,0,0,1,50,-48,-50>
		#if (version >= 3.1) material #else texture #end { LDXColor1 }
	}
	object {
		lg_3821
		matrix <0,0,-25,-25,0,0,0,-25,0,0,0,0>
		LDXSeamMatrix(25, 28, 60, -2.5, 10, 20)
		matrix <1,0,0,0,1,0,0,0,1,-50,-48,-50>
		#if (version >= 3.1) material #else texture #end { LDXColor1 }
	}
	object {
		lg_3039
		matrix <0,0,-25,-25,0,0,0,-25,0,0,0,0>
		LDXSeamMatrix(40, 28, 40, 0, 10, -10)
		matrix <1,0,0,0,1,0,0,0,1,0,-24,10>
		#if (version >= 3.1) material #else texture #end { LDXColor0 }
	}
	object {
		lg_3039_slope
		matrix <0,0,-25,-25,0,0,0,-25,0,0,0,0>
		LDXSeamMatrix(40, 28, 40, 0, 10, -10)
		matrix <1,0,0,0,1,0,0,0,1,0,-24,10>
		#if (version >= 3.1) material #else texture #end { LDXColor0_slope }
	}
	object {
		LDX_3048b_dot_dat
		LDXSeamMatrix(40, 24, 20, 0, 12, 0)
		matrix <1,0,0,0,1,0,0,0,1,0,-48,10>
		#if (version >= 3.1) material #else texture #end { LDXColor1 }
	}
	object {
		lg_3816
		matrix <0,0,-25,-25,0,0,0,-25,0,0,0,0>
		LDXSeamMatrix(18, 37, 20, -10.5, 9.5, -1)
		matrix <1,0,0,0,0,-1,0,1,0,0,-8,-32>
		#if (version >= 3.1) material #else texture #end { LDXColor1 }
	}
	object {
		lg_3817
		matrix <0,0,-25,-25,0,0,0,-25,0,0,0,0>
		LDXSeamMatrix(18, 37, 20, 10.5, 9.5, -1)
		matrix <1,0,0,0,0,-1,0,1,0,0,-8,-32>
		#if (version >= 3.1) material #else texture #end { LDXColor1 }
	}
	object {
		LDX_person_dot_ldr
		matrix <1,0,0,0,0.8,-0.6,0,0.6,0.8,0,-43.110001,-5.76>
		#if (version >= 3.1) material #else texture #end { LDXColor1 }
	}
	object {
		lg_3651
		matrix <0,0,-25,-25,0,0,0,-25,0,0,0,0>
		LDXSeamMatrix(20, 28, 39.001221, 0, 0, -9.50061)
		matrix <0,0,1,1,0,0,0,1,0,0,-8,40>
		#if (version >= 3.1) material #else texture #end { LDXColor7 }
	}
	object {
		lg_3622
		matrix <0,0,-25,-25,0,0,0,-25,0,0,0,0>
		LDXSeamMatrix(60, 28, 20, 0, 10, 0)
		matrix <0,0,-1,-1,0,0,0,1,0,34,-28,50>
		#if (version >= 3.1) material #else texture #end { LDXColor0 }
	}
	object {
		lg_3622
		matrix <0,0,-25,-25,0,0,0,-25,0,0,0,0>
		LDXSeamMatrix(60, 28, 20, 0, 10, 0)
		matrix <0,0,-1,1,0,0,0,-1,0,-34,-28,50>
		#if (version >= 3.1) material #else texture #end { LDXColor0 }
	}
	object {
		lg_3651
		matrix <0,0,-25,-25,0,0,0,-25,0,0,0,0>
		LDXSeamMatrix(20, 28, 39.001221, 0, 0, -9.50061)
		matrix <0,0,-1,-1,0,0,0,1,0,0,-8,60>
		#if (version >= 3.1) material #else texture #end { LDXColor7 }
	}
	object {
		lg_3829c01
		matrix <0,0,-25,-25,0,0,0,-25,0,0,0,0>
		LDXSeamMatrix(40, 46.720001, 20.240002, 0, -15.360001, -0.12)
		matrix <0,0,-1,0,1,0,1,0,0,-30,-8,-40>
		#if (version >= 3.1) material #else texture #end { LDXColor1 }
	}
	object {
		lg_3829c01
		matrix <0,0,-25,-25,0,0,0,-25,0,0,0,0>
		LDXSeamMatrix(40, 46.720001, 20.240002, 0, -15.360001, -0.12)
		matrix <0,0,1,0,1,0,-1,0,0,30,-8,-40>
		#if (version >= 3.1) material #else texture #end { LDXColor1 }
	}
	object {
		lg_3895
		matrix <0,0,-25,-25,0,0,0,-25,0,0,0,0>
		LDXSeamMatrix(240, 28, 20, 0, 10, 0)
		matrix <0,0,-1,0,1,0,1,0,0,50,-24,0>
		#if (version >= 3.1) material #else texture #end { LDXColor1 }
	}
	object {
		lg_3895
		matrix <0,0,-25,-25,0,0,0,-25,0,0,0,0>
		LDXSeamMatrix(240, 28, 20, 0, 10, 0)
		matrix <0,0,-1,0,1,0,1,0,0,-50,-24,0>
		#if (version >= 3.1) material #else texture #end { LDXColor1 }
	}
	object {
		lg_3894
		matrix <0,0,-25,-25,0,0,0,-25,0,0,0,0>
		LDXSeamMatrix(120, 28, 20, 0, 10, 0)
		matrix <0,0,-1,0,1,0,1,0,0,50,-48,60>
		#if (version >= 3.1) material #else texture #end { LDXColor1 }
	}
	object {
		lg_4873
		matrix <0,0,-25,-25,0,0,0,-25,0,0,0,0>
		LDXSeamMatrix(116, 28, 16, 0, 10, 0)
		matrix <1,0,0,0,1,0,0,0,1,0,-72,50>
		#if (version >= 3.1) material #else texture #end { LDXColor1 }
	}
	object {
		lg_4873
		matrix <0,0,-25,-25,0,0,0,-25,0,0,0,0>
		LDXSeamMatrix(116, 28, 16, 0, 10, 0)
		matrix <1,0,0,0,1,0,0,0,1,0,-72,110>
		#if (version >= 3.1) material #else texture #end { LDXColor1 }
	}
	object {
		lg_3894
		matrix <0,0,-25,-25,0,0,0,-25,0,0,0,0>
		LDXSeamMatrix(120, 28, 20, 0, 10, 0)
		matrix <0,0,-1,0,1,0,1,0,0,-50,-48,60>
		#if (version >= 3.1) material #else texture #end { LDXColor1 }
	}
	object {
		lg_4865a
		matrix <0,0,-25,-25,0,0,0,-25,0,0,0,0>
		LDXSeamMatrix(40, 24, 20, 0, 12, 0)
		matrix <0,0,-1,0,1,0,1,0,0,-50,-72,80>
		#if (version >= 3.1) material #else texture #end { LDXColor1 }
	}
	object {
		lg_4865a
		matrix <0,0,-25,-25,0,0,0,-25,0,0,0,0>
		LDXSeamMatrix(40, 24, 20, 0, 12, 0)
		matrix <0,0,1,0,1,0,-1,0,0,50,-72,80>
		#if (version >= 3.1) material #else texture #end { LDXColor1 }
	}
	object {
		lg_3710
		matrix <0,0,-25,-25,0,0,0,-25,0,0,0,0>
		LDXSeamMatrix(80, 12, 20, 0, 2, 0)
		matrix <1,0,0,0,1,0,0,0,1,0,-80,70>
		#if (version >= 3.1) material #else texture #end { LDXColor1 }
	}
	object {
		lg_4315
		matrix <0,0,-25,-25,0,0,0,-25,0,0,0,0>
		LDXSeamMatrix(80, 12, 28, 0, 2, -4)
		matrix <1,0,0,0,1,0,0,0,1,0,-80,50>
		#if (version >= 3.1) material #else texture #end { LDXColor1 }
	}
	object {
		lg_3710
		matrix <0,0,-25,-25,0,0,0,-25,0,0,0,0>
		LDXSeamMatrix(80, 12, 20, 0, 2, 0)
		matrix <1,0,0,0,1,0,0,0,1,0,-80,90>
		#if (version >= 3.1) material #else texture #end { LDXColor1 }
	}
	object {
		lg_4213_clear
		matrix <0,0,-25,-25,0,0,0,-25,0,0,0,0>
		LDXSeamMatrix(80, 12, 80, 0, 2, 0)
		matrix <1,0,0,0,1,0,0,0,1,0,-80,0>
		#if (version >= 3.1) material #else texture #end { LDXColor33 }
	}
	object {
		lg_4286
		matrix <0,0,-25,-25,0,0,0,-25,0,0,0,0>
		LDXSeamMatrix(20, 28, 60, 0, 10, -20)
		matrix <1,0,0,0,1,0,0,0,1,30,-104,90>
		#if (version >= 3.1) material #else texture #end { LDXColor1 }
	}
	object {
		lg_4286_slope
		matrix <0,0,-25,-25,0,0,0,-25,0,0,0,0>
		LDXSeamMatrix(20, 28, 60, 0, 10, -20)
		matrix <1,0,0,0,1,0,0,0,1,30,-104,90>
		#if (version >= 3.1) material #else texture #end { LDXColor1_slope }
	}
	object {
		lg_4286
		matrix <0,0,-25,-25,0,0,0,-25,0,0,0,0>
		LDXSeamMatrix(20, 28, 60, 0, 10, -20)
		matrix <1,0,0,0,1,0,0,0,1,-30,-104,90>
		#if (version >= 3.1) material #else texture #end { LDXColor1 }
	}
	object {
		lg_4286_slope
		matrix <0,0,-25,-25,0,0,0,-25,0,0,0,0>
		LDXSeamMatrix(20, 28, 60, 0, 10, -20)
		matrix <1,0,0,0,1,0,0,0,1,-30,-104,90>
		#if (version >= 3.1) material #else texture #end { LDXColor1_slope }
	}
	object {
		lg_3937
		matrix <0,0,-25,-25,0,0,0,-25,0,0,0,0>
		LDXSeamMatrix(40, 22, 20, 0, 13, 0)
		matrix <1,0,0,0,1,0,0,0,1,0,-104,50>
		#if (version >= 3.1) material #else texture #end { LDXColor1 }
	}
	object {
		LDX_lamp_dot_ldr
		matrix <1,0,0,0,0.17,0.98,0,-0.98,0.17,0,-97,32.07>
		#if (version >= 3.1) material #else texture #end { LDXColor1 }
	}
	object {
		LDX_spoil_dot_ldr
		matrix <-1,0,0,0,0.98,0.17,0,0.17,-0.98,0,-94,159>
		#if (version >= 3.1) material #else texture #end { LDXColor0 }
	}
	object {
		lg_3024
		matrix <0,0,-25,-25,0,0,0,-25,0,0,0,0>
		LDXSeamMatrix(20, 12, 20, 0, 2, 0)
		matrix <1,0,0,0,1,0,0,0,1,-30,-96,110>
		#if (version >= 3.1) material #else texture #end { LDXColor1 }
	}
	object {
		lg_3024
		matrix <0,0,-25,-25,0,0,0,-25,0,0,0,0>
		LDXSeamMatrix(20, 12, 20, 0, 2, 0)
		matrix <1,0,0,0,1,0,0,0,1,30,-96,110>
		#if (version >= 3.1) material #else texture #end { LDXColor1 }
	}
	object {
		lg_3069b
		matrix <0,0,-25,-25,0,0,0,-25,0,0,0,0>
		LDXSeamMatrix(40, 8, 20, 0, 4, 0)
		matrix <1,0,0,0,1,0,0,0,1,0,-96,110>
		#if (version >= 3.1) material #else texture #end { LDXColor14 }
	}
	object {
		lg_3068b
		matrix <0,0,-25,-25,0,0,0,-25,0,0,0,0>
		LDXSeamMatrix(40, 8, 40, 0, 4, 0)
		matrix <1,0,0,0,1,0,0,0,1,0,-88,80>
		#if (version >= 3.1) material #else texture #end { LDXColor1 }
	}
	object {
		lg_4274
		matrix <0,0,-25,-25,0,0,0,-25,0,0,0,0>
		LDXSeamMatrix(24, 16, 16, -8, 0, 0)
		matrix <-1,0,0,0,1,0,0,0,-1,-60,-14,100>
		#if (version >= 3.1) material #else texture #end { LDXColor7 }
	}
	object {
		lg_4274
		matrix <0,0,-25,-25,0,0,0,-25,0,0,0,0>
		LDXSeamMatrix(24, 16, 16, -8, 0, 0)
		matrix <1,0,0,0,1,0,0,0,1,60,-14,100>
		#if (version >= 3.1) material #else texture #end { LDXColor7 }
	}
	object {
		lg_4274
		matrix <0,0,-25,-25,0,0,0,-25,0,0,0,0>
		LDXSeamMatrix(24, 16, 16, -8, 0, 0)
		matrix <-1,0,0,0,1,0,0,0,-1,-60,-14,60>
		#if (version >= 3.1) material #else texture #end { LDXColor7 }
	}
	object {
		lg_4274
		matrix <0,0,-25,-25,0,0,0,-25,0,0,0,0>
		LDXSeamMatrix(24, 16, 16, -8, 0, 0)
		matrix <1,0,0,0,1,0,0,0,1,60,-14,60>
		#if (version >= 3.1) material #else texture #end { LDXColor7 }
	}
	object {
		lg_4274
		matrix <0,0,-25,-25,0,0,0,-25,0,0,0,0>
		LDXSeamMatrix(24, 16, 16, -8, 0, 0)
		matrix <-1,0,0,0,1,0,0,0,-1,-60,-14,40>
		#if (version >= 3.1) material #else texture #end { LDXColor7 }
	}
	object {
		lg_4274
		matrix <0,0,-25,-25,0,0,0,-25,0,0,0,0>
		LDXSeamMatrix(24, 16, 16, -8, 0, 0)
		matrix <1,0,0,0,1,0,0,0,1,60,-14,40>
		#if (version >= 3.1) material #else texture #end { LDXColor7 }
	}
	object {
		lg_4274
		matrix <0,0,-25,-25,0,0,0,-25,0,0,0,0>
		LDXSeamMatrix(24, 16, 16, -8, 0, 0)
		matrix <-1,0,0,0,1,0,0,0,-1,-60,-14,20>
		#if (version >= 3.1) material #else texture #end { LDXColor7 }
	}
	object {
		lg_4274
		matrix <0,0,-25,-25,0,0,0,-25,0,0,0,0>
		LDXSeamMatrix(24, 16, 16, -8, 0, 0)
		matrix <1,0,0,0,1,0,0,0,1,60,-14,20>
		#if (version >= 3.1) material #else texture #end { LDXColor7 }
	}
	object {
		lg_4274
		matrix <0,0,-25,-25,0,0,0,-25,0,0,0,0>
		LDXSeamMatrix(24, 16, 16, -8, 0, 0)
		matrix <-1,0,0,0,1,0,0,0,-1,-60,-14,0>
		#if (version >= 3.1) material #else texture #end { LDXColor7 }
	}
	object {
		lg_4274
		matrix <0,0,-25,-25,0,0,0,-25,0,0,0,0>
		LDXSeamMatrix(24, 16, 16, -8, 0, 0)
		matrix <1,0,0,0,1,0,0,0,1,60,-14,0>
		#if (version >= 3.1) material #else texture #end { LDXColor7 }
	}
	object {
		lg_4274
		matrix <0,0,-25,-25,0,0,0,-25,0,0,0,0>
		LDXSeamMatrix(24, 16, 16, -8, 0, 0)
		matrix <-1,0,0,0,1,0,0,0,-1,-60,-14,-20>
		#if (version >= 3.1) material #else texture #end { LDXColor7 }
	}
	object {
		lg_4274
		matrix <0,0,-25,-25,0,0,0,-25,0,0,0,0>
		LDXSeamMatrix(24, 16, 16, -8, 0, 0)
		matrix <1,0,0,0,1,0,0,0,1,60,-14,-20>
		#if (version >= 3.1) material #else texture #end { LDXColor7 }
	}
	object {
		lg_4274
		matrix <0,0,-25,-25,0,0,0,-25,0,0,0,0>
		LDXSeamMatrix(24, 16, 16, -8, 0, 0)
		matrix <-1,0,0,0,1,0,0,0,-1,-60,-14,-40>
		#if (version >= 3.1) material #else texture #end { LDXColor7 }
	}
	object {
		lg_4274
		matrix <0,0,-25,-25,0,0,0,-25,0,0,0,0>
		LDXSeamMatrix(24, 16, 16, -8, 0, 0)
		matrix <1,0,0,0,1,0,0,0,1,60,-14,-40>
		#if (version >= 3.1) material #else texture #end { LDXColor7 }
	}
	object {
		lg_3040b
		matrix <0,0,-25,-25,0,0,0,-25,0,0,0,0>
		LDXSeamMatrix(20, 28, 40, 0, 10, -10)
		matrix <0,1,0,-1,0,0,0,0,1,84,-12,-20>
		#if (version >= 3.1) material #else texture #end { LDXColor0 }
	}
	object {
		lg_3040b_slope
		matrix <0,0,-25,-25,0,0,0,-25,0,0,0,0>
		LDXSeamMatrix(20, 28, 40, 0, 10, -10)
		matrix <0,1,0,-1,0,0,0,0,1,84,-12,-20>
		#if (version >= 3.1) material #else texture #end { LDXColor0_slope }
	}
	object {
		lg_3040b
		matrix <0,0,-25,-25,0,0,0,-25,0,0,0,0>
		LDXSeamMatrix(20, 28, 40, 0, 10, -10)
		matrix <0,-1,0,1,0,0,0,0,1,-84,-12,-20>
		#if (version >= 3.1) material #else texture #end { LDXColor0 }
	}
	object {
		lg_3040b_slope
		matrix <0,0,-25,-25,0,0,0,-25,0,0,0,0>
		LDXSeamMatrix(20, 28, 40, 0, 10, -10)
		matrix <0,-1,0,1,0,0,0,0,1,-84,-12,-20>
		#if (version >= 3.1) material #else texture #end { LDXColor0_slope }
	}
	object {
		lg_3040b
		matrix <0,0,-25,-25,0,0,0,-25,0,0,0,0>
		LDXSeamMatrix(20, 28, 40, 0, 10, -10)
		matrix <0,-1,0,-1,0,0,0,0,-1,84,-12,80>
		#if (version >= 3.1) material #else texture #end { LDXColor0 }
	}
	object {
		lg_3040b_slope
		matrix <0,0,-25,-25,0,0,0,-25,0,0,0,0>
		LDXSeamMatrix(20, 28, 40, 0, 10, -10)
		matrix <0,-1,0,-1,0,0,0,0,-1,84,-12,80>
		#if (version >= 3.1) material #else texture #end { LDXColor0_slope }
	}
	object {
		lg_3040b
		matrix <0,0,-25,-25,0,0,0,-25,0,0,0,0>
		LDXSeamMatrix(20, 28, 40, 0, 10, -10)
		matrix <0,1,0,1,0,0,0,0,-1,-84,-12,80>
		#if (version >= 3.1) material #else texture #end { LDXColor0 }
	}
	object {
		lg_3040b_slope
		matrix <0,0,-25,-25,0,0,0,-25,0,0,0,0>
		LDXSeamMatrix(20, 28, 40, 0, 10, -10)
		matrix <0,1,0,1,0,0,0,0,-1,-84,-12,80>
		#if (version >= 3.1) material #else texture #end { LDXColor0_slope }
	}
	object {
		lg_3010
		matrix <0,0,-25,-25,0,0,0,-25,0,0,0,0>
		LDXSeamMatrix(80, 28, 20, 0, 10, 0)
		matrix <0,0,-1,1,0,0,0,-1,0,-84,-12,30>
		#if (version >= 3.1) material #else texture #end { LDXColor1 }
	}
	object {
		lg_3010
		matrix <0,0,-25,-25,0,0,0,-25,0,0,0,0>
		LDXSeamMatrix(80, 28, 20, 0, 10, 0)
		matrix <0,0,-1,-1,0,0,0,1,0,84,-12,30>
		#if (version >= 3.1) material #else texture #end { LDXColor1 }
	}
}

#declare LDX_complete_dot_ldr = union {
// FILE complete.ldr
// complete.ldr
// WRITE Author: Michael Horvath
// This work is licensed under a Creative Commons Attribution-ShareAlike 4.0
// International License. You should have received a copy of the license along
// with this work. If not, see <http://creativecommons.org/licenses/by-sa/4.0/>.
// ROTATION CENTER 0 0 0 1 "Custom"
// ROTATION CONFIG 0 0
	object {
		LDX_strcture_dot_ldr
		matrix <1,0,0,0,0.99,0.14,0,-0.14,0.99,0,-35.990002,-25.42>
		#if (version >= 3.1) material #else texture #end { LDXColor0 }
	}
#if (LDXRefls = 0)
	no_reflection
#end
#if (LDXShads = 0)
	no_shadow
#end
}

// complete.ldr
object {
	LDX_complete_dot_ldr
	#if (version >= 3.1) material #else texture #end { LDXColor7 }
}

// Floor
#if (LDXFloor != 0)
object {
	plane { LDXFloorAxis, LDXFloorLoc hollow }
	texture {
		pigment { color rgb <LDXFloorR,LDXFloorG,LDXFloorB> }
		finish { ambient LDXFloorAmb diffuse LDXFloorDif }
	}
}
#end

