// Generated by L3P v1.4 BETA 20131119 (Win32)  (C) 1998-2013 Lars C. Hassing SP.lars@AM.hassings.dk
// L3P website:  http://www.hassings.dk/l3/l3p.html
// LDraw.org:    http://www.ldraw.org
// Date:         Tue Jul 09 00:46:06 2019
// Input file:   every_color.ldr
// Title:        Every Color
// Author:       MLCad
// ModelDir:     .
// WorkDir:      D:\GitHub\mike_ldraw_models\tests\every_color
// LDRAWDIR:     C:\Users\Public\Documents\LDraw (LDRAWDIR environment variable)
// SearchDirs:   (Default)
// SearchDir1:   .\ (0x10)
// SearchDir2:   C:\Users\Public\Documents\LDraw\P\ (0x9)
// SearchDir3:   C:\Users\Public\Documents\LDraw\PARTS\ (0x4)
// SearchDir4:   C:\Users\Public\Documents\LDraw\MODELS\ (0x0)
// LGEODIR:      C:\Users\Public\Documents\LDraw\LGEO (LGEODIR environment variable)
// ldconfig.ldr: C:\Users\Public\Documents\LDraw\ldconfig.ldr
// Commandline:  "E:\Programs Windows\LDraw\l3p14beta\L3P20131119.exe" every_color.ldr every_color_l3p_lgeo_y.pov -o -p -lgeo

#if (version < 3.1)
	#error "This POV code requires at least version 3.1\n"
#end

//// Defines

#declare L3Version = 1.4;

#declare L3Quality = 2;  // Quality level, 0=BBox, 1=no refr, 2=normal, 3=studlogo, 4=stud2logo

#declare L3SW = 0.5;  // Width of seam between two bricks

#declare L3Studs = 1;  // 1=on 0=off

#declare L3Bumps = 0;  // 1=on 0=off


#declare L3Ambient = 0.4;
#declare L3Diffuse = 0.4;
#declare L3Ior     = 1.25;
#declare L3NormalBumps = normal { bumps 0.01 scale 20 }
#declare L3NormalSlope = normal { bumps 0.3 scale 0.5 }


#declare L3SWT = (L3SW ? L3SW : 0.001);  // At least a small seam when transparent

#declare L3Logo = union {
	sphere {<-59,0,-96>,6}
	cylinder {<-59,0,-96>,<59,0,-122>,6 open}
	sphere {<59,0,-122>,6}
	cylinder {<59,0,-122>,<59,0,-84>,6 open}
	sphere {<59,0,-84>,6}

	sphere {<-59,0,-36>,6}
	cylinder {<-59,0,-36>,<-59,0,1>,6 open}
	sphere {<-59,0,1>,6}
	cylinder {<0,0,-49>,<0,0,-25>,6 open}
	sphere {<0,0,-25>,6}
	sphere {<59,0,-62>,6}
	cylinder {<59,0,-62>,<59,0,-24>,6 open}
	sphere {<59,0,-24>,6}
	cylinder {<-59,0,-36>,<59,0,-62>,6 open}

	sphere {<-35.95,0,57>,6}
	torus {18.45,6 clipped_by{plane{<40,0,-9>,0}} translate<-40,0,39>}
	cylinder {<-44.05,0,21>,<35.95,0,3>,6 open}
	torus {18.45,6 clipped_by{plane{<-40,0,9>,0}} translate<40,0,21>}
	cylinder {<44.05,0,39>,<0,0,49>,6 open}
	sphere {<0,0,49>,6}
	cylinder {<0,0,49>,<0,0,34>,6 open}
	sphere {<0,0,34>,6}

	torus {18.45,6 clipped_by{plane{<40,0,-9>,0}} translate<-40,0,99>}
	cylinder {<-44.05,0,81>,<35.95,0,63>,6 open}
	torus {18.45,6 clipped_by{plane{<-40,0,9>,0}} translate<40,0,81>}
	cylinder {<44.05,0,99>,<-35.95,0,117>,6 open}

	scale 4.5/128
}


#declare lg_quality = L3Quality;
#declare lg_studs = L3Studs;

#include "lg_defs.inc"
#include "lg_color.inc"

#declare L3LDrawToLgeo = transform { matrix <0,-LG_BRICK_WIDTH/20,0, 0,0,-LG_BRICK_HEIGHT/24, -LG_BRICK_WIDTH/20,0,0, 0,0,4*LG_BRICK_HEIGHT/24> }
#declare L3LgeoToLDraw = transform { matrix <0,0,-20/LG_BRICK_WIDTH, -20/LG_BRICK_WIDTH,0,0, 0,-24/LG_BRICK_HEIGHT,0, 0,0,0> }




//// Finishes
#ifndef (L3FinishOpaque)
#declare L3FinishOpaque = finish { lg_solid_finish }
#end

#ifndef (L3FinishChrome)
#declare L3FinishChrome = finish { lg_chrome_finish }
#end

#ifndef (L3FinishPearlescent)
#declare L3FinishPearlescent = finish { lg_pearl_finish }
#end

#ifndef (L3FinishRubber)
//Not supported in LGEO, using Opaque
#declare L3FinishRubber = finish { L3FinishOpaque }
#end

#ifndef (L3FinishMatte_metallic)
//Not supported in LGEO, using Opaque
#declare L3FinishMatte_metallic = finish { L3FinishOpaque }
#end

#ifndef (L3FinishMetal)
//Not supported in LGEO, using Opaque
#declare L3FinishMetal = finish { L3FinishOpaque }
#end

#ifndef (L3FinishTransparent)
#declare L3FinishTransparent = finish { lg_transparent_finish }
#end



//// Macros
#ifndef (L3TextureOpaqueRGB)
#macro L3TextureOpaqueRGB(r,g,b)
texture {
	pigment { rgb <r/255,g/255,b/255> }
	finish { L3FinishOpaque }
	#if (L3Bumps & (L3Quality > 1)) normal { L3NormalBumps } #end
}
#end
#end

#ifndef (L3TextureChromeRGB)
#macro L3TextureChromeRGB(r,g,b)
texture {
	pigment { rgb <r/255,g/255,b/255> }
	finish { L3FinishChrome }
	#if (L3Bumps & (L3Quality > 1)) normal { L3NormalBumps } #end
}
#end
#end

#ifndef (L3TexturePearlescentRGB)
#macro L3TexturePearlescentRGB(r,g,b)
texture {
	pigment { rgb <r/255,g/255,b/255> }
	finish { L3FinishPearlescent }
	#if (L3Bumps & (L3Quality > 1)) normal { L3NormalBumps } #end
}
#end
#end

#ifndef (L3TextureRubberRGB)
#macro L3TextureRubberRGB(r,g,b)
texture {
	pigment { rgb <r/255,g/255,b/255> }
	finish { L3FinishRubber }
	#if (L3Bumps & (L3Quality > 1)) normal { L3NormalBumps } #end
}
#end
#end

#ifndef (L3TextureMatte_metallicRGB)
#macro L3TextureMatte_metallicRGB(r,g,b)
texture {
	pigment { rgb <r/255,g/255,b/255> }
	finish { L3FinishMatte_metallic }
	#if (L3Bumps & (L3Quality > 1)) normal { L3NormalBumps } #end
}
#end
#end

#ifndef (L3TextureMetalRGB)
#macro L3TextureMetalRGB(r,g,b)
texture {
	pigment { rgb <r/255,g/255,b/255> }
	finish { L3FinishMetal }
	#if (L3Bumps & (L3Quality > 1)) normal { L3NormalBumps } #end
}
#end
#end

#ifndef (L3TextureTransparentRGBA)
#macro L3TextureTransparentRGBA(r,g,b,a)
// Alpha -> Filter: 255 -> 1.00, 128 -> 0.85, 0 -> 0
#local f = (a >= 128 ? 0.85 + (a-128) * 0.15 / (255-128) : a * 0.85 / 255);
texture {
	pigment { rgb <r/255,g/255,b/255> #if (L3Quality > 1) filter f #end }
	finish { L3FinishTransparent }
	#if (L3Bumps & (L3Quality > 1)) normal { L3NormalBumps } #end
}
#end
#end

#ifndef (L3TextureSlope)
#macro L3TextureSlope(tex)
texture {
	tex
	#if (L3Quality > 1) normal { L3NormalSlope } #end
}
#end
#end

#ifndef (L3Material)
#macro L3Material(tex)
material {
	texture { tex }
}
#end
#end

#ifndef (L3MaterialT)
#macro L3MaterialT(tex)
material {
	texture { tex }
	#if (L3Quality > 1)
		interior { lg_ior }
	#end
}
#end
#end



//// Color 7 Light_Grey (from lg_color.inc)
#ifndef (L3Texture7)
#declare L3Texture7 = texture { lg_grey }
#end
#ifndef (L3Texture7_slope)
#declare L3Texture7_slope = L3TextureSlope(L3Texture7)
#end
#ifndef (L3Color7)
#declare L3Color7 = L3Material(L3Texture7)
#end
#ifndef (L3Color7_slope)
#declare L3Color7_slope = L3Material(L3Texture7_slope)
#end


//// Color 0 Black (from lg_color.inc)
#ifndef (L3Texture0)
#declare L3Texture0 = texture { lg_black }
#end
#ifndef (L3Texture0_slope)
#declare L3Texture0_slope = L3TextureSlope(L3Texture0)
#end
#ifndef (L3Color0)
#declare L3Color0 = L3Material(L3Texture0)
#end
#ifndef (L3Color0_slope)
#declare L3Color0_slope = L3Material(L3Texture0_slope)
#end


//// Color 1 Blue (from lg_color.inc)
#ifndef (L3Texture1)
#declare L3Texture1 = texture { lg_blue }
#end
#ifndef (L3Texture1_slope)
#declare L3Texture1_slope = L3TextureSlope(L3Texture1)
#end
#ifndef (L3Color1)
#declare L3Color1 = L3Material(L3Texture1)
#end
#ifndef (L3Color1_slope)
#declare L3Color1_slope = L3Material(L3Texture1_slope)
#end


//// Color 2 Green (from lg_color.inc)
#ifndef (L3Texture2)
#declare L3Texture2 = texture { lg_green }
#end
#ifndef (L3Texture2_slope)
#declare L3Texture2_slope = L3TextureSlope(L3Texture2)
#end
#ifndef (L3Color2)
#declare L3Color2 = L3Material(L3Texture2)
#end
#ifndef (L3Color2_slope)
#declare L3Color2_slope = L3Material(L3Texture2_slope)
#end


//// Color 3 Dark_Turquoise (from lg_color.inc)
#ifndef (L3Texture3)
#declare L3Texture3 = texture { lg_cyan }
#end
#ifndef (L3Texture3_slope)
#declare L3Texture3_slope = L3TextureSlope(L3Texture3)
#end
#ifndef (L3Color3)
#declare L3Color3 = L3Material(L3Texture3)
#end
#ifndef (L3Color3_slope)
#declare L3Color3_slope = L3Material(L3Texture3_slope)
#end


//// Color 4 Red (from lg_color.inc)
#ifndef (L3Texture4)
#declare L3Texture4 = texture { lg_red }
#end
#ifndef (L3Texture4_slope)
#declare L3Texture4_slope = L3TextureSlope(L3Texture4)
#end
#ifndef (L3Color4)
#declare L3Color4 = L3Material(L3Texture4)
#end
#ifndef (L3Color4_slope)
#declare L3Color4_slope = L3Material(L3Texture4_slope)
#end


//// Color 5 Dark_Pink (from lg_color.inc)
#ifndef (L3Texture5)
#declare L3Texture5 = texture { lg_dark_pink }
#end
#ifndef (L3Texture5_slope)
#declare L3Texture5_slope = L3TextureSlope(L3Texture5)
#end
#ifndef (L3Color5)
#declare L3Color5 = L3Material(L3Texture5)
#end
#ifndef (L3Color5_slope)
#declare L3Color5_slope = L3Material(L3Texture5_slope)
#end


//// Color 6 Brown (from lg_color.inc)
#ifndef (L3Texture6)
#declare L3Texture6 = texture { lg_brown }
#end
#ifndef (L3Texture6_slope)
#declare L3Texture6_slope = L3TextureSlope(L3Texture6)
#end
#ifndef (L3Color6)
#declare L3Color6 = L3Material(L3Texture6)
#end
#ifndef (L3Color6_slope)
#declare L3Color6_slope = L3Material(L3Texture6_slope)
#end


//// Color 8 Dark_Grey (from lg_color.inc)
#ifndef (L3Texture8)
#declare L3Texture8 = texture { lg_dark_grey }
#end
#ifndef (L3Texture8_slope)
#declare L3Texture8_slope = L3TextureSlope(L3Texture8)
#end
#ifndef (L3Color8)
#declare L3Color8 = L3Material(L3Texture8)
#end
#ifndef (L3Color8_slope)
#declare L3Color8_slope = L3Material(L3Texture8_slope)
#end


//// Color 9 Light_Blue (from lg_color.inc)
#ifndef (L3Texture9)
#declare L3Texture9 = texture { lg_light_blue }
#end
#ifndef (L3Texture9_slope)
#declare L3Texture9_slope = L3TextureSlope(L3Texture9)
#end
#ifndef (L3Color9)
#declare L3Color9 = L3Material(L3Texture9)
#end
#ifndef (L3Color9_slope)
#declare L3Color9_slope = L3Material(L3Texture9_slope)
#end


//// Color 10 Bright_Green (from lg_color.inc)
#ifndef (L3Texture10)
#declare L3Texture10 = texture { lg_bright_green }
#end
#ifndef (L3Texture10_slope)
#declare L3Texture10_slope = L3TextureSlope(L3Texture10)
#end
#ifndef (L3Color10)
#declare L3Color10 = L3Material(L3Texture10)
#end
#ifndef (L3Color10_slope)
#declare L3Color10_slope = L3Material(L3Texture10_slope)
#end


//// Color 11 Light_Turquoise (from lg_color.inc)
#ifndef (L3Texture11)
#declare L3Texture11 = texture { lg_turquoise }
#end
#ifndef (L3Texture11_slope)
#declare L3Texture11_slope = L3TextureSlope(L3Texture11)
#end
#ifndef (L3Color11)
#declare L3Color11 = L3Material(L3Texture11)
#end
#ifndef (L3Color11_slope)
#declare L3Color11_slope = L3Material(L3Texture11_slope)
#end


//// Color 12 Salmon (from lg_color.inc)
#ifndef (L3Texture12)
#declare L3Texture12 = texture { lg_salmon }
#end
#ifndef (L3Texture12_slope)
#declare L3Texture12_slope = L3TextureSlope(L3Texture12)
#end
#ifndef (L3Color12)
#declare L3Color12 = L3Material(L3Texture12)
#end
#ifndef (L3Color12_slope)
#declare L3Color12_slope = L3Material(L3Texture12_slope)
#end


//// Color 13 Pink (from lg_color.inc)
#ifndef (L3Texture13)
#declare L3Texture13 = texture { lg_pink }
#end
#ifndef (L3Texture13_slope)
#declare L3Texture13_slope = L3TextureSlope(L3Texture13)
#end
#ifndef (L3Color13)
#declare L3Color13 = L3Material(L3Texture13)
#end
#ifndef (L3Color13_slope)
#declare L3Color13_slope = L3Material(L3Texture13_slope)
#end


//// Color 14 Yellow (from lg_color.inc)
#ifndef (L3Texture14)
#declare L3Texture14 = texture { lg_yellow }
#end
#ifndef (L3Texture14_slope)
#declare L3Texture14_slope = L3TextureSlope(L3Texture14)
#end
#ifndef (L3Color14)
#declare L3Color14 = L3Material(L3Texture14)
#end
#ifndef (L3Color14_slope)
#declare L3Color14_slope = L3Material(L3Texture14_slope)
#end


//// Color 15 White (from lg_color.inc)
#ifndef (L3Texture15)
#declare L3Texture15 = texture { lg_white }
#end
#ifndef (L3Texture15_slope)
#declare L3Texture15_slope = L3TextureSlope(L3Texture15)
#end
#ifndef (L3Color15)
#declare L3Color15 = L3Material(L3Texture15)
#end
#ifndef (L3Color15_slope)
#declare L3Color15_slope = L3Material(L3Texture15_slope)
#end


//// Color 17 Light_Green (from lg_color.inc)
#ifndef (L3Texture17)
#declare L3Texture17 = texture { lg_light_green }
#end
#ifndef (L3Texture17_slope)
#declare L3Texture17_slope = L3TextureSlope(L3Texture17)
#end
#ifndef (L3Color17)
#declare L3Color17 = L3Material(L3Texture17)
#end
#ifndef (L3Color17_slope)
#declare L3Color17_slope = L3Material(L3Texture17_slope)
#end


//// Color 18 Light_Yellow (from lg_color.inc)
#ifndef (L3Texture18)
#declare L3Texture18 = texture { lg_light_yellow }
#end
#ifndef (L3Texture18_slope)
#declare L3Texture18_slope = L3TextureSlope(L3Texture18)
#end
#ifndef (L3Color18)
#declare L3Color18 = L3Material(L3Texture18)
#end
#ifndef (L3Color18_slope)
#declare L3Color18_slope = L3Material(L3Texture18_slope)
#end


//// Color 19 Tan (from lg_color.inc)
#ifndef (L3Texture19)
#declare L3Texture19 = texture { lg_tan }
#end
#ifndef (L3Texture19_slope)
#declare L3Texture19_slope = L3TextureSlope(L3Texture19)
#end
#ifndef (L3Color19)
#declare L3Color19 = L3Material(L3Texture19)
#end
#ifndef (L3Color19_slope)
#declare L3Color19_slope = L3Material(L3Texture19_slope)
#end


//// Color 20 Light_Violet (from lg_color.inc)
#ifndef (L3Texture20)
#declare L3Texture20 = texture { lg_light_violet }
#end
#ifndef (L3Texture20_slope)
#declare L3Texture20_slope = L3TextureSlope(L3Texture20)
#end
#ifndef (L3Color20)
#declare L3Color20 = L3Material(L3Texture20)
#end
#ifndef (L3Color20_slope)
#declare L3Color20_slope = L3Material(L3Texture20_slope)
#end


//// Color 21 Glow_In_Dark_Opaque (from lg_color.inc)
#ifndef (L3Texture21)
#declare L3Texture21 = texture { lg_glow_in_dark_opaque }
#end
#ifndef (L3Texture21_slope)
#declare L3Texture21_slope = L3TextureSlope(L3Texture21)
#end
#ifndef (L3Color21)
#declare L3Color21 = L3MaterialT(L3Texture21)
#end
#ifndef (L3Color21_slope)
#declare L3Color21_slope = L3MaterialT(L3Texture21_slope)
#end


//// Color 22 Purple (from lg_color.inc)
#ifndef (L3Texture22)
#declare L3Texture22 = texture { lg_purple }
#end
#ifndef (L3Texture22_slope)
#declare L3Texture22_slope = L3TextureSlope(L3Texture22)
#end
#ifndef (L3Color22)
#declare L3Color22 = L3Material(L3Texture22)
#end
#ifndef (L3Color22_slope)
#declare L3Color22_slope = L3Material(L3Texture22_slope)
#end


//// Color 23 Dark_Blue_Violet (from lg_color.inc)
#ifndef (L3Texture23)
#declare L3Texture23 = texture { lg_violet_blue }
#end
#ifndef (L3Texture23_slope)
#declare L3Texture23_slope = L3TextureSlope(L3Texture23)
#end
#ifndef (L3Color23)
#declare L3Color23 = L3Material(L3Texture23)
#end
#ifndef (L3Color23_slope)
#declare L3Color23_slope = L3Material(L3Texture23_slope)
#end


//// Color 25 Orange (from lg_color.inc)
#ifndef (L3Texture25)
#declare L3Texture25 = texture { lg_orange }
#end
#ifndef (L3Texture25_slope)
#declare L3Texture25_slope = L3TextureSlope(L3Texture25)
#end
#ifndef (L3Color25)
#declare L3Color25 = L3Material(L3Texture25)
#end
#ifndef (L3Color25_slope)
#declare L3Color25_slope = L3Material(L3Texture25_slope)
#end


//// Color 26 Magenta (from lg_color.inc)
#ifndef (L3Texture26)
#declare L3Texture26 = texture { lg_magenta }
#end
#ifndef (L3Texture26_slope)
#declare L3Texture26_slope = L3TextureSlope(L3Texture26)
#end
#ifndef (L3Color26)
#declare L3Color26 = L3Material(L3Texture26)
#end
#ifndef (L3Color26_slope)
#declare L3Color26_slope = L3Material(L3Texture26_slope)
#end


//// Color 27 Lime (from lg_color.inc)
#ifndef (L3Texture27)
#declare L3Texture27 = texture { lg_lime }
#end
#ifndef (L3Texture27_slope)
#declare L3Texture27_slope = L3TextureSlope(L3Texture27)
#end
#ifndef (L3Color27)
#declare L3Color27 = L3Material(L3Texture27)
#end
#ifndef (L3Color27_slope)
#declare L3Color27_slope = L3Material(L3Texture27_slope)
#end


//// Color 28 Dark_Tan (from lg_color.inc)
#ifndef (L3Texture28)
#declare L3Texture28 = texture { lg_dark_tan }
#end
#ifndef (L3Texture28_slope)
#declare L3Texture28_slope = L3TextureSlope(L3Texture28)
#end
#ifndef (L3Color28)
#declare L3Color28 = L3Material(L3Texture28)
#end
#ifndef (L3Color28_slope)
#declare L3Color28_slope = L3Material(L3Texture28_slope)
#end


//// Color 29 Bright_Pink (from lg_color.inc)
#ifndef (L3Texture29)
#declare L3Texture29 = texture { lg_light_purple }
#end
#ifndef (L3Texture29_slope)
#declare L3Texture29_slope = L3TextureSlope(L3Texture29)
#end
#ifndef (L3Color29)
#declare L3Color29 = L3Material(L3Texture29)
#end
#ifndef (L3Color29_slope)
#declare L3Color29_slope = L3Material(L3Texture29_slope)
#end


//// Color 30 Medium_Lavender (from lg_color.inc)
#ifndef (L3Texture30)
#declare L3Texture30 = texture { lg_medium_lavender }
#end
#ifndef (L3Texture30_slope)
#declare L3Texture30_slope = L3TextureSlope(L3Texture30)
#end
#ifndef (L3Color30)
#declare L3Color30 = L3Material(L3Texture30)
#end
#ifndef (L3Color30_slope)
#declare L3Color30_slope = L3Material(L3Texture30_slope)
#end


//// Color 31 Lavender (from lg_color.inc)
#ifndef (L3Texture31)
#declare L3Texture31 = texture { lg_lavender }
#end
#ifndef (L3Texture31_slope)
#declare L3Texture31_slope = L3TextureSlope(L3Texture31)
#end
#ifndef (L3Color31)
#declare L3Color31 = L3Material(L3Texture31)
#end
#ifndef (L3Color31_slope)
#declare L3Color31_slope = L3Material(L3Texture31_slope)
#end


//// Color 32 Trans_Black_IR_Lens (from lg_color.inc)
#ifndef (L3Texture32)
#declare L3Texture32 = texture { lg_black_ir }
#end
#ifndef (L3Texture32_slope)
#declare L3Texture32_slope = L3TextureSlope(L3Texture32)
#end
#ifndef (L3Color32)
#declare L3Color32 = L3MaterialT(L3Texture32)
#end
#ifndef (L3Color32_slope)
#declare L3Color32_slope = L3MaterialT(L3Texture32_slope)
#end


//// Color 33 Trans_Dark_Blue (from lg_color.inc)
#ifndef (L3Texture33)
#declare L3Texture33 = texture { lg_clear_blue }
#end
#ifndef (L3Texture33_slope)
#declare L3Texture33_slope = L3TextureSlope(L3Texture33)
#end
#ifndef (L3Color33)
#declare L3Color33 = L3MaterialT(L3Texture33)
#end
#ifndef (L3Color33_slope)
#declare L3Color33_slope = L3MaterialT(L3Texture33_slope)
#end


//// Color 34 Trans_Green (from lg_color.inc)
#ifndef (L3Texture34)
#declare L3Texture34 = texture { lg_clear_green }
#end
#ifndef (L3Texture34_slope)
#declare L3Texture34_slope = L3TextureSlope(L3Texture34)
#end
#ifndef (L3Color34)
#declare L3Color34 = L3MaterialT(L3Texture34)
#end
#ifndef (L3Color34_slope)
#declare L3Color34_slope = L3MaterialT(L3Texture34_slope)
#end


//// Color 35 Trans_Bright_Green (from lg_color.inc)
#ifndef (L3Texture35)
#declare L3Texture35 = texture { lg_clear_bright_green }
#end
#ifndef (L3Texture35_slope)
#declare L3Texture35_slope = L3TextureSlope(L3Texture35)
#end
#ifndef (L3Color35)
#declare L3Color35 = L3MaterialT(L3Texture35)
#end
#ifndef (L3Color35_slope)
#declare L3Color35_slope = L3MaterialT(L3Texture35_slope)
#end


//// Color 36 Trans_Red (from lg_color.inc)
#ifndef (L3Texture36)
#declare L3Texture36 = texture { lg_clear_red }
#end
#ifndef (L3Texture36_slope)
#declare L3Texture36_slope = L3TextureSlope(L3Texture36)
#end
#ifndef (L3Color36)
#declare L3Color36 = L3MaterialT(L3Texture36)
#end
#ifndef (L3Color36_slope)
#declare L3Color36_slope = L3MaterialT(L3Texture36_slope)
#end


//// Color 37 Trans_Dark_Pink (from lg_color.inc)
#ifndef (L3Texture37)
#declare L3Texture37 = texture { lg_clear_pink }
#end
#ifndef (L3Texture37_slope)
#declare L3Texture37_slope = L3TextureSlope(L3Texture37)
#end
#ifndef (L3Color37)
#declare L3Color37 = L3MaterialT(L3Texture37)
#end
#ifndef (L3Color37_slope)
#declare L3Color37_slope = L3MaterialT(L3Texture37_slope)
#end


//// Color 38 Trans_Neon_Orange (from lg_color.inc)
#ifndef (L3Texture38)
#declare L3Texture38 = texture { lg_clear_neon_orange }
#end
#ifndef (L3Texture38_slope)
#declare L3Texture38_slope = L3TextureSlope(L3Texture38)
#end
#ifndef (L3Color38)
#declare L3Color38 = L3MaterialT(L3Texture38)
#end
#ifndef (L3Color38_slope)
#declare L3Color38_slope = L3MaterialT(L3Texture38_slope)
#end


//// Color 39 Trans_Very_Light_Blue (from ldconfig.ldr)
#ifndef (L3Texture39)
// Color not in lg_color.inc; however use same texture
#declare L3Texture39 = L3TextureTransparentRGBA(193,223,240,128)
#end
#ifndef (L3Texture39_slope)
#declare L3Texture39_slope = L3TextureSlope(L3Texture39)
#end
#ifndef (L3Color39)
#declare L3Color39 = L3MaterialT(L3Texture39)
#end
#ifndef (L3Color39_slope)
#declare L3Color39_slope = L3MaterialT(L3Texture39_slope)
#end


//// Color 40 Trans_Black (from lg_color.inc)
#ifndef (L3Texture40)
#declare L3Texture40 = texture { lg_clear_brown }
#end
#ifndef (L3Texture40_slope)
#declare L3Texture40_slope = L3TextureSlope(L3Texture40)
#end
#ifndef (L3Color40)
#declare L3Color40 = L3MaterialT(L3Texture40)
#end
#ifndef (L3Color40_slope)
#declare L3Color40_slope = L3MaterialT(L3Texture40_slope)
#end


//// Color 41 Trans_Medium_Blue (from lg_color.inc)
#ifndef (L3Texture41)
#declare L3Texture41 = texture { lg_clear_cyan }
#end
#ifndef (L3Texture41_slope)
#declare L3Texture41_slope = L3TextureSlope(L3Texture41)
#end
#ifndef (L3Color41)
#declare L3Color41 = L3MaterialT(L3Texture41)
#end
#ifndef (L3Color41_slope)
#declare L3Color41_slope = L3MaterialT(L3Texture41_slope)
#end


//// Color 42 Trans_Neon_Green (from lg_color.inc)
#ifndef (L3Texture42)
#declare L3Texture42 = texture { lg_clear_neon_yellow }
#end
#ifndef (L3Texture42_slope)
#declare L3Texture42_slope = L3TextureSlope(L3Texture42)
#end
#ifndef (L3Color42)
#declare L3Color42 = L3MaterialT(L3Texture42)
#end
#ifndef (L3Color42_slope)
#declare L3Color42_slope = L3MaterialT(L3Texture42_slope)
#end


//// Color 43 Trans_Light_Blue (from lg_color.inc)
#ifndef (L3Texture43)
#declare L3Texture43 = texture { lg_clear_light_blue }
#end
#ifndef (L3Texture43_slope)
#declare L3Texture43_slope = L3TextureSlope(L3Texture43)
#end
#ifndef (L3Color43)
#declare L3Color43 = L3MaterialT(L3Texture43)
#end
#ifndef (L3Color43_slope)
#declare L3Color43_slope = L3MaterialT(L3Texture43_slope)
#end


//// Color 44 Trans_Bright_Reddish_Lilac (from lg_color.inc)
#ifndef (L3Texture44)
#declare L3Texture44 = texture { lg_clear_light_purple }
#end
#ifndef (L3Texture44_slope)
#declare L3Texture44_slope = L3TextureSlope(L3Texture44)
#end
#ifndef (L3Color44)
#declare L3Color44 = L3MaterialT(L3Texture44)
#end
#ifndef (L3Color44_slope)
#declare L3Color44_slope = L3MaterialT(L3Texture44_slope)
#end


//// Color 45 Trans_Pink (from ldconfig.ldr)
#ifndef (L3Texture45)
// Color not in lg_color.inc; however use same texture
#declare L3Texture45 = L3TextureTransparentRGBA(252,151,172,128)
#end
#ifndef (L3Texture45_slope)
#declare L3Texture45_slope = L3TextureSlope(L3Texture45)
#end
#ifndef (L3Color45)
#declare L3Color45 = L3MaterialT(L3Texture45)
#end
#ifndef (L3Color45_slope)
#declare L3Color45_slope = L3MaterialT(L3Texture45_slope)
#end


//// Color 46 Trans_Yellow (from lg_color.inc)
#ifndef (L3Texture46)
#declare L3Texture46 = texture { lg_clear_yellow }
#end
#ifndef (L3Texture46_slope)
#declare L3Texture46_slope = L3TextureSlope(L3Texture46)
#end
#ifndef (L3Color46)
#declare L3Color46 = L3MaterialT(L3Texture46)
#end
#ifndef (L3Color46_slope)
#declare L3Color46_slope = L3MaterialT(L3Texture46_slope)
#end


//// Color 47 Trans_Clear (from lg_color.inc)
#ifndef (L3Texture47)
#declare L3Texture47 = texture { lg_clear }
#end
#ifndef (L3Texture47_slope)
#declare L3Texture47_slope = L3TextureSlope(L3Texture47)
#end
#ifndef (L3Color47)
#declare L3Color47 = L3MaterialT(L3Texture47)
#end
#ifndef (L3Color47_slope)
#declare L3Color47_slope = L3MaterialT(L3Texture47_slope)
#end


//// Color 52 Trans_Purple (from lg_color.inc)
#ifndef (L3Texture52)
#declare L3Texture52 = texture { lg_clear_violet }
#end
#ifndef (L3Texture52_slope)
#declare L3Texture52_slope = L3TextureSlope(L3Texture52)
#end
#ifndef (L3Color52)
#declare L3Color52 = L3MaterialT(L3Texture52)
#end
#ifndef (L3Color52_slope)
#declare L3Color52_slope = L3MaterialT(L3Texture52_slope)
#end


//// Color 54 Trans_Neon_Yellow (from lg_color.inc)
#ifndef (L3Texture54)
#declare L3Texture54 = texture { lg_clear_neon_yellow }
#end
#ifndef (L3Texture54_slope)
#declare L3Texture54_slope = L3TextureSlope(L3Texture54)
#end
#ifndef (L3Color54)
#declare L3Color54 = L3MaterialT(L3Texture54)
#end
#ifndef (L3Color54_slope)
#declare L3Color54_slope = L3MaterialT(L3Texture54_slope)
#end


//// Color 57 Trans_Orange (from lg_color.inc)
#ifndef (L3Texture57)
#declare L3Texture57 = texture { lg_clear_neon_orange }
#end
#ifndef (L3Texture57_slope)
#declare L3Texture57_slope = L3TextureSlope(L3Texture57)
#end
#ifndef (L3Color57)
#declare L3Color57 = L3MaterialT(L3Texture57)
#end
#ifndef (L3Color57_slope)
#declare L3Color57_slope = L3MaterialT(L3Texture57_slope)
#end


//// Color 60 Chrome_Antique_Brass (from ldconfig.ldr)
#ifndef (L3Texture60)
// Color not in lg_color.inc; however use same texture
#declare L3Texture60 = L3TextureChromeRGB(100,90,76)
#end
#ifndef (L3Texture60_slope)
#declare L3Texture60_slope = L3TextureSlope(L3Texture60)
#end
#ifndef (L3Color60)
#declare L3Color60 = L3Material(L3Texture60)
#end
#ifndef (L3Color60_slope)
#declare L3Color60_slope = L3Material(L3Texture60_slope)
#end


//// Color 61 Chrome_Blue (from ldconfig.ldr)
#ifndef (L3Texture61)
// Color not in lg_color.inc; however use same texture
#declare L3Texture61 = L3TextureChromeRGB(108,150,191)
#end
#ifndef (L3Texture61_slope)
#declare L3Texture61_slope = L3TextureSlope(L3Texture61)
#end
#ifndef (L3Color61)
#declare L3Color61 = L3Material(L3Texture61)
#end
#ifndef (L3Color61_slope)
#declare L3Color61_slope = L3Material(L3Texture61_slope)
#end


//// Color 62 Chrome_Green (from ldconfig.ldr)
#ifndef (L3Texture62)
// Color not in lg_color.inc; however use same texture
#declare L3Texture62 = L3TextureChromeRGB(60,179,113)
#end
#ifndef (L3Texture62_slope)
#declare L3Texture62_slope = L3TextureSlope(L3Texture62)
#end
#ifndef (L3Color62)
#declare L3Color62 = L3Material(L3Texture62)
#end
#ifndef (L3Color62_slope)
#declare L3Color62_slope = L3Material(L3Texture62_slope)
#end


//// Color 63 Chrome_Pink (from ldconfig.ldr)
#ifndef (L3Texture63)
// Color not in lg_color.inc; however use same texture
#declare L3Texture63 = L3TextureChromeRGB(170,77,142)
#end
#ifndef (L3Texture63_slope)
#declare L3Texture63_slope = L3TextureSlope(L3Texture63)
#end
#ifndef (L3Color63)
#declare L3Color63 = L3Material(L3Texture63)
#end
#ifndef (L3Color63_slope)
#declare L3Color63_slope = L3Material(L3Texture63_slope)
#end


//// Color 64 Chrome_Black (from ldconfig.ldr)
#ifndef (L3Texture64)
// Color not in lg_color.inc; however use same texture
#declare L3Texture64 = L3TextureChromeRGB(27,42,52)
#end
#ifndef (L3Texture64_slope)
#declare L3Texture64_slope = L3TextureSlope(L3Texture64)
#end
#ifndef (L3Color64)
#declare L3Color64 = L3Material(L3Texture64)
#end
#ifndef (L3Color64_slope)
#declare L3Color64_slope = L3Material(L3Texture64_slope)
#end


//// Color 65 Rubber_Yellow (from lg_color.inc)
#ifndef (L3Texture65)
#declare L3Texture65 = texture { lg_rubber_yellow }
#end
#ifndef (L3Texture65_slope)
#declare L3Texture65_slope = L3TextureSlope(L3Texture65)
#end
#ifndef (L3Color65)
#declare L3Color65 = L3Material(L3Texture65)
#end
#ifndef (L3Color65_slope)
#declare L3Color65_slope = L3Material(L3Texture65_slope)
#end


//// Color 66 Rubber_Trans_Yellow (from lg_color.inc)
#ifndef (L3Texture66)
#declare L3Texture66 = texture { lg_rubber_clear_yellow }
#end
#ifndef (L3Texture66_slope)
#declare L3Texture66_slope = L3TextureSlope(L3Texture66)
#end
#ifndef (L3Color66)
#declare L3Color66 = L3MaterialT(L3Texture66)
#end
#ifndef (L3Color66_slope)
#declare L3Color66_slope = L3MaterialT(L3Texture66_slope)
#end


//// Color 67 Rubber_Trans_Clear (from lg_color.inc)
#ifndef (L3Texture67)
#declare L3Texture67 = texture { lg_rubber_clear }
#end
#ifndef (L3Texture67_slope)
#declare L3Texture67_slope = L3TextureSlope(L3Texture67)
#end
#ifndef (L3Color67)
#declare L3Color67 = L3MaterialT(L3Texture67)
#end
#ifndef (L3Color67_slope)
#declare L3Color67_slope = L3MaterialT(L3Texture67_slope)
#end


//// Color 68 Very_Light_Orange (from lg_color.inc)
#ifndef (L3Texture68)
#declare L3Texture68 = texture { lg_very_light_orange }
#end
#ifndef (L3Texture68_slope)
#declare L3Texture68_slope = L3TextureSlope(L3Texture68)
#end
#ifndef (L3Color68)
#declare L3Color68 = L3Material(L3Texture68)
#end
#ifndef (L3Color68_slope)
#declare L3Color68_slope = L3Material(L3Texture68_slope)
#end


//// Color 69 Bright_Reddish_Lilac (from lg_color.inc)
#ifndef (L3Texture69)
#declare L3Texture69 = texture { lg_bright_purple }
#end
#ifndef (L3Texture69_slope)
#declare L3Texture69_slope = L3TextureSlope(L3Texture69)
#end
#ifndef (L3Color69)
#declare L3Color69 = L3Material(L3Texture69)
#end
#ifndef (L3Color69_slope)
#declare L3Color69_slope = L3Material(L3Texture69_slope)
#end


//// Color 70 Reddish_Brown (from lg_color.inc)
#ifndef (L3Texture70)
#declare L3Texture70 = texture { lg_reddish_brown }
#end
#ifndef (L3Texture70_slope)
#declare L3Texture70_slope = L3TextureSlope(L3Texture70)
#end
#ifndef (L3Color70)
#declare L3Color70 = L3Material(L3Texture70)
#end
#ifndef (L3Color70_slope)
#declare L3Color70_slope = L3Material(L3Texture70_slope)
#end


//// Color 71 Light_Bluish_Grey (from lg_color.inc)
#ifndef (L3Texture71)
#declare L3Texture71 = texture { lg_bluish_grey }
#end
#ifndef (L3Texture71_slope)
#declare L3Texture71_slope = L3TextureSlope(L3Texture71)
#end
#ifndef (L3Color71)
#declare L3Color71 = L3Material(L3Texture71)
#end
#ifndef (L3Color71_slope)
#declare L3Color71_slope = L3Material(L3Texture71_slope)
#end


//// Color 72 Dark_Bluish_Grey (from lg_color.inc)
#ifndef (L3Texture72)
#declare L3Texture72 = texture { lg_dark_bluish_grey }
#end
#ifndef (L3Texture72_slope)
#declare L3Texture72_slope = L3TextureSlope(L3Texture72)
#end
#ifndef (L3Color72)
#declare L3Color72 = L3Material(L3Texture72)
#end
#ifndef (L3Color72_slope)
#declare L3Color72_slope = L3Material(L3Texture72_slope)
#end


//// Color 73 Medium_Blue (from lg_color.inc)
#ifndef (L3Texture73)
#declare L3Texture73 = texture { lg_medium_blue }
#end
#ifndef (L3Texture73_slope)
#declare L3Texture73_slope = L3TextureSlope(L3Texture73)
#end
#ifndef (L3Color73)
#declare L3Color73 = L3Material(L3Texture73)
#end
#ifndef (L3Color73_slope)
#declare L3Color73_slope = L3Material(L3Texture73_slope)
#end


//// Color 74 Medium_Green (from lg_color.inc)
#ifndef (L3Texture74)
#declare L3Texture74 = texture { lg_medium_green }
#end
#ifndef (L3Texture74_slope)
#declare L3Texture74_slope = L3TextureSlope(L3Texture74)
#end
#ifndef (L3Color74)
#declare L3Color74 = L3Material(L3Texture74)
#end
#ifndef (L3Color74_slope)
#declare L3Color74_slope = L3Material(L3Texture74_slope)
#end


//// Color 75 Speckle_Black_Copper (from ldconfig.ldr)
#ifndef (L3Texture75)
// Color not in lg_color.inc; however use same texture
#declare L3Texture75 = L3TextureOpaqueRGB(0,0,0)
#end
#ifndef (L3Texture75_slope)
#declare L3Texture75_slope = L3TextureSlope(L3Texture75)
#end
#ifndef (L3Color75)
#declare L3Color75 = L3Material(L3Texture75)
#end
#ifndef (L3Color75_slope)
#declare L3Color75_slope = L3Material(L3Texture75_slope)
#end


//// Color 76 Speckle_Dark_Bluish_Grey_Silver (from ldconfig.ldr)
#ifndef (L3Texture76)
// Color not in lg_color.inc; however use same texture
#declare L3Texture76 = L3TextureOpaqueRGB(99,95,97)
#end
#ifndef (L3Texture76_slope)
#declare L3Texture76_slope = L3TextureSlope(L3Texture76)
#end
#ifndef (L3Color76)
#declare L3Color76 = L3Material(L3Texture76)
#end
#ifndef (L3Color76_slope)
#declare L3Color76_slope = L3Material(L3Texture76_slope)
#end


//// Color 77 Light_Pink (from lg_color.inc)
#ifndef (L3Texture77)
#declare L3Texture77 = texture { lg_paradisa_pink }
#end
#ifndef (L3Texture77_slope)
#declare L3Texture77_slope = L3TextureSlope(L3Texture77)
#end
#ifndef (L3Color77)
#declare L3Color77 = L3Material(L3Texture77)
#end
#ifndef (L3Color77_slope)
#declare L3Color77_slope = L3Material(L3Texture77_slope)
#end


//// Color 78 Light_Flesh (from lg_color.inc)
#ifndef (L3Texture78)
#declare L3Texture78 = texture { lg_light_flesh }
#end
#ifndef (L3Texture78_slope)
#declare L3Texture78_slope = L3TextureSlope(L3Texture78)
#end
#ifndef (L3Color78)
#declare L3Color78 = L3Material(L3Texture78)
#end
#ifndef (L3Color78_slope)
#declare L3Color78_slope = L3Material(L3Texture78_slope)
#end


//// Color 79 Milky_White (from lg_color.inc)
#ifndef (L3Texture79)
#declare L3Texture79 = texture { lg_milky_white }
#end
#ifndef (L3Texture79_slope)
#declare L3Texture79_slope = L3TextureSlope(L3Texture79)
#end
#ifndef (L3Color79)
#declare L3Color79 = L3MaterialT(L3Texture79)
#end
#ifndef (L3Color79_slope)
#declare L3Color79_slope = L3MaterialT(L3Texture79_slope)
#end


//// Color 80 Metallic_Silver (from lg_color.inc)
#ifndef (L3Texture80)
#declare L3Texture80 = texture { lg_metallic_silver }
#end
#ifndef (L3Texture80_slope)
#declare L3Texture80_slope = L3TextureSlope(L3Texture80)
#end
#ifndef (L3Color80)
#declare L3Color80 = L3Material(L3Texture80)
#end
#ifndef (L3Color80_slope)
#declare L3Color80_slope = L3Material(L3Texture80_slope)
#end


//// Color 81 Metallic_Green (from ldconfig.ldr)
#ifndef (L3Texture81)
// Color not in lg_color.inc; however use same texture
#declare L3Texture81 = L3TextureMetalRGB(137,155,95)
#end
#ifndef (L3Texture81_slope)
#declare L3Texture81_slope = L3TextureSlope(L3Texture81)
#end
#ifndef (L3Color81)
#declare L3Color81 = L3Material(L3Texture81)
#end
#ifndef (L3Color81_slope)
#declare L3Color81_slope = L3Material(L3Texture81_slope)
#end


//// Color 82 Metallic_Gold (from lg_color.inc)
#ifndef (L3Texture82)
#declare L3Texture82 = texture { lg_metallic_gold }
#end
#ifndef (L3Texture82_slope)
#declare L3Texture82_slope = L3TextureSlope(L3Texture82)
#end
#ifndef (L3Color82)
#declare L3Color82 = L3Material(L3Texture82)
#end
#ifndef (L3Color82_slope)
#declare L3Color82_slope = L3Material(L3Texture82_slope)
#end


//// Color 83 Metallic_Black (from ldconfig.ldr)
#ifndef (L3Texture83)
// Color not in lg_color.inc; however use same texture
#declare L3Texture83 = L3TextureMetalRGB(26,40,49)
#end
#ifndef (L3Texture83_slope)
#declare L3Texture83_slope = L3TextureSlope(L3Texture83)
#end
#ifndef (L3Color83)
#declare L3Color83 = L3Material(L3Texture83)
#end
#ifndef (L3Color83_slope)
#declare L3Color83_slope = L3Material(L3Texture83_slope)
#end


//// Color 84 Medium_Dark_Flesh (from lg_color.inc)
#ifndef (L3Texture84)
#declare L3Texture84 = texture { lg_medium_dark_flesh }
#end
#ifndef (L3Texture84_slope)
#declare L3Texture84_slope = L3TextureSlope(L3Texture84)
#end
#ifndef (L3Color84)
#declare L3Color84 = L3Material(L3Texture84)
#end
#ifndef (L3Color84_slope)
#declare L3Color84_slope = L3Material(L3Texture84_slope)
#end


//// Color 85 Medium_Lilac (from lg_color.inc)
#ifndef (L3Texture85)
#declare L3Texture85 = texture { lg_dark_purple }
#end
#ifndef (L3Texture85_slope)
#declare L3Texture85_slope = L3TextureSlope(L3Texture85)
#end
#ifndef (L3Color85)
#declare L3Color85 = L3Material(L3Texture85)
#end
#ifndef (L3Color85_slope)
#declare L3Color85_slope = L3Material(L3Texture85_slope)
#end


//// Color 86 Dark_Flesh (from lg_color.inc)
#ifndef (L3Texture86)
#declare L3Texture86 = texture { lg_dark_flesh }
#end
#ifndef (L3Texture86_slope)
#declare L3Texture86_slope = L3TextureSlope(L3Texture86)
#end
#ifndef (L3Color86)
#declare L3Color86 = L3Material(L3Texture86)
#end
#ifndef (L3Color86_slope)
#declare L3Color86_slope = L3Material(L3Texture86_slope)
#end


//// Color 87 Metallic_Dark_Grey (from ldconfig.ldr)
#ifndef (L3Texture87)
// Color not in lg_color.inc; however use same texture
#declare L3Texture87 = L3TextureMetalRGB(109,110,92)
#end
#ifndef (L3Texture87_slope)
#declare L3Texture87_slope = L3TextureSlope(L3Texture87)
#end
#ifndef (L3Color87)
#declare L3Color87 = L3Material(L3Texture87)
#end
#ifndef (L3Color87_slope)
#declare L3Color87_slope = L3Material(L3Texture87_slope)
#end


//// Color 89 Blue_Violet (from lg_color.inc)
#ifndef (L3Texture89)
#declare L3Texture89 = texture { lg_royal_blue }
#end
#ifndef (L3Texture89_slope)
#declare L3Texture89_slope = L3TextureSlope(L3Texture89)
#end
#ifndef (L3Color89)
#declare L3Color89 = L3Material(L3Texture89)
#end
#ifndef (L3Color89_slope)
#declare L3Color89_slope = L3Material(L3Texture89_slope)
#end


//// Color 92 Flesh (from lg_color.inc)
#ifndef (L3Texture92)
#declare L3Texture92 = texture { lg_flesh }
#end
#ifndef (L3Texture92_slope)
#declare L3Texture92_slope = L3TextureSlope(L3Texture92)
#end
#ifndef (L3Color92)
#declare L3Color92 = L3Material(L3Texture92)
#end
#ifndef (L3Color92_slope)
#declare L3Color92_slope = L3Material(L3Texture92_slope)
#end


//// Color 100 Light_Salmon (from lg_color.inc)
#ifndef (L3Texture100)
#declare L3Texture100 = texture { lg_light_salmon }
#end
#ifndef (L3Texture100_slope)
#declare L3Texture100_slope = L3TextureSlope(L3Texture100)
#end
#ifndef (L3Color100)
#declare L3Color100 = L3Material(L3Texture100)
#end
#ifndef (L3Color100_slope)
#declare L3Color100_slope = L3Material(L3Texture100_slope)
#end


//// Color 110 Violet (from ldconfig.ldr)
#ifndef (L3Texture110)
// Color not in lg_color.inc; however use same texture
#declare L3Texture110 = L3TextureOpaqueRGB(67,84,163)
#end
#ifndef (L3Texture110_slope)
#declare L3Texture110_slope = L3TextureSlope(L3Texture110)
#end
#ifndef (L3Color110)
#declare L3Color110 = L3Material(L3Texture110)
#end
#ifndef (L3Color110_slope)
#declare L3Color110_slope = L3Material(L3Texture110_slope)
#end


//// Color 112 Medium_Violet (from lg_color.inc)
#ifndef (L3Texture112)
#declare L3Texture112 = texture { lg_medium_violet }
#end
#ifndef (L3Texture112_slope)
#declare L3Texture112_slope = L3TextureSlope(L3Texture112)
#end
#ifndef (L3Color112)
#declare L3Color112 = L3Material(L3Texture112)
#end
#ifndef (L3Color112_slope)
#declare L3Color112_slope = L3Material(L3Texture112_slope)
#end


//// Color 114 Glitter_Trans_Dark_Pink (from ldconfig.ldr)
#ifndef (L3Texture114)
// Color not in lg_color.inc; however use same texture
#declare L3Texture114 = L3TextureTransparentRGBA(223,102,149,128)
#end
#ifndef (L3Texture114_slope)
#declare L3Texture114_slope = L3TextureSlope(L3Texture114)
#end
#ifndef (L3Color114)
#declare L3Color114 = L3MaterialT(L3Texture114)
#end
#ifndef (L3Color114_slope)
#declare L3Color114_slope = L3MaterialT(L3Texture114_slope)
#end


//// Color 115 Medium_Lime (from lg_color.inc)
#ifndef (L3Texture115)
#declare L3Texture115 = texture { lg_medium_lime }
#end
#ifndef (L3Texture115_slope)
#declare L3Texture115_slope = L3TextureSlope(L3Texture115)
#end
#ifndef (L3Color115)
#declare L3Color115 = L3Material(L3Texture115)
#end
#ifndef (L3Color115_slope)
#declare L3Color115_slope = L3Material(L3Texture115_slope)
#end


//// Color 117 Glitter_Trans_Clear (from ldconfig.ldr)
#ifndef (L3Texture117)
// Color not in lg_color.inc; however use same texture
#declare L3Texture117 = L3TextureTransparentRGBA(255,255,255,128)
#end
#ifndef (L3Texture117_slope)
#declare L3Texture117_slope = L3TextureSlope(L3Texture117)
#end
#ifndef (L3Color117)
#declare L3Color117 = L3MaterialT(L3Texture117)
#end
#ifndef (L3Color117_slope)
#declare L3Color117_slope = L3MaterialT(L3Texture117_slope)
#end


//// Color 118 Aqua (from ldconfig.ldr)
#ifndef (L3Texture118)
// Color not in lg_color.inc; however use same texture
#declare L3Texture118 = L3TextureOpaqueRGB(179,215,209)
#end
#ifndef (L3Texture118_slope)
#declare L3Texture118_slope = L3TextureSlope(L3Texture118)
#end
#ifndef (L3Color118)
#declare L3Color118 = L3Material(L3Texture118)
#end
#ifndef (L3Color118_slope)
#declare L3Color118_slope = L3Material(L3Texture118_slope)
#end


//// Color 120 Light_Lime (from ldconfig.ldr)
#ifndef (L3Texture120)
// Color not in lg_color.inc; however use same texture
#declare L3Texture120 = L3TextureOpaqueRGB(217,228,167)
#end
#ifndef (L3Texture120_slope)
#declare L3Texture120_slope = L3TextureSlope(L3Texture120)
#end
#ifndef (L3Color120)
#declare L3Color120 = L3Material(L3Texture120)
#end
#ifndef (L3Color120_slope)
#declare L3Color120_slope = L3Material(L3Texture120_slope)
#end


//// Color 125 Light_Orange (from ldconfig.ldr)
#ifndef (L3Texture125)
// Color not in lg_color.inc; however use same texture
#declare L3Texture125 = L3TextureOpaqueRGB(249,186,97)
#end
#ifndef (L3Texture125_slope)
#declare L3Texture125_slope = L3TextureSlope(L3Texture125)
#end
#ifndef (L3Color125)
#declare L3Color125 = L3Material(L3Texture125)
#end
#ifndef (L3Color125_slope)
#declare L3Color125_slope = L3Material(L3Texture125_slope)
#end


//// Color 128 Dark_Nougat (from ldconfig.ldr)
#ifndef (L3Texture128)
// Color not in lg_color.inc; however use same texture
#declare L3Texture128 = L3TextureOpaqueRGB(173,97,64)
#end
#ifndef (L3Texture128_slope)
#declare L3Texture128_slope = L3TextureSlope(L3Texture128)
#end
#ifndef (L3Color128)
#declare L3Color128 = L3Material(L3Texture128)
#end
#ifndef (L3Color128_slope)
#declare L3Color128_slope = L3Material(L3Texture128_slope)
#end


//// Color 129 Glitter_Trans_Purple (from ldconfig.ldr)
#ifndef (L3Texture129)
// Color not in lg_color.inc; however use same texture
#declare L3Texture129 = L3TextureTransparentRGBA(100,0,97,128)
#end
#ifndef (L3Texture129_slope)
#declare L3Texture129_slope = L3TextureSlope(L3Texture129)
#end
#ifndef (L3Color129)
#declare L3Color129 = L3MaterialT(L3Texture129)
#end
#ifndef (L3Color129_slope)
#declare L3Color129_slope = L3MaterialT(L3Texture129_slope)
#end


//// Color 132 Speckle_Black_Silver (from ldconfig.ldr)
#ifndef (L3Texture132)
// Color not in lg_color.inc; however use same texture
#declare L3Texture132 = L3TextureOpaqueRGB(0,0,0)
#end
#ifndef (L3Texture132_slope)
#declare L3Texture132_slope = L3TextureSlope(L3Texture132)
#end
#ifndef (L3Color132)
#declare L3Color132 = L3Material(L3Texture132)
#end
#ifndef (L3Color132_slope)
#declare L3Color132_slope = L3Material(L3Texture132_slope)
#end


//// Color 133 Speckle_Black_Gold (from ldconfig.ldr)
#ifndef (L3Texture133)
// Color not in lg_color.inc; however use same texture
#declare L3Texture133 = L3TextureOpaqueRGB(0,0,0)
#end
#ifndef (L3Texture133_slope)
#declare L3Texture133_slope = L3TextureSlope(L3Texture133)
#end
#ifndef (L3Color133)
#declare L3Color133 = L3Material(L3Texture133)
#end
#ifndef (L3Color133_slope)
#declare L3Color133_slope = L3Material(L3Texture133_slope)
#end


//// Color 134 Copper (from lg_color.inc)
#ifndef (L3Texture134)
#declare L3Texture134 = texture { lg_pearl_copper }
#end
#ifndef (L3Texture134_slope)
#declare L3Texture134_slope = L3TextureSlope(L3Texture134)
#end
#ifndef (L3Color134)
#declare L3Color134 = L3Material(L3Texture134)
#end
#ifndef (L3Color134_slope)
#declare L3Color134_slope = L3Material(L3Texture134_slope)
#end


//// Color 135 Pearl_Light_Grey (from lg_color.inc)
#ifndef (L3Texture135)
#declare L3Texture135 = texture { lg_pearl_grey }
#end
#ifndef (L3Texture135_slope)
#declare L3Texture135_slope = L3TextureSlope(L3Texture135)
#end
#ifndef (L3Color135)
#declare L3Color135 = L3Material(L3Texture135)
#end
#ifndef (L3Color135_slope)
#declare L3Color135_slope = L3Material(L3Texture135_slope)
#end


//// Color 137 Metal_Blue (from lg_color.inc)
#ifndef (L3Texture137)
#declare L3Texture137 = texture { lg_pearl_blue }
#end
#ifndef (L3Texture137_slope)
#declare L3Texture137_slope = L3TextureSlope(L3Texture137)
#end
#ifndef (L3Color137)
#declare L3Color137 = L3Material(L3Texture137)
#end
#ifndef (L3Color137_slope)
#declare L3Color137_slope = L3Material(L3Texture137_slope)
#end


//// Color 142 Pearl_Light_Gold (from lg_color.inc)
#ifndef (L3Texture142)
#declare L3Texture142 = texture { lg_pearl_gold }
#end
#ifndef (L3Texture142_slope)
#declare L3Texture142_slope = L3TextureSlope(L3Texture142)
#end
#ifndef (L3Color142)
#declare L3Color142 = L3Material(L3Texture142)
#end
#ifndef (L3Color142_slope)
#declare L3Color142_slope = L3Material(L3Texture142_slope)
#end


//// Color 148 Pearl_Dark_Grey (from lg_color.inc)
#ifndef (L3Texture148)
#declare L3Texture148 = texture { lg_pearl_dark_grey }
#end
#ifndef (L3Texture148_slope)
#declare L3Texture148_slope = L3TextureSlope(L3Texture148)
#end
#ifndef (L3Color148)
#declare L3Color148 = L3Material(L3Texture148)
#end
#ifndef (L3Color148_slope)
#declare L3Color148_slope = L3Material(L3Texture148_slope)
#end


//// Color 150 Pearl_Very_Light_Grey (from ldconfig.ldr)
#ifndef (L3Texture150)
// Color not in lg_color.inc; however use same texture
#declare L3Texture150 = L3TexturePearlescentRGB(187,189,188)
#end
#ifndef (L3Texture150_slope)
#declare L3Texture150_slope = L3TextureSlope(L3Texture150)
#end
#ifndef (L3Color150)
#declare L3Color150 = L3Material(L3Texture150)
#end
#ifndef (L3Color150_slope)
#declare L3Color150_slope = L3Material(L3Texture150_slope)
#end


//// Color 151 Very_Light_Bluish_Grey (from lg_color.inc)
#ifndef (L3Texture151)
#declare L3Texture151 = texture { lg_very_light_bluish_grey }
#end
#ifndef (L3Texture151_slope)
#declare L3Texture151_slope = L3TextureSlope(L3Texture151)
#end
#ifndef (L3Color151)
#declare L3Color151 = L3Material(L3Texture151)
#end
#ifndef (L3Color151_slope)
#declare L3Color151_slope = L3Material(L3Texture151_slope)
#end


//// Color 178 Flat_Dark_Gold (from ldconfig.ldr)
#ifndef (L3Texture178)
// Color not in lg_color.inc; however use same texture
#declare L3Texture178 = L3TexturePearlescentRGB(180,136,62)
#end
#ifndef (L3Texture178_slope)
#declare L3Texture178_slope = L3TextureSlope(L3Texture178)
#end
#ifndef (L3Color178)
#declare L3Color178 = L3Material(L3Texture178)
#end
#ifndef (L3Color178_slope)
#declare L3Color178_slope = L3Material(L3Texture178_slope)
#end


//// Color 179 Flat_Silver (from lg_color.inc)
#ifndef (L3Texture179)
#declare L3Texture179 = texture { lg_flat_silver }
#end
#ifndef (L3Texture179_slope)
#declare L3Texture179_slope = L3TextureSlope(L3Texture179)
#end
#ifndef (L3Color179)
#declare L3Color179 = L3Material(L3Texture179)
#end
#ifndef (L3Color179_slope)
#declare L3Color179_slope = L3Material(L3Texture179_slope)
#end


//// Color 183 Pearl_White (from lg_color.inc)
#ifndef (L3Texture183)
#declare L3Texture183 = texture { lg_pearl_white }
#end
#ifndef (L3Texture183_slope)
#declare L3Texture183_slope = L3TextureSlope(L3Texture183)
#end
#ifndef (L3Color183)
#declare L3Color183 = L3Material(L3Texture183)
#end
#ifndef (L3Color183_slope)
#declare L3Color183_slope = L3Material(L3Texture183_slope)
#end


//// Color 184 Metallic_Bright_Red (from ldconfig.ldr)
#ifndef (L3Texture184)
// Color not in lg_color.inc; however use same texture
#declare L3Texture184 = L3TextureMetalRGB(214,0,38)
#end
#ifndef (L3Texture184_slope)
#declare L3Texture184_slope = L3TextureSlope(L3Texture184)
#end
#ifndef (L3Color184)
#declare L3Color184 = L3Material(L3Texture184)
#end
#ifndef (L3Color184_slope)
#declare L3Color184_slope = L3Material(L3Texture184_slope)
#end


//// Color 186 Metallic_Dark_Green (from ldconfig.ldr)
#ifndef (L3Texture186)
// Color not in lg_color.inc; however use same texture
#declare L3Texture186 = L3TextureMetalRGB(0,142,60)
#end
#ifndef (L3Texture186_slope)
#declare L3Texture186_slope = L3TextureSlope(L3Texture186)
#end
#ifndef (L3Color186)
#declare L3Color186 = L3Material(L3Texture186)
#end
#ifndef (L3Color186_slope)
#declare L3Color186_slope = L3Material(L3Texture186_slope)
#end


//// Color 189 Reddish_Gold (from ldconfig.ldr)
#ifndef (L3Texture189)
// Color not in lg_color.inc; however use same texture
#declare L3Texture189 = L3TexturePearlescentRGB(172,130,71)
#end
#ifndef (L3Texture189_slope)
#declare L3Texture189_slope = L3TextureSlope(L3Texture189)
#end
#ifndef (L3Color189)
#declare L3Color189 = L3Material(L3Texture189)
#end
#ifndef (L3Color189_slope)
#declare L3Color189_slope = L3Material(L3Texture189_slope)
#end


//// Color 191 Bright_Light_Orange (from lg_color.inc)
#ifndef (L3Texture191)
#declare L3Texture191 = texture { lg_bright_light_orange }
#end
#ifndef (L3Texture191_slope)
#declare L3Texture191_slope = L3TextureSlope(L3Texture191)
#end
#ifndef (L3Color191)
#declare L3Color191 = L3Material(L3Texture191)
#end
#ifndef (L3Color191_slope)
#declare L3Color191_slope = L3Material(L3Texture191_slope)
#end


//// Color 212 Bright_Light_Blue (from lg_color.inc)
#ifndef (L3Texture212)
#declare L3Texture212 = texture { lg_bright_light_blue }
#end
#ifndef (L3Texture212_slope)
#declare L3Texture212_slope = L3TextureSlope(L3Texture212)
#end
#ifndef (L3Color212)
#declare L3Color212 = L3Material(L3Texture212)
#end
#ifndef (L3Color212_slope)
#declare L3Color212_slope = L3Material(L3Texture212_slope)
#end


//// Color 216 Rust (from lg_color.inc)
#ifndef (L3Texture216)
#declare L3Texture216 = texture { lg_rust }
#end
#ifndef (L3Texture216_slope)
#declare L3Texture216_slope = L3TextureSlope(L3Texture216)
#end
#ifndef (L3Color216)
#declare L3Color216 = L3Material(L3Texture216)
#end
#ifndef (L3Color216_slope)
#declare L3Color216_slope = L3Material(L3Texture216_slope)
#end


//// Color 218 Reddish_Lilac (from ldconfig.ldr)
#ifndef (L3Texture218)
// Color not in lg_color.inc; however use same texture
#declare L3Texture218 = L3TextureOpaqueRGB(142,85,151)
#end
#ifndef (L3Texture218_slope)
#declare L3Texture218_slope = L3TextureSlope(L3Texture218)
#end
#ifndef (L3Color218)
#declare L3Color218 = L3Material(L3Texture218)
#end
#ifndef (L3Color218_slope)
#declare L3Color218_slope = L3Material(L3Texture218_slope)
#end


//// Color 219 Lilac (from ldconfig.ldr)
#ifndef (L3Texture219)
// Color not in lg_color.inc; however use same texture
#declare L3Texture219 = L3TextureOpaqueRGB(86,78,157)
#end
#ifndef (L3Texture219_slope)
#declare L3Texture219_slope = L3TextureSlope(L3Texture219)
#end
#ifndef (L3Color219)
#declare L3Color219 = L3Material(L3Texture219)
#end
#ifndef (L3Color219_slope)
#declare L3Color219_slope = L3Material(L3Texture219_slope)
#end


//// Color 226 Bright_Light_Yellow (from lg_color.inc)
#ifndef (L3Texture226)
#declare L3Texture226 = texture { lg_bright_light_yellow }
#end
#ifndef (L3Texture226_slope)
#declare L3Texture226_slope = L3TextureSlope(L3Texture226)
#end
#ifndef (L3Color226)
#declare L3Color226 = L3Material(L3Texture226)
#end
#ifndef (L3Color226_slope)
#declare L3Color226_slope = L3Material(L3Texture226_slope)
#end


//// Color 231 Trans_Bright_Light_Orange (from ldconfig.ldr)
#ifndef (L3Texture231)
// Color not in lg_color.inc; however use same texture
#declare L3Texture231 = L3TextureTransparentRGBA(252,183,109,128)
#end
#ifndef (L3Texture231_slope)
#declare L3Texture231_slope = L3TextureSlope(L3Texture231)
#end
#ifndef (L3Color231)
#declare L3Color231 = L3MaterialT(L3Texture231)
#end
#ifndef (L3Color231_slope)
#declare L3Color231_slope = L3MaterialT(L3Texture231_slope)
#end


//// Color 232 Sky_Blue (from lg_color.inc)
#ifndef (L3Texture232)
#declare L3Texture232 = texture { lg_sky_blue }
#end
#ifndef (L3Texture232_slope)
#declare L3Texture232_slope = L3TextureSlope(L3Texture232)
#end
#ifndef (L3Color232)
#declare L3Color232 = L3Material(L3Texture232)
#end
#ifndef (L3Color232_slope)
#declare L3Color232_slope = L3Material(L3Texture232_slope)
#end


//// Color 234 Trans_Fire_Yellow (from ldconfig.ldr)
#ifndef (L3Texture234)
// Color not in lg_color.inc; however use same texture
#declare L3Texture234 = L3TextureTransparentRGBA(251,232,144,128)
#end
#ifndef (L3Texture234_slope)
#declare L3Texture234_slope = L3TextureSlope(L3Texture234)
#end
#ifndef (L3Color234)
#declare L3Color234 = L3MaterialT(L3Texture234)
#end
#ifndef (L3Color234_slope)
#declare L3Color234_slope = L3MaterialT(L3Texture234_slope)
#end


//// Color 256 Rubber_Black (from lg_color.inc)
#ifndef (L3Texture256)
#declare L3Texture256 = texture { lg_rubber_black }
#end
#ifndef (L3Texture256_slope)
#declare L3Texture256_slope = L3TextureSlope(L3Texture256)
#end
#ifndef (L3Color256)
#declare L3Color256 = L3Material(L3Texture256)
#end
#ifndef (L3Color256_slope)
#declare L3Color256_slope = L3Material(L3Texture256_slope)
#end


//// Color 272 Dark_Blue (from lg_color.inc)
#ifndef (L3Texture272)
#declare L3Texture272 = texture { lg_dark_blue }
#end
#ifndef (L3Texture272_slope)
#declare L3Texture272_slope = L3TextureSlope(L3Texture272)
#end
#ifndef (L3Color272)
#declare L3Color272 = L3Material(L3Texture272)
#end
#ifndef (L3Color272_slope)
#declare L3Color272_slope = L3Material(L3Texture272_slope)
#end


//// Color 273 Rubber_Blue (from lg_color.inc)
#ifndef (L3Texture273)
#declare L3Texture273 = texture { lg_rubber_blue }
#end
#ifndef (L3Texture273_slope)
#declare L3Texture273_slope = L3TextureSlope(L3Texture273)
#end
#ifndef (L3Color273)
#declare L3Color273 = L3Material(L3Texture273)
#end
#ifndef (L3Color273_slope)
#declare L3Color273_slope = L3Material(L3Texture273_slope)
#end


//// Color 284 Trans_Reddish_Lilac (from ldconfig.ldr)
#ifndef (L3Texture284)
// Color not in lg_color.inc; however use same texture
#declare L3Texture284 = L3TextureTransparentRGBA(194,129,165,128)
#end
#ifndef (L3Texture284_slope)
#declare L3Texture284_slope = L3TextureSlope(L3Texture284)
#end
#ifndef (L3Color284)
#declare L3Color284 = L3MaterialT(L3Texture284)
#end
#ifndef (L3Color284_slope)
#declare L3Color284_slope = L3MaterialT(L3Texture284_slope)
#end


//// Color 285 Trans_Light_Green (from ldconfig.ldr)
#ifndef (L3Texture285)
// Color not in lg_color.inc; however use same texture
#declare L3Texture285 = L3TextureTransparentRGBA(125,194,145,128)
#end
#ifndef (L3Texture285_slope)
#declare L3Texture285_slope = L3TextureSlope(L3Texture285)
#end
#ifndef (L3Color285)
#declare L3Color285 = L3MaterialT(L3Texture285)
#end
#ifndef (L3Color285_slope)
#declare L3Color285_slope = L3MaterialT(L3Texture285_slope)
#end


//// Color 288 Dark_Green (from lg_color.inc)
#ifndef (L3Texture288)
#declare L3Texture288 = texture { lg_dark_green }
#end
#ifndef (L3Texture288_slope)
#declare L3Texture288_slope = L3TextureSlope(L3Texture288)
#end
#ifndef (L3Color288)
#declare L3Color288 = L3Material(L3Texture288)
#end
#ifndef (L3Color288_slope)
#declare L3Color288_slope = L3Material(L3Texture288_slope)
#end


//// Color 293 Trans_Light_Blue_Violet (from ldconfig.ldr)
#ifndef (L3Texture293)
// Color not in lg_color.inc; however use same texture
#declare L3Texture293 = L3TextureTransparentRGBA(107,171,228,128)
#end
#ifndef (L3Texture293_slope)
#declare L3Texture293_slope = L3TextureSlope(L3Texture293)
#end
#ifndef (L3Color293)
#declare L3Color293 = L3MaterialT(L3Texture293)
#end
#ifndef (L3Color293_slope)
#declare L3Color293_slope = L3MaterialT(L3Texture293_slope)
#end


//// Color 294 Glow_In_Dark_Trans (from lg_color.inc)
#ifndef (L3Texture294)
#declare L3Texture294 = texture { lg_glow_in_dark_clear }
#end
#ifndef (L3Texture294_slope)
#declare L3Texture294_slope = L3TextureSlope(L3Texture294)
#end
#ifndef (L3Color294)
#declare L3Color294 = L3MaterialT(L3Texture294)
#end
#ifndef (L3Color294_slope)
#declare L3Color294_slope = L3MaterialT(L3Texture294_slope)
#end


//// Color 295 Flamingo_Pink (from ldconfig.ldr)
#ifndef (L3Texture295)
// Color not in lg_color.inc; however use same texture
#declare L3Texture295 = L3TextureOpaqueRGB(255,148,194)
#end
#ifndef (L3Texture295_slope)
#declare L3Texture295_slope = L3TextureSlope(L3Texture295)
#end
#ifndef (L3Color295)
#declare L3Color295 = L3Material(L3Texture295)
#end
#ifndef (L3Color295_slope)
#declare L3Color295_slope = L3Material(L3Texture295_slope)
#end


//// Color 297 Pearl_Gold (from lg_color.inc)
#ifndef (L3Texture297)
#declare L3Texture297 = texture { lg_pearl_gold }
#end
#ifndef (L3Texture297_slope)
#declare L3Texture297_slope = L3TextureSlope(L3Texture297)
#end
#ifndef (L3Color297)
#declare L3Color297 = L3Material(L3Texture297)
#end
#ifndef (L3Color297_slope)
#declare L3Color297_slope = L3Material(L3Texture297_slope)
#end


//// Color 300 Metallic_Copper (from ldconfig.ldr)
#ifndef (L3Texture300)
// Color not in lg_color.inc; however use same texture
#declare L3Texture300 = L3TextureMetalRGB(194,127,83)
#end
#ifndef (L3Texture300_slope)
#declare L3Texture300_slope = L3TextureSlope(L3Texture300)
#end
#ifndef (L3Color300)
#declare L3Color300 = L3Material(L3Texture300)
#end
#ifndef (L3Color300_slope)
#declare L3Color300_slope = L3Material(L3Texture300_slope)
#end


//// Color 302 Glitter_Trans_Light_Blue (from ldconfig.ldr)
#ifndef (L3Texture302)
// Color not in lg_color.inc; however use same texture
#declare L3Texture302 = L3TextureTransparentRGBA(174,233,239,128)
#end
#ifndef (L3Texture302_slope)
#declare L3Texture302_slope = L3TextureSlope(L3Texture302)
#end
#ifndef (L3Color302)
#declare L3Color302 = L3MaterialT(L3Texture302)
#end
#ifndef (L3Color302_slope)
#declare L3Color302_slope = L3MaterialT(L3Texture302_slope)
#end


//// Color 308 Dark_Brown (from lg_color.inc)
#ifndef (L3Texture308)
#declare L3Texture308 = texture { lg_dark_brown }
#end
#ifndef (L3Texture308_slope)
#declare L3Texture308_slope = L3TextureSlope(L3Texture308)
#end
#ifndef (L3Color308)
#declare L3Color308 = L3Material(L3Texture308)
#end
#ifndef (L3Color308_slope)
#declare L3Color308_slope = L3Material(L3Texture308_slope)
#end


//// Color 313 Maersk_Blue (from lg_color.inc)
#ifndef (L3Texture313)
#declare L3Texture313 = texture { lg_maersk_blue }
#end
#ifndef (L3Texture313_slope)
#declare L3Texture313_slope = L3TextureSlope(L3Texture313)
#end
#ifndef (L3Color313)
#declare L3Color313 = L3Material(L3Texture313)
#end
#ifndef (L3Color313_slope)
#declare L3Color313_slope = L3Material(L3Texture313_slope)
#end


//// Color 320 Dark_Red (from lg_color.inc)
#ifndef (L3Texture320)
#declare L3Texture320 = texture { lg_dark_red }
#end
#ifndef (L3Texture320_slope)
#declare L3Texture320_slope = L3TextureSlope(L3Texture320)
#end
#ifndef (L3Color320)
#declare L3Color320 = L3Material(L3Texture320)
#end
#ifndef (L3Color320_slope)
#declare L3Color320_slope = L3Material(L3Texture320_slope)
#end


//// Color 321 Dark_Azure (from lg_color.inc)
#ifndef (L3Texture321)
#declare L3Texture321 = texture { lg_dark_azur }
#end
#ifndef (L3Texture321_slope)
#declare L3Texture321_slope = L3TextureSlope(L3Texture321)
#end
#ifndef (L3Color321)
#declare L3Color321 = L3Material(L3Texture321)
#end
#ifndef (L3Color321_slope)
#declare L3Color321_slope = L3Material(L3Texture321_slope)
#end


//// Color 322 Medium_Azure (from lg_color.inc)
#ifndef (L3Texture322)
#declare L3Texture322 = texture { lg_medium_azur }
#end
#ifndef (L3Texture322_slope)
#declare L3Texture322_slope = L3TextureSlope(L3Texture322)
#end
#ifndef (L3Color322)
#declare L3Color322 = L3Material(L3Texture322)
#end
#ifndef (L3Color322_slope)
#declare L3Color322_slope = L3Material(L3Texture322_slope)
#end


//// Color 323 Light_Aqua (from lg_color.inc)
#ifndef (L3Texture323)
#declare L3Texture323 = texture { lg_light_aqua }
#end
#ifndef (L3Texture323_slope)
#declare L3Texture323_slope = L3TextureSlope(L3Texture323)
#end
#ifndef (L3Color323)
#declare L3Color323 = L3Material(L3Texture323)
#end
#ifndef (L3Color323_slope)
#declare L3Color323_slope = L3Material(L3Texture323_slope)
#end


//// Color 324 Rubber_Red (from lg_color.inc)
#ifndef (L3Texture324)
#declare L3Texture324 = texture { lg_rubber_red }
#end
#ifndef (L3Texture324_slope)
#declare L3Texture324_slope = L3TextureSlope(L3Texture324)
#end
#ifndef (L3Color324)
#declare L3Color324 = L3Material(L3Texture324)
#end
#ifndef (L3Color324_slope)
#declare L3Color324_slope = L3Material(L3Texture324_slope)
#end


//// Color 326 Yellowish_Green (from lg_color.inc)
#ifndef (L3Texture326)
#declare L3Texture326 = texture { lg_spring_yellowish_green }
#end
#ifndef (L3Texture326_slope)
#declare L3Texture326_slope = L3TextureSlope(L3Texture326)
#end
#ifndef (L3Color326)
#declare L3Color326 = L3Material(L3Texture326)
#end
#ifndef (L3Color326_slope)
#declare L3Color326_slope = L3Material(L3Texture326_slope)
#end


//// Color 329 Glow_In_Dark_White (from ldconfig.ldr)
#ifndef (L3Texture329)
// Color not in lg_color.inc; however use same texture
#declare L3Texture329 = L3TextureOtherRGBFAL(245,243,215,0,240,15)
#end
#ifndef (L3Texture329_slope)
#declare L3Texture329_slope = L3TextureSlope(L3Texture329)
#end
#ifndef (L3Color329)
#declare L3Color329 = L3MaterialT(L3Texture329)
#end
#ifndef (L3Color329_slope)
#declare L3Color329_slope = L3MaterialT(L3Texture329_slope)
#end


//// Color 330 Olive_Green (from lg_color.inc)
#ifndef (L3Texture330)
#declare L3Texture330 = texture { lg_olive_green }
#end
#ifndef (L3Texture330_slope)
#declare L3Texture330_slope = L3TextureSlope(L3Texture330)
#end
#ifndef (L3Color330)
#declare L3Color330 = L3Material(L3Texture330)
#end
#ifndef (L3Color330_slope)
#declare L3Color330_slope = L3Material(L3Texture330_slope)
#end


//// Color 334 Chrome_Gold (from lg_color.inc)
#ifndef (L3Texture334)
#declare L3Texture334 = texture { lg_chrome_gold }
#end
#ifndef (L3Texture334_slope)
#declare L3Texture334_slope = L3TextureSlope(L3Texture334)
#end
#ifndef (L3Color334)
#declare L3Color334 = L3Material(L3Texture334)
#end
#ifndef (L3Color334_slope)
#declare L3Color334_slope = L3Material(L3Texture334_slope)
#end


//// Color 335 Sand_Red (from lg_color.inc)
#ifndef (L3Texture335)
#declare L3Texture335 = texture { lg_sand_red }
#end
#ifndef (L3Texture335_slope)
#declare L3Texture335_slope = L3TextureSlope(L3Texture335)
#end
#ifndef (L3Color335)
#declare L3Color335 = L3Material(L3Texture335)
#end
#ifndef (L3Color335_slope)
#declare L3Color335_slope = L3Material(L3Texture335_slope)
#end


//// Color 339 Glitter_Trans_Neon_Green (from ldconfig.ldr)
#ifndef (L3Texture339)
// Color not in lg_color.inc; however use same texture
#declare L3Texture339 = L3TextureTransparentRGBA(192,255,0,128)
#end
#ifndef (L3Texture339_slope)
#declare L3Texture339_slope = L3TextureSlope(L3Texture339)
#end
#ifndef (L3Color339)
#declare L3Color339 = L3MaterialT(L3Texture339)
#end
#ifndef (L3Color339_slope)
#declare L3Color339_slope = L3MaterialT(L3Texture339_slope)
#end


//// Color 350 Rubber_Orange (from ldconfig.ldr)
#ifndef (L3Texture350)
// Color not in lg_color.inc; however use same texture
#declare L3Texture350 = L3TextureRubberRGB(208,102,16)
#end
#ifndef (L3Texture350_slope)
#declare L3Texture350_slope = L3TextureSlope(L3Texture350)
#end
#ifndef (L3Color350)
#declare L3Color350 = L3Material(L3Texture350)
#end
#ifndef (L3Color350_slope)
#declare L3Color350_slope = L3Material(L3Texture350_slope)
#end


//// Color 351 Medium_Dark_Pink (from ldconfig.ldr)
#ifndef (L3Texture351)
// Color not in lg_color.inc; however use same texture
#declare L3Texture351 = L3TextureOpaqueRGB(247,133,177)
#end
#ifndef (L3Texture351_slope)
#declare L3Texture351_slope = L3TextureSlope(L3Texture351)
#end
#ifndef (L3Color351)
#declare L3Color351 = L3Material(L3Texture351)
#end
#ifndef (L3Color351_slope)
#declare L3Color351_slope = L3Material(L3Texture351_slope)
#end


//// Color 366 Earth_Orange (from lg_color.inc)
#ifndef (L3Texture366)
#declare L3Texture366 = texture { lg_earth_orange }
#end
#ifndef (L3Texture366_slope)
#declare L3Texture366_slope = L3TextureSlope(L3Texture366)
#end
#ifndef (L3Color366)
#declare L3Color366 = L3Material(L3Texture366)
#end
#ifndef (L3Color366_slope)
#declare L3Color366_slope = L3Material(L3Texture366_slope)
#end


//// Color 373 Sand_Purple (from lg_color.inc)
#ifndef (L3Texture373)
#declare L3Texture373 = texture { lg_sand_purple }
#end
#ifndef (L3Texture373_slope)
#declare L3Texture373_slope = L3TextureSlope(L3Texture373)
#end
#ifndef (L3Color373)
#declare L3Color373 = L3Material(L3Texture373)
#end
#ifndef (L3Color373_slope)
#declare L3Color373_slope = L3Material(L3Texture373_slope)
#end


//// Color 375 Rubber_Light_Grey (from lg_color.inc)
#ifndef (L3Texture375)
#declare L3Texture375 = texture { lg_rubber_light_gray }
#end
#ifndef (L3Texture375_slope)
#declare L3Texture375_slope = L3TextureSlope(L3Texture375)
#end
#ifndef (L3Color375)
#declare L3Color375 = L3Material(L3Texture375)
#end
#ifndef (L3Color375_slope)
#declare L3Color375_slope = L3Material(L3Texture375_slope)
#end


//// Color 378 Sand_Green (from lg_color.inc)
#ifndef (L3Texture378)
#declare L3Texture378 = texture { lg_sand_green }
#end
#ifndef (L3Texture378_slope)
#declare L3Texture378_slope = L3TextureSlope(L3Texture378)
#end
#ifndef (L3Color378)
#declare L3Color378 = L3Material(L3Texture378)
#end
#ifndef (L3Color378_slope)
#declare L3Color378_slope = L3Material(L3Texture378_slope)
#end


//// Color 379 Sand_Blue (from lg_color.inc)
#ifndef (L3Texture379)
#declare L3Texture379 = texture { lg_sand_blue }
#end
#ifndef (L3Texture379_slope)
#declare L3Texture379_slope = L3TextureSlope(L3Texture379)
#end
#ifndef (L3Color379)
#declare L3Color379 = L3Material(L3Texture379)
#end
#ifndef (L3Color379_slope)
#declare L3Color379_slope = L3Material(L3Texture379_slope)
#end


//// Color 383 Chrome_Silver (from lg_color.inc)
#ifndef (L3Texture383)
#declare L3Texture383 = texture { lg_chrome }
#end
#ifndef (L3Texture383_slope)
#declare L3Texture383_slope = L3TextureSlope(L3Texture383)
#end
#ifndef (L3Color383)
#declare L3Color383 = L3Material(L3Texture383)
#end
#ifndef (L3Color383_slope)
#declare L3Color383_slope = L3Material(L3Texture383_slope)
#end


//// Color 406 Rubber_Dark_Blue (from lg_color.inc)
#ifndef (L3Texture406)
#declare L3Texture406 = texture { lg_rubber_dark_blue }
#end
#ifndef (L3Texture406_slope)
#declare L3Texture406_slope = L3TextureSlope(L3Texture406)
#end
#ifndef (L3Color406)
#declare L3Color406 = L3Material(L3Texture406)
#end
#ifndef (L3Color406_slope)
#declare L3Color406_slope = L3Material(L3Texture406_slope)
#end


//// Color 449 Rubber_Purple (from lg_color.inc)
#ifndef (L3Texture449)
#declare L3Texture449 = texture { lg_rubber_purple }
#end
#ifndef (L3Texture449_slope)
#declare L3Texture449_slope = L3TextureSlope(L3Texture449)
#end
#ifndef (L3Color449)
#declare L3Color449 = L3Material(L3Texture449)
#end
#ifndef (L3Color449_slope)
#declare L3Color449_slope = L3Material(L3Texture449_slope)
#end


//// Color 450 Fabuland_Brown (from lg_color.inc)
#ifndef (L3Texture450)
#declare L3Texture450 = texture { lg_fabuland_brown }
#end
#ifndef (L3Texture450_slope)
#declare L3Texture450_slope = L3TextureSlope(L3Texture450)
#end
#ifndef (L3Color450)
#declare L3Color450 = L3Material(L3Texture450)
#end
#ifndef (L3Color450_slope)
#declare L3Color450_slope = L3Material(L3Texture450_slope)
#end


//// Color 462 Medium_Orange (from lg_color.inc)
#ifndef (L3Texture462)
#declare L3Texture462 = texture { lg_light_orange }
#end
#ifndef (L3Texture462_slope)
#declare L3Texture462_slope = L3TextureSlope(L3Texture462)
#end
#ifndef (L3Color462)
#declare L3Color462 = L3Material(L3Texture462)
#end
#ifndef (L3Color462_slope)
#declare L3Color462_slope = L3Material(L3Texture462_slope)
#end


//// Color 484 Dark_Orange (from lg_color.inc)
#ifndef (L3Texture484)
#declare L3Texture484 = texture { lg_dark_orange }
#end
#ifndef (L3Texture484_slope)
#declare L3Texture484_slope = L3TextureSlope(L3Texture484)
#end
#ifndef (L3Color484)
#declare L3Color484 = L3Material(L3Texture484)
#end
#ifndef (L3Color484_slope)
#declare L3Color484_slope = L3Material(L3Texture484_slope)
#end


//// Color 490 Rubber_Lime (from lg_color.inc)
#ifndef (L3Texture490)
#declare L3Texture490 = texture { lg_rubber_lime }
#end
#ifndef (L3Texture490_slope)
#declare L3Texture490_slope = L3TextureSlope(L3Texture490)
#end
#ifndef (L3Color490)
#declare L3Color490 = L3Material(L3Texture490)
#end
#ifndef (L3Color490_slope)
#declare L3Color490_slope = L3Material(L3Texture490_slope)
#end


//// Color 493 Magnet (from lg_color.inc)
#ifndef (L3Texture493)
#declare L3Texture493 = texture { lg_magnet }
#end
#ifndef (L3Texture493_slope)
#declare L3Texture493_slope = L3TextureSlope(L3Texture493)
#end
#ifndef (L3Color493)
#declare L3Color493 = L3Material(L3Texture493)
#end
#ifndef (L3Color493_slope)
#declare L3Color493_slope = L3Material(L3Texture493_slope)
#end


//// Color 494 Electric_Contact_Alloy (from lg_color.inc)
#ifndef (L3Texture494)
#declare L3Texture494 = texture { lg_electric_contact_alloy }
#end
#ifndef (L3Texture494_slope)
#declare L3Texture494_slope = L3TextureSlope(L3Texture494)
#end
#ifndef (L3Color494)
#declare L3Color494 = L3Material(L3Texture494)
#end
#ifndef (L3Color494_slope)
#declare L3Color494_slope = L3Material(L3Texture494_slope)
#end


//// Color 495 Electric_Contact_Copper (from ldconfig.ldr)
#ifndef (L3Texture495)
// Color not in lg_color.inc; however use same texture
#declare L3Texture495 = L3TextureMetalRGB(174,122,89)
#end
#ifndef (L3Texture495_slope)
#declare L3Texture495_slope = L3TextureSlope(L3Texture495)
#end
#ifndef (L3Color495)
#declare L3Color495 = L3Material(L3Texture495)
#end
#ifndef (L3Color495_slope)
#declare L3Color495_slope = L3Material(L3Texture495_slope)
#end


//// Color 496 Rubber_Light_Bluish_Grey (from lg_color.inc)
#ifndef (L3Texture496)
#declare L3Texture496 = texture { lg_rubber_light_bluish_gray }
#end
#ifndef (L3Texture496_slope)
#declare L3Texture496_slope = L3TextureSlope(L3Texture496)
#end
#ifndef (L3Color496)
#declare L3Color496 = L3Material(L3Texture496)
#end
#ifndef (L3Color496_slope)
#declare L3Color496_slope = L3Material(L3Texture496_slope)
#end


//// Color 503 Very_Light_Grey (from lg_color.inc)
#ifndef (L3Texture503)
#declare L3Texture503 = texture { lg_very_light_grey }
#end
#ifndef (L3Texture503_slope)
#declare L3Texture503_slope = L3TextureSlope(L3Texture503)
#end
#ifndef (L3Color503)
#declare L3Color503 = L3Material(L3Texture503)
#end
#ifndef (L3Color503_slope)
#declare L3Color503_slope = L3Material(L3Texture503_slope)
#end


//// Color 504 Rubber_Flat_Silver (from lg_color.inc)
#ifndef (L3Texture504)
#declare L3Texture504 = texture { lg_rubber_flat_silver }
#end
#ifndef (L3Texture504_slope)
#declare L3Texture504_slope = L3TextureSlope(L3Texture504)
#end
#ifndef (L3Color504)
#declare L3Color504 = L3Material(L3Texture504)
#end
#ifndef (L3Color504_slope)
#declare L3Color504_slope = L3Material(L3Texture504_slope)
#end


//// Color 511 Rubber_White (from lg_color.inc)
#ifndef (L3Texture511)
#declare L3Texture511 = texture { lg_rubber_white }
#end
#ifndef (L3Texture511_slope)
#declare L3Texture511_slope = L3TextureSlope(L3Texture511)
#end
#ifndef (L3Color511)
#declare L3Color511 = L3Material(L3Texture511)
#end
#ifndef (L3Color511_slope)
#declare L3Color511_slope = L3Material(L3Texture511_slope)
#end


//// Primitive box5.dat
#ifndef (box5_dot_dat)
#declare box5_dot_dat = object {
// Box with 5 Faces and All Edges
// Name: box5.dat
// Author: James Jessiman
// !LDRAW_ORG Primitive UPDATE 2012-01
// !LICENSE Redistributable under CCAL version 2.0 : see CAreadme.txt
// BFC CERTIFY CCW
// !HISTORY 2002-04-03 [sbliss] Modified for BFC compliance
// !HISTORY 2002-04-25 [PTadmin] Official Update 2002-02
// !HISTORY 2007-06-24 [PTadmin] Header formatted for Contributor Agreement
// !HISTORY 2008-07-01 [PTadmin] Official Update 2008-01
// !HISTORY 2012-02-16 [Philo] Changed to CCW
// !HISTORY 2012-03-30 [PTadmin] Official Update 2012-01
	mesh {
		triangle { <-1,1,1>, <1,1,1>, <1,1,-1> }
		triangle { <1,1,-1>, <-1,1,-1>, <-1,1,1> }
		triangle { <-1,1,1>, <-1,0,1>, <1,0,1> }
		triangle { <1,0,1>, <1,1,1>, <-1,1,1> }
		triangle { <-1,1,-1>, <-1,0,-1>, <-1,0,1> }
		triangle { <-1,0,1>, <-1,1,1>, <-1,1,-1> }
		triangle { <1,1,-1>, <1,0,-1>, <-1,0,-1> }
		triangle { <-1,0,-1>, <-1,1,-1>, <1,1,-1> }
		triangle { <1,1,1>, <1,0,1>, <1,0,-1> }
		triangle { <1,0,-1>, <1,1,-1>, <1,1,1> }
	}
}
#end // ifndef (box5_dot_dat)


//// Primitive 4-4cyli.dat
#ifndef (_4_dash_4cyli_dot_dat)
#declare _4_dash_4cyli_dot_dat = object {
// Cylinder 1.0
// Name: 4-4cyli.dat
// Author: James Jessiman
// !LDRAW_ORG Primitive UPDATE 2005-01
// !LICENSE Redistributable under CCAL version 2.0 : see CAreadme.txt
// BFC CERTIFY CCW
// !HISTORY 1998-12-15 [PTadmin] Official Update 1998-10
// !HISTORY 2002-03-23 [sbliss] Added BFC statement; merged headers from files in distributions LDraw 0.27 and Complete.
// !HISTORY 2002-04-25 [PTadmin] Official Update 2002-02
// !HISTORY 2004-12-14 [guyvivan] BFC CCW
// !HISTORY 2005-12-28 [PTadmin] Official Update 2005-01
// !HISTORY 2007-06-24 [PTadmin] Header formatted for Contributor Agreement
// !HISTORY 2008-07-01 [PTadmin] Official Update 2008-01
	mesh {
		triangle { <1,1,0>, <0.9239,1,0.3827>, <0.9239,0,0.3827> }
		triangle { <0.9239,0,0.3827>, <1,0,0>, <1,1,0> }
		triangle { <0.9239,1,0.3827>, <0.7071,1,0.7071>, <0.7071,0,0.7071> }
		triangle { <0.7071,0,0.7071>, <0.9239,0,0.3827>, <0.9239,1,0.3827> }
		triangle { <0.7071,1,0.7071>, <0.3827,1,0.9239>, <0.3827,0,0.9239> }
		triangle { <0.3827,0,0.9239>, <0.7071,0,0.7071>, <0.7071,1,0.7071> }
		triangle { <0.3827,1,0.9239>, <0,1,1>, <0,0,1> }
		triangle { <0,0,1>, <0.3827,0,0.9239>, <0.3827,1,0.9239> }
		triangle { <0,1,1>, <-0.3827,1,0.9239>, <-0.3827,0,0.9239> }
		triangle { <-0.3827,0,0.9239>, <0,0,1>, <0,1,1> }
		triangle { <-0.3827,1,0.9239>, <-0.7071,1,0.7071>, <-0.7071,0,0.7071> }
		triangle { <-0.7071,0,0.7071>, <-0.3827,0,0.9239>, <-0.3827,1,0.9239> }
		triangle { <-0.7071,1,0.7071>, <-0.9239,1,0.3827>, <-0.9239,0,0.3827> }
		triangle { <-0.9239,0,0.3827>, <-0.7071,0,0.7071>, <-0.7071,1,0.7071> }
		triangle { <-0.9239,1,0.3827>, <-1,1,0>, <-1,0,0> }
		triangle { <-1,0,0>, <-0.9239,0,0.3827>, <-0.9239,1,0.3827> }
		triangle { <-1,1,0>, <-0.9239,1,-0.3827>, <-0.9239,0,-0.3827> }
		triangle { <-0.9239,0,-0.3827>, <-1,0,0>, <-1,1,0> }
		triangle { <-0.9239,1,-0.3827>, <-0.7071,1,-0.7071>, <-0.7071,0,-0.7071> }
		triangle { <-0.7071,0,-0.7071>, <-0.9239,0,-0.3827>, <-0.9239,1,-0.3827> }
		triangle { <-0.7071,1,-0.7071>, <-0.3827,1,-0.9239>, <-0.3827,0,-0.9239> }
		triangle { <-0.3827,0,-0.9239>, <-0.7071,0,-0.7071>, <-0.7071,1,-0.7071> }
		triangle { <-0.3827,1,-0.9239>, <0,1,-1>, <0,0,-1> }
		triangle { <0,0,-1>, <-0.3827,0,-0.9239>, <-0.3827,1,-0.9239> }
		triangle { <0,1,-1>, <0.3827,1,-0.9239>, <0.3827,0,-0.9239> }
		triangle { <0.3827,0,-0.9239>, <0,0,-1>, <0,1,-1> }
		triangle { <0.3827,1,-0.9239>, <0.7071,1,-0.7071>, <0.7071,0,-0.7071> }
		triangle { <0.7071,0,-0.7071>, <0.3827,0,-0.9239>, <0.3827,1,-0.9239> }
		triangle { <0.7071,1,-0.7071>, <0.9239,1,-0.3827>, <0.9239,0,-0.3827> }
		triangle { <0.9239,0,-0.3827>, <0.7071,0,-0.7071>, <0.7071,1,-0.7071> }
		triangle { <0.9239,1,-0.3827>, <1,1,0>, <1,0,0> }
		triangle { <1,0,0>, <0.9239,0,-0.3827>, <0.9239,1,-0.3827> }
	}
}
#end // ifndef (_4_dash_4cyli_dot_dat)


//// Primitive 4-4disc.dat
#ifndef (_4_dash_4disc_dot_dat)
#declare _4_dash_4disc_dot_dat = object {
// Disc 1.0
// Name: 4-4disc.dat
// Author: James Jessiman
// !LDRAW_ORG Primitive UPDATE 2002-02
// !LICENSE Redistributable under CCAL version 2.0 : see CAreadme.txt
// BFC CERTIFY CCW
// !HISTORY 1998-12-15 [PTadmin] Official Update 1998-10
// !HISTORY 2002-03-23 [sbliss] Added BFC statement
// !HISTORY 2002-04-25 [PTadmin] Official Update 2002-02
// !HISTORY 2007-06-24 [PTadmin] Header formatted for Contributor Agreement
// !HISTORY 2008-07-01 [PTadmin] Official Update 2008-01
	mesh {
		triangle { <0,0,0>, <1,0,0>, <0.9239,0,0.3827> }
		triangle { <0,0,0>, <0.9239,0,0.3827>, <0.7071,0,0.7071> }
		triangle { <0,0,0>, <0.7071,0,0.7071>, <0.3827,0,0.9239> }
		triangle { <0,0,0>, <0.3827,0,0.9239>, <0,0,1> }
		triangle { <0,0,0>, <0,0,1>, <-0.3827,0,0.9239> }
		triangle { <0,0,0>, <-0.3827,0,0.9239>, <-0.7071,0,0.7071> }
		triangle { <0,0,0>, <-0.7071,0,0.7071>, <-0.9239,0,0.3827> }
		triangle { <0,0,0>, <-0.9239,0,0.3827>, <-1,0,-0> }
		triangle { <0,0,0>, <-1,0,-0>, <-0.9239,0,-0.3827> }
		triangle { <0,0,0>, <-0.9239,0,-0.3827>, <-0.7071,0,-0.7071> }
		triangle { <0,0,0>, <-0.7071,0,-0.7071>, <-0.3827,0,-0.9239> }
		triangle { <0,0,0>, <-0.3827,0,-0.9239>, <0,0,-1> }
		triangle { <0,0,0>, <0,0,-1>, <0.3827,0,-0.9239> }
		triangle { <0,0,0>, <0.3827,0,-0.9239>, <0.7071,0,-0.7071> }
		triangle { <0,0,0>, <0.7071,0,-0.7071>, <0.9239,0,-0.3827> }
		triangle { <0,0,0>, <0.9239,0,-0.3827>, <1,0,0> }
	}
}
#end // ifndef (_4_dash_4disc_dot_dat)


//// Primitive stud.dat
#ifndef (stud_dot_dat)
#declare stud_dot_dat = union {
// Stud
// Name: stud.dat
// Author: James Jessiman
// !LDRAW_ORG Primitive UPDATE 2012-01
// !LICENSE Redistributable under CCAL version 2.0 : see CAreadme.txt
// BFC CERTIFY CCW
// !HISTORY 2002-04-04 [sbliss] Modified for BFC compliance
// !HISTORY 2002-04-25 [PTadmin] Official Update 2002-02
// !HISTORY 2007-06-24 [PTadmin] Header formatted for Contributor Agreement
// !HISTORY 2008-07-01 [PTadmin] Official Update 2008-01
// !HISTORY 2012-02-16 [Philo] Changed to CCW
// !HISTORY 2012-03-30 [PTadmin] Official Update 2012-01
	object { _4_dash_4cyli_dot_dat matrix <6,0,0,0,-4,0,0,0,6,0,0,0> }
	object { _4_dash_4disc_dot_dat matrix <6,0,0,0,1,0,0,0,6,0,-4,0> }
}
#end // ifndef (stud_dot_dat)


//// Part 3005.dat
#ifndef (_3005_dot_dat)
#declare _3005_dot_dat = #if (L3Quality = 0) box { <-10,-4,-10>, <10,24,10> } #else union {
// Brick  1 x  1
// Name: 3005.dat
// Author: James Jessiman
// !LDRAW_ORG Part UPDATE 2002-03
// !LICENSE Redistributable under CCAL version 2.0 : see CAreadme.txt
// BFC CERTIFY CCW
// !HISTORY 2001-10-26 [PTadmin] Official Update 2001-01
// !HISTORY 2002-05-07 [unknown] BFC Certification
// !HISTORY 2002-06-11 [PTadmin] Official Update 2002-03
// !HISTORY 2007-05-07 [PTadmin] Header formatted for Contributor Agreement
// !HISTORY 2008-07-01 [PTadmin] Official Update 2008-01
// BFC INVERTNEXT
	object { box5_dot_dat matrix <6,0,0,0,-20,0,0,0,6,0,24,0> }
	mesh {
		triangle { <10,24,10>, <6,24,6>, <-6,24,6> }
		triangle { <-6,24,6>, <-10,24,10>, <10,24,10> }
		triangle { <-10,24,10>, <-6,24,6>, <-6,24,-6> }
		triangle { <-6,24,-6>, <-10,24,-10>, <-10,24,10> }
		triangle { <-10,24,-10>, <-6,24,-6>, <6,24,-6> }
		triangle { <6,24,-6>, <10,24,-10>, <-10,24,-10> }
		triangle { <10,24,-10>, <6,24,-6>, <6,24,6> }
		triangle { <6,24,6>, <10,24,10>, <10,24,-10> }
	}
	object { box5_dot_dat matrix <10,0,0,0,-24,0,0,0,10,0,24,0> }
	object { stud_dot_dat matrix <1,0,0,0,1,0,0,0,1,0,0,0> }
}
#end
#end // ifndef (_3005_dot_dat)


//// Model every_color.ldr
#ifndef (every__color_dot_ldr)
#declare every__color_dot_ldr = union {
// Every Color
// Name: every_color.ldr
// Author: MLCad
// Unofficial Model
// ROTATION CENTER 0 0 0 1 "Custom"
// ROTATION CONFIG 0 0
	// 1 0  0 -24 0  1 0 0  0 1 0  0 0 1 3005.dat
	object {
		_3005_dot_dat
		matrix <1-L3SW/20,0,0,0,1-L3SW/28,0,0,0,1-L3SW/20,0,L3SW/2.8,0>
		matrix <1,0,0,0,1,0,0,0,1,0,-24,0>
		material { L3Color0 }
	}
	// 1 1  0 -24 0  1 0 0  0 1 0  0 0 1 3005.dat
	object {
		_3005_dot_dat
		matrix <1-L3SW/20,0,0,0,1-L3SW/28,0,0,0,1-L3SW/20,0,L3SW/2.8,0>
		matrix <1,0,0,0,1,0,0,0,1,0,-24,0>
		material { L3Color1 }
	}
	// 1 2  0 -24 0  1 0 0  0 1 0  0 0 1 3005.dat
	object {
		_3005_dot_dat
		matrix <1-L3SW/20,0,0,0,1-L3SW/28,0,0,0,1-L3SW/20,0,L3SW/2.8,0>
		matrix <1,0,0,0,1,0,0,0,1,0,-24,0>
		material { L3Color2 }
	}
	// 1 3  0 -24 0  1 0 0  0 1 0  0 0 1 3005.dat
	object {
		_3005_dot_dat
		matrix <1-L3SW/20,0,0,0,1-L3SW/28,0,0,0,1-L3SW/20,0,L3SW/2.8,0>
		matrix <1,0,0,0,1,0,0,0,1,0,-24,0>
		material { L3Color3 }
	}
	// 1 4  0 -24 0  1 0 0  0 1 0  0 0 1 3005.dat
	object {
		_3005_dot_dat
		matrix <1-L3SW/20,0,0,0,1-L3SW/28,0,0,0,1-L3SW/20,0,L3SW/2.8,0>
		matrix <1,0,0,0,1,0,0,0,1,0,-24,0>
		material { L3Color4 }
	}
	// 1 5  0 -24 0  1 0 0  0 1 0  0 0 1 3005.dat
	object {
		_3005_dot_dat
		matrix <1-L3SW/20,0,0,0,1-L3SW/28,0,0,0,1-L3SW/20,0,L3SW/2.8,0>
		matrix <1,0,0,0,1,0,0,0,1,0,-24,0>
		material { L3Color5 }
	}
	// 1 6  0 -24 0  1 0 0  0 1 0  0 0 1 3005.dat
	object {
		_3005_dot_dat
		matrix <1-L3SW/20,0,0,0,1-L3SW/28,0,0,0,1-L3SW/20,0,L3SW/2.8,0>
		matrix <1,0,0,0,1,0,0,0,1,0,-24,0>
		material { L3Color6 }
	}
	// 1 7  0 -24 0  1 0 0  0 1 0  0 0 1 3005.dat
	object {
		_3005_dot_dat
		matrix <1-L3SW/20,0,0,0,1-L3SW/28,0,0,0,1-L3SW/20,0,L3SW/2.8,0>
		matrix <1,0,0,0,1,0,0,0,1,0,-24,0>
		material { L3Color7 }
	}
	// 1 8  0 -24 0  1 0 0  0 1 0  0 0 1 3005.dat
	object {
		_3005_dot_dat
		matrix <1-L3SW/20,0,0,0,1-L3SW/28,0,0,0,1-L3SW/20,0,L3SW/2.8,0>
		matrix <1,0,0,0,1,0,0,0,1,0,-24,0>
		material { L3Color8 }
	}
	// 1 9  0 -24 0  1 0 0  0 1 0  0 0 1 3005.dat
	object {
		_3005_dot_dat
		matrix <1-L3SW/20,0,0,0,1-L3SW/28,0,0,0,1-L3SW/20,0,L3SW/2.8,0>
		matrix <1,0,0,0,1,0,0,0,1,0,-24,0>
		material { L3Color9 }
	}
	// 1 10  0 -24 0  1 0 0  0 1 0  0 0 1 3005.dat
	object {
		_3005_dot_dat
		matrix <1-L3SW/20,0,0,0,1-L3SW/28,0,0,0,1-L3SW/20,0,L3SW/2.8,0>
		matrix <1,0,0,0,1,0,0,0,1,0,-24,0>
		material { L3Color10 }
	}
	// 1 11  0 -24 0  1 0 0  0 1 0  0 0 1 3005.dat
	object {
		_3005_dot_dat
		matrix <1-L3SW/20,0,0,0,1-L3SW/28,0,0,0,1-L3SW/20,0,L3SW/2.8,0>
		matrix <1,0,0,0,1,0,0,0,1,0,-24,0>
		material { L3Color11 }
	}
	// 1 12  0 -24 0  1 0 0  0 1 0  0 0 1 3005.dat
	object {
		_3005_dot_dat
		matrix <1-L3SW/20,0,0,0,1-L3SW/28,0,0,0,1-L3SW/20,0,L3SW/2.8,0>
		matrix <1,0,0,0,1,0,0,0,1,0,-24,0>
		material { L3Color12 }
	}
	// 1 13  0 -24 0  1 0 0  0 1 0  0 0 1 3005.dat
	object {
		_3005_dot_dat
		matrix <1-L3SW/20,0,0,0,1-L3SW/28,0,0,0,1-L3SW/20,0,L3SW/2.8,0>
		matrix <1,0,0,0,1,0,0,0,1,0,-24,0>
		material { L3Color13 }
	}
	// 1 14  0 -24 0  1 0 0  0 1 0  0 0 1 3005.dat
	object {
		_3005_dot_dat
		matrix <1-L3SW/20,0,0,0,1-L3SW/28,0,0,0,1-L3SW/20,0,L3SW/2.8,0>
		matrix <1,0,0,0,1,0,0,0,1,0,-24,0>
		material { L3Color14 }
	}
	// 1 15  0 -24 0  1 0 0  0 1 0  0 0 1 3005.dat
	object {
		_3005_dot_dat
		matrix <1-L3SW/20,0,0,0,1-L3SW/28,0,0,0,1-L3SW/20,0,L3SW/2.8,0>
		matrix <1,0,0,0,1,0,0,0,1,0,-24,0>
		material { L3Color15 }
	}
	// 1 16  0 -24 0  1 0 0  0 1 0  0 0 1 3005.dat
	object {
		_3005_dot_dat
		matrix <1-L3SW/20,0,0,0,1-L3SW/28,0,0,0,1-L3SW/20,0,L3SW/2.8,0>
		matrix <1,0,0,0,1,0,0,0,1,0,-24,0>
	}
	// 1 17  0 -24 0  1 0 0  0 1 0  0 0 1 3005.dat
	object {
		_3005_dot_dat
		matrix <1-L3SW/20,0,0,0,1-L3SW/28,0,0,0,1-L3SW/20,0,L3SW/2.8,0>
		matrix <1,0,0,0,1,0,0,0,1,0,-24,0>
		material { L3Color17 }
	}
	// 1 18  0 -24 0  1 0 0  0 1 0  0 0 1 3005.dat
	object {
		_3005_dot_dat
		matrix <1-L3SW/20,0,0,0,1-L3SW/28,0,0,0,1-L3SW/20,0,L3SW/2.8,0>
		matrix <1,0,0,0,1,0,0,0,1,0,-24,0>
		material { L3Color18 }
	}
	// 1 19  0 -24 0  1 0 0  0 1 0  0 0 1 3005.dat
	object {
		_3005_dot_dat
		matrix <1-L3SW/20,0,0,0,1-L3SW/28,0,0,0,1-L3SW/20,0,L3SW/2.8,0>
		matrix <1,0,0,0,1,0,0,0,1,0,-24,0>
		material { L3Color19 }
	}
	// 1 20  0 -24 0  1 0 0  0 1 0  0 0 1 3005.dat
	object {
		_3005_dot_dat
		matrix <1-L3SW/20,0,0,0,1-L3SW/28,0,0,0,1-L3SW/20,0,L3SW/2.8,0>
		matrix <1,0,0,0,1,0,0,0,1,0,-24,0>
		material { L3Color20 }
	}
	// 1 21  0 -24 0  1 0 0  0 1 0  0 0 1 3005.dat
	object {
		_3005_dot_dat
		matrix <1-L3SWT/20,0,0,0,1-L3SWT/28,0,0,0,1-L3SWT/20,0,L3SWT/2.8,0>
		matrix <1,0,0,0,1,0,0,0,1,0,-24,0>
		material { L3Color21 }
	}
	// 1 22  0 -24 0  1 0 0  0 1 0  0 0 1 3005.dat
	object {
		_3005_dot_dat
		matrix <1-L3SW/20,0,0,0,1-L3SW/28,0,0,0,1-L3SW/20,0,L3SW/2.8,0>
		matrix <1,0,0,0,1,0,0,0,1,0,-24,0>
		material { L3Color22 }
	}
	// 1 23  0 -24 0  1 0 0  0 1 0  0 0 1 3005.dat
	object {
		_3005_dot_dat
		matrix <1-L3SW/20,0,0,0,1-L3SW/28,0,0,0,1-L3SW/20,0,L3SW/2.8,0>
		matrix <1,0,0,0,1,0,0,0,1,0,-24,0>
		material { L3Color23 }
	}
	// 1 16  0 -24 0  1 0 0  0 1 0  0 0 1 3005.dat
	object {
		_3005_dot_dat
		matrix <1-L3SW/20,0,0,0,1-L3SW/28,0,0,0,1-L3SW/20,0,L3SW/2.8,0>
		matrix <1,0,0,0,1,0,0,0,1,0,-24,0>
	}
	// 1 25  0 -24 0  1 0 0  0 1 0  0 0 1 3005.dat
	object {
		_3005_dot_dat
		matrix <1-L3SW/20,0,0,0,1-L3SW/28,0,0,0,1-L3SW/20,0,L3SW/2.8,0>
		matrix <1,0,0,0,1,0,0,0,1,0,-24,0>
		material { L3Color25 }
	}
	// 1 26  0 -24 0  1 0 0  0 1 0  0 0 1 3005.dat
	object {
		_3005_dot_dat
		matrix <1-L3SW/20,0,0,0,1-L3SW/28,0,0,0,1-L3SW/20,0,L3SW/2.8,0>
		matrix <1,0,0,0,1,0,0,0,1,0,-24,0>
		material { L3Color26 }
	}
	// 1 27  0 -24 0  1 0 0  0 1 0  0 0 1 3005.dat
	object {
		_3005_dot_dat
		matrix <1-L3SW/20,0,0,0,1-L3SW/28,0,0,0,1-L3SW/20,0,L3SW/2.8,0>
		matrix <1,0,0,0,1,0,0,0,1,0,-24,0>
		material { L3Color27 }
	}
	// 1 28  0 -24 0  1 0 0  0 1 0  0 0 1 3005.dat
	object {
		_3005_dot_dat
		matrix <1-L3SW/20,0,0,0,1-L3SW/28,0,0,0,1-L3SW/20,0,L3SW/2.8,0>
		matrix <1,0,0,0,1,0,0,0,1,0,-24,0>
		material { L3Color28 }
	}
	// 1 29  0 -24 0  1 0 0  0 1 0  0 0 1 3005.dat
	object {
		_3005_dot_dat
		matrix <1-L3SW/20,0,0,0,1-L3SW/28,0,0,0,1-L3SW/20,0,L3SW/2.8,0>
		matrix <1,0,0,0,1,0,0,0,1,0,-24,0>
		material { L3Color29 }
	}
	// 1 30  0 -24 0  1 0 0  0 1 0  0 0 1 3005.dat
	object {
		_3005_dot_dat
		matrix <1-L3SW/20,0,0,0,1-L3SW/28,0,0,0,1-L3SW/20,0,L3SW/2.8,0>
		matrix <1,0,0,0,1,0,0,0,1,0,-24,0>
		material { L3Color30 }
	}
	// 1 31  0 -24 0  1 0 0  0 1 0  0 0 1 3005.dat
	object {
		_3005_dot_dat
		matrix <1-L3SW/20,0,0,0,1-L3SW/28,0,0,0,1-L3SW/20,0,L3SW/2.8,0>
		matrix <1,0,0,0,1,0,0,0,1,0,-24,0>
		material { L3Color31 }
	}
	// 1 32  0 -24 0  1 0 0  0 1 0  0 0 1 3005.dat
	object {
		_3005_dot_dat
		matrix <1-L3SWT/20,0,0,0,1-L3SWT/28,0,0,0,1-L3SWT/20,0,L3SWT/2.8,0>
		matrix <1,0,0,0,1,0,0,0,1,0,-24,0>
		material { L3Color32 }
	}
	// 1 33  0 -24 0  1 0 0  0 1 0  0 0 1 3005.dat
	object {
		_3005_dot_dat
		matrix <1-L3SWT/20,0,0,0,1-L3SWT/28,0,0,0,1-L3SWT/20,0,L3SWT/2.8,0>
		matrix <1,0,0,0,1,0,0,0,1,0,-24,0>
		material { L3Color33 }
	}
	// 1 34  0 -24 0  1 0 0  0 1 0  0 0 1 3005.dat
	object {
		_3005_dot_dat
		matrix <1-L3SWT/20,0,0,0,1-L3SWT/28,0,0,0,1-L3SWT/20,0,L3SWT/2.8,0>
		matrix <1,0,0,0,1,0,0,0,1,0,-24,0>
		material { L3Color34 }
	}
	// 1 35  0 -24 0  1 0 0  0 1 0  0 0 1 3005.dat
	object {
		_3005_dot_dat
		matrix <1-L3SWT/20,0,0,0,1-L3SWT/28,0,0,0,1-L3SWT/20,0,L3SWT/2.8,0>
		matrix <1,0,0,0,1,0,0,0,1,0,-24,0>
		material { L3Color35 }
	}
	// 1 36  0 -24 0  1 0 0  0 1 0  0 0 1 3005.dat
	object {
		_3005_dot_dat
		matrix <1-L3SWT/20,0,0,0,1-L3SWT/28,0,0,0,1-L3SWT/20,0,L3SWT/2.8,0>
		matrix <1,0,0,0,1,0,0,0,1,0,-24,0>
		material { L3Color36 }
	}
	// 1 37  0 -24 0  1 0 0  0 1 0  0 0 1 3005.dat
	object {
		_3005_dot_dat
		matrix <1-L3SWT/20,0,0,0,1-L3SWT/28,0,0,0,1-L3SWT/20,0,L3SWT/2.8,0>
		matrix <1,0,0,0,1,0,0,0,1,0,-24,0>
		material { L3Color37 }
	}
	// 1 38  0 -24 0  1 0 0  0 1 0  0 0 1 3005.dat
	object {
		_3005_dot_dat
		matrix <1-L3SWT/20,0,0,0,1-L3SWT/28,0,0,0,1-L3SWT/20,0,L3SWT/2.8,0>
		matrix <1,0,0,0,1,0,0,0,1,0,-24,0>
		material { L3Color38 }
	}
	// 1 39  0 -24 0  1 0 0  0 1 0  0 0 1 3005.dat
	object {
		_3005_dot_dat
		matrix <1-L3SWT/20,0,0,0,1-L3SWT/28,0,0,0,1-L3SWT/20,0,L3SWT/2.8,0>
		matrix <1,0,0,0,1,0,0,0,1,0,-24,0>
		material { L3Color39 }
	}
	// 1 40  0 -24 0  1 0 0  0 1 0  0 0 1 3005.dat
	object {
		_3005_dot_dat
		matrix <1-L3SWT/20,0,0,0,1-L3SWT/28,0,0,0,1-L3SWT/20,0,L3SWT/2.8,0>
		matrix <1,0,0,0,1,0,0,0,1,0,-24,0>
		material { L3Color40 }
	}
	// 1 41  0 -24 0  1 0 0  0 1 0  0 0 1 3005.dat
	object {
		_3005_dot_dat
		matrix <1-L3SWT/20,0,0,0,1-L3SWT/28,0,0,0,1-L3SWT/20,0,L3SWT/2.8,0>
		matrix <1,0,0,0,1,0,0,0,1,0,-24,0>
		material { L3Color41 }
	}
	// 1 42  0 -24 0  1 0 0  0 1 0  0 0 1 3005.dat
	object {
		_3005_dot_dat
		matrix <1-L3SWT/20,0,0,0,1-L3SWT/28,0,0,0,1-L3SWT/20,0,L3SWT/2.8,0>
		matrix <1,0,0,0,1,0,0,0,1,0,-24,0>
		material { L3Color42 }
	}
	// 1 43  0 -24 0  1 0 0  0 1 0  0 0 1 3005.dat
	object {
		_3005_dot_dat
		matrix <1-L3SWT/20,0,0,0,1-L3SWT/28,0,0,0,1-L3SWT/20,0,L3SWT/2.8,0>
		matrix <1,0,0,0,1,0,0,0,1,0,-24,0>
		material { L3Color43 }
	}
	// 1 44  0 -24 0  1 0 0  0 1 0  0 0 1 3005.dat
	object {
		_3005_dot_dat
		matrix <1-L3SWT/20,0,0,0,1-L3SWT/28,0,0,0,1-L3SWT/20,0,L3SWT/2.8,0>
		matrix <1,0,0,0,1,0,0,0,1,0,-24,0>
		material { L3Color44 }
	}
	// 1 45  0 -24 0  1 0 0  0 1 0  0 0 1 3005.dat
	object {
		_3005_dot_dat
		matrix <1-L3SWT/20,0,0,0,1-L3SWT/28,0,0,0,1-L3SWT/20,0,L3SWT/2.8,0>
		matrix <1,0,0,0,1,0,0,0,1,0,-24,0>
		material { L3Color45 }
	}
	// 1 46  0 -24 0  1 0 0  0 1 0  0 0 1 3005.dat
	object {
		_3005_dot_dat
		matrix <1-L3SWT/20,0,0,0,1-L3SWT/28,0,0,0,1-L3SWT/20,0,L3SWT/2.8,0>
		matrix <1,0,0,0,1,0,0,0,1,0,-24,0>
		material { L3Color46 }
	}
	// 1 47  0 -24 0  1 0 0  0 1 0  0 0 1 3005.dat
	object {
		_3005_dot_dat
		matrix <1-L3SWT/20,0,0,0,1-L3SWT/28,0,0,0,1-L3SWT/20,0,L3SWT/2.8,0>
		matrix <1,0,0,0,1,0,0,0,1,0,-24,0>
		material { L3Color47 }
	}
	// 1 52  0 -24 0  1 0 0  0 1 0  0 0 1 3005.dat
	object {
		_3005_dot_dat
		matrix <1-L3SWT/20,0,0,0,1-L3SWT/28,0,0,0,1-L3SWT/20,0,L3SWT/2.8,0>
		matrix <1,0,0,0,1,0,0,0,1,0,-24,0>
		material { L3Color52 }
	}
	// 1 54  0 -24 0  1 0 0  0 1 0  0 0 1 3005.dat
	object {
		_3005_dot_dat
		matrix <1-L3SWT/20,0,0,0,1-L3SWT/28,0,0,0,1-L3SWT/20,0,L3SWT/2.8,0>
		matrix <1,0,0,0,1,0,0,0,1,0,-24,0>
		material { L3Color54 }
	}
	// 1 57  0 -24 0  1 0 0  0 1 0  0 0 1 3005.dat
	object {
		_3005_dot_dat
		matrix <1-L3SWT/20,0,0,0,1-L3SWT/28,0,0,0,1-L3SWT/20,0,L3SWT/2.8,0>
		matrix <1,0,0,0,1,0,0,0,1,0,-24,0>
		material { L3Color57 }
	}
	// 1 60  0 -24 0  1 0 0  0 1 0  0 0 1 3005.dat
	object {
		_3005_dot_dat
		matrix <1-L3SW/20,0,0,0,1-L3SW/28,0,0,0,1-L3SW/20,0,L3SW/2.8,0>
		matrix <1,0,0,0,1,0,0,0,1,0,-24,0>
		material { L3Color60 }
	}
	// 1 61  0 -24 0  1 0 0  0 1 0  0 0 1 3005.dat
	object {
		_3005_dot_dat
		matrix <1-L3SW/20,0,0,0,1-L3SW/28,0,0,0,1-L3SW/20,0,L3SW/2.8,0>
		matrix <1,0,0,0,1,0,0,0,1,0,-24,0>
		material { L3Color61 }
	}
	// 1 62  0 -24 0  1 0 0  0 1 0  0 0 1 3005.dat
	object {
		_3005_dot_dat
		matrix <1-L3SW/20,0,0,0,1-L3SW/28,0,0,0,1-L3SW/20,0,L3SW/2.8,0>
		matrix <1,0,0,0,1,0,0,0,1,0,-24,0>
		material { L3Color62 }
	}
	// 1 63  0 -24 0  1 0 0  0 1 0  0 0 1 3005.dat
	object {
		_3005_dot_dat
		matrix <1-L3SW/20,0,0,0,1-L3SW/28,0,0,0,1-L3SW/20,0,L3SW/2.8,0>
		matrix <1,0,0,0,1,0,0,0,1,0,-24,0>
		material { L3Color63 }
	}
	// 1 64  0 -24 0  1 0 0  0 1 0  0 0 1 3005.dat
	object {
		_3005_dot_dat
		matrix <1-L3SW/20,0,0,0,1-L3SW/28,0,0,0,1-L3SW/20,0,L3SW/2.8,0>
		matrix <1,0,0,0,1,0,0,0,1,0,-24,0>
		material { L3Color64 }
	}
	// 1 65  0 -24 0  1 0 0  0 1 0  0 0 1 3005.dat
	object {
		_3005_dot_dat
		matrix <1-L3SW/20,0,0,0,1-L3SW/28,0,0,0,1-L3SW/20,0,L3SW/2.8,0>
		matrix <1,0,0,0,1,0,0,0,1,0,-24,0>
		material { L3Color65 }
	}
	// 1 66  0 -24 0  1 0 0  0 1 0  0 0 1 3005.dat
	object {
		_3005_dot_dat
		matrix <1-L3SWT/20,0,0,0,1-L3SWT/28,0,0,0,1-L3SWT/20,0,L3SWT/2.8,0>
		matrix <1,0,0,0,1,0,0,0,1,0,-24,0>
		material { L3Color66 }
	}
	// 1 67  0 -24 0  1 0 0  0 1 0  0 0 1 3005.dat
	object {
		_3005_dot_dat
		matrix <1-L3SWT/20,0,0,0,1-L3SWT/28,0,0,0,1-L3SWT/20,0,L3SWT/2.8,0>
		matrix <1,0,0,0,1,0,0,0,1,0,-24,0>
		material { L3Color67 }
	}
	// 1 68  0 -24 0  1 0 0  0 1 0  0 0 1 3005.dat
	object {
		_3005_dot_dat
		matrix <1-L3SW/20,0,0,0,1-L3SW/28,0,0,0,1-L3SW/20,0,L3SW/2.8,0>
		matrix <1,0,0,0,1,0,0,0,1,0,-24,0>
		material { L3Color68 }
	}
	// 1 69  0 -24 0  1 0 0  0 1 0  0 0 1 3005.dat
	object {
		_3005_dot_dat
		matrix <1-L3SW/20,0,0,0,1-L3SW/28,0,0,0,1-L3SW/20,0,L3SW/2.8,0>
		matrix <1,0,0,0,1,0,0,0,1,0,-24,0>
		material { L3Color69 }
	}
	// 1 70  0 -24 0  1 0 0  0 1 0  0 0 1 3005.dat
	object {
		_3005_dot_dat
		matrix <1-L3SW/20,0,0,0,1-L3SW/28,0,0,0,1-L3SW/20,0,L3SW/2.8,0>
		matrix <1,0,0,0,1,0,0,0,1,0,-24,0>
		material { L3Color70 }
	}
	// 1 71  0 -24 0  1 0 0  0 1 0  0 0 1 3005.dat
	object {
		_3005_dot_dat
		matrix <1-L3SW/20,0,0,0,1-L3SW/28,0,0,0,1-L3SW/20,0,L3SW/2.8,0>
		matrix <1,0,0,0,1,0,0,0,1,0,-24,0>
		material { L3Color71 }
	}
	// 1 72  0 -24 0  1 0 0  0 1 0  0 0 1 3005.dat
	object {
		_3005_dot_dat
		matrix <1-L3SW/20,0,0,0,1-L3SW/28,0,0,0,1-L3SW/20,0,L3SW/2.8,0>
		matrix <1,0,0,0,1,0,0,0,1,0,-24,0>
		material { L3Color72 }
	}
	// 1 73  0 -24 0  1 0 0  0 1 0  0 0 1 3005.dat
	object {
		_3005_dot_dat
		matrix <1-L3SW/20,0,0,0,1-L3SW/28,0,0,0,1-L3SW/20,0,L3SW/2.8,0>
		matrix <1,0,0,0,1,0,0,0,1,0,-24,0>
		material { L3Color73 }
	}
	// 1 74  0 -24 0  1 0 0  0 1 0  0 0 1 3005.dat
	object {
		_3005_dot_dat
		matrix <1-L3SW/20,0,0,0,1-L3SW/28,0,0,0,1-L3SW/20,0,L3SW/2.8,0>
		matrix <1,0,0,0,1,0,0,0,1,0,-24,0>
		material { L3Color74 }
	}
	// 1 75  0 -24 0  1 0 0  0 1 0  0 0 1 3005.dat
	object {
		_3005_dot_dat
		matrix <1-L3SW/20,0,0,0,1-L3SW/28,0,0,0,1-L3SW/20,0,L3SW/2.8,0>
		matrix <1,0,0,0,1,0,0,0,1,0,-24,0>
		material { L3Color75 }
	}
	// 1 76  0 -24 0  1 0 0  0 1 0  0 0 1 3005.dat
	object {
		_3005_dot_dat
		matrix <1-L3SW/20,0,0,0,1-L3SW/28,0,0,0,1-L3SW/20,0,L3SW/2.8,0>
		matrix <1,0,0,0,1,0,0,0,1,0,-24,0>
		material { L3Color76 }
	}
	// 1 77  0 -24 0  1 0 0  0 1 0  0 0 1 3005.dat
	object {
		_3005_dot_dat
		matrix <1-L3SW/20,0,0,0,1-L3SW/28,0,0,0,1-L3SW/20,0,L3SW/2.8,0>
		matrix <1,0,0,0,1,0,0,0,1,0,-24,0>
		material { L3Color77 }
	}
	// 1 78  0 -24 0  1 0 0  0 1 0  0 0 1 3005.dat
	object {
		_3005_dot_dat
		matrix <1-L3SW/20,0,0,0,1-L3SW/28,0,0,0,1-L3SW/20,0,L3SW/2.8,0>
		matrix <1,0,0,0,1,0,0,0,1,0,-24,0>
		material { L3Color78 }
	}
	// 1 79  0 -24 0  1 0 0  0 1 0  0 0 1 3005.dat
	object {
		_3005_dot_dat
		matrix <1-L3SWT/20,0,0,0,1-L3SWT/28,0,0,0,1-L3SWT/20,0,L3SWT/2.8,0>
		matrix <1,0,0,0,1,0,0,0,1,0,-24,0>
		material { L3Color79 }
	}
	// 1 80  0 -24 0  1 0 0  0 1 0  0 0 1 3005.dat
	object {
		_3005_dot_dat
		matrix <1-L3SW/20,0,0,0,1-L3SW/28,0,0,0,1-L3SW/20,0,L3SW/2.8,0>
		matrix <1,0,0,0,1,0,0,0,1,0,-24,0>
		material { L3Color80 }
	}
	// 1 81  0 -24 0  1 0 0  0 1 0  0 0 1 3005.dat
	object {
		_3005_dot_dat
		matrix <1-L3SW/20,0,0,0,1-L3SW/28,0,0,0,1-L3SW/20,0,L3SW/2.8,0>
		matrix <1,0,0,0,1,0,0,0,1,0,-24,0>
		material { L3Color81 }
	}
	// 1 82  0 -24 0  1 0 0  0 1 0  0 0 1 3005.dat
	object {
		_3005_dot_dat
		matrix <1-L3SW/20,0,0,0,1-L3SW/28,0,0,0,1-L3SW/20,0,L3SW/2.8,0>
		matrix <1,0,0,0,1,0,0,0,1,0,-24,0>
		material { L3Color82 }
	}
	// 1 83  0 -24 0  1 0 0  0 1 0  0 0 1 3005.dat
	object {
		_3005_dot_dat
		matrix <1-L3SW/20,0,0,0,1-L3SW/28,0,0,0,1-L3SW/20,0,L3SW/2.8,0>
		matrix <1,0,0,0,1,0,0,0,1,0,-24,0>
		material { L3Color83 }
	}
	// 1 84  0 -24 0  1 0 0  0 1 0  0 0 1 3005.dat
	object {
		_3005_dot_dat
		matrix <1-L3SW/20,0,0,0,1-L3SW/28,0,0,0,1-L3SW/20,0,L3SW/2.8,0>
		matrix <1,0,0,0,1,0,0,0,1,0,-24,0>
		material { L3Color84 }
	}
	// 1 85  0 -24 0  1 0 0  0 1 0  0 0 1 3005.dat
	object {
		_3005_dot_dat
		matrix <1-L3SW/20,0,0,0,1-L3SW/28,0,0,0,1-L3SW/20,0,L3SW/2.8,0>
		matrix <1,0,0,0,1,0,0,0,1,0,-24,0>
		material { L3Color85 }
	}
	// 1 86  0 -24 0  1 0 0  0 1 0  0 0 1 3005.dat
	object {
		_3005_dot_dat
		matrix <1-L3SW/20,0,0,0,1-L3SW/28,0,0,0,1-L3SW/20,0,L3SW/2.8,0>
		matrix <1,0,0,0,1,0,0,0,1,0,-24,0>
		material { L3Color86 }
	}
	// 1 87  0 -24 0  1 0 0  0 1 0  0 0 1 3005.dat
	object {
		_3005_dot_dat
		matrix <1-L3SW/20,0,0,0,1-L3SW/28,0,0,0,1-L3SW/20,0,L3SW/2.8,0>
		matrix <1,0,0,0,1,0,0,0,1,0,-24,0>
		material { L3Color87 }
	}
	// 1 89  0 -24 0  1 0 0  0 1 0  0 0 1 3005.dat
	object {
		_3005_dot_dat
		matrix <1-L3SW/20,0,0,0,1-L3SW/28,0,0,0,1-L3SW/20,0,L3SW/2.8,0>
		matrix <1,0,0,0,1,0,0,0,1,0,-24,0>
		material { L3Color89 }
	}
	// 1 92  0 -24 0  1 0 0  0 1 0  0 0 1 3005.dat
	object {
		_3005_dot_dat
		matrix <1-L3SW/20,0,0,0,1-L3SW/28,0,0,0,1-L3SW/20,0,L3SW/2.8,0>
		matrix <1,0,0,0,1,0,0,0,1,0,-24,0>
		material { L3Color92 }
	}
	// 1 100  0 -24 0  1 0 0  0 1 0  0 0 1 3005.dat
	object {
		_3005_dot_dat
		matrix <1-L3SW/20,0,0,0,1-L3SW/28,0,0,0,1-L3SW/20,0,L3SW/2.8,0>
		matrix <1,0,0,0,1,0,0,0,1,0,-24,0>
		material { L3Color100 }
	}
	// 1 110  0 -24 0  1 0 0  0 1 0  0 0 1 3005.dat
	object {
		_3005_dot_dat
		matrix <1-L3SW/20,0,0,0,1-L3SW/28,0,0,0,1-L3SW/20,0,L3SW/2.8,0>
		matrix <1,0,0,0,1,0,0,0,1,0,-24,0>
		material { L3Color110 }
	}
	// 1 112  0 -24 0  1 0 0  0 1 0  0 0 1 3005.dat
	object {
		_3005_dot_dat
		matrix <1-L3SW/20,0,0,0,1-L3SW/28,0,0,0,1-L3SW/20,0,L3SW/2.8,0>
		matrix <1,0,0,0,1,0,0,0,1,0,-24,0>
		material { L3Color112 }
	}
	// 1 114  0 -24 0  1 0 0  0 1 0  0 0 1 3005.dat
	object {
		_3005_dot_dat
		matrix <1-L3SWT/20,0,0,0,1-L3SWT/28,0,0,0,1-L3SWT/20,0,L3SWT/2.8,0>
		matrix <1,0,0,0,1,0,0,0,1,0,-24,0>
		material { L3Color114 }
	}
	// 1 115  0 -24 0  1 0 0  0 1 0  0 0 1 3005.dat
	object {
		_3005_dot_dat
		matrix <1-L3SW/20,0,0,0,1-L3SW/28,0,0,0,1-L3SW/20,0,L3SW/2.8,0>
		matrix <1,0,0,0,1,0,0,0,1,0,-24,0>
		material { L3Color115 }
	}
	// 1 117  0 -24 0  1 0 0  0 1 0  0 0 1 3005.dat
	object {
		_3005_dot_dat
		matrix <1-L3SWT/20,0,0,0,1-L3SWT/28,0,0,0,1-L3SWT/20,0,L3SWT/2.8,0>
		matrix <1,0,0,0,1,0,0,0,1,0,-24,0>
		material { L3Color117 }
	}
	// 1 118  0 -24 0  1 0 0  0 1 0  0 0 1 3005.dat
	object {
		_3005_dot_dat
		matrix <1-L3SW/20,0,0,0,1-L3SW/28,0,0,0,1-L3SW/20,0,L3SW/2.8,0>
		matrix <1,0,0,0,1,0,0,0,1,0,-24,0>
		material { L3Color118 }
	}
	// 1 120  0 -24 0  1 0 0  0 1 0  0 0 1 3005.dat
	object {
		_3005_dot_dat
		matrix <1-L3SW/20,0,0,0,1-L3SW/28,0,0,0,1-L3SW/20,0,L3SW/2.8,0>
		matrix <1,0,0,0,1,0,0,0,1,0,-24,0>
		material { L3Color120 }
	}
	// 1 125  0 -24 0  1 0 0  0 1 0  0 0 1 3005.dat
	object {
		_3005_dot_dat
		matrix <1-L3SW/20,0,0,0,1-L3SW/28,0,0,0,1-L3SW/20,0,L3SW/2.8,0>
		matrix <1,0,0,0,1,0,0,0,1,0,-24,0>
		material { L3Color125 }
	}
	// 1 128  0 -24 0  1 0 0  0 1 0  0 0 1 3005.dat
	object {
		_3005_dot_dat
		matrix <1-L3SW/20,0,0,0,1-L3SW/28,0,0,0,1-L3SW/20,0,L3SW/2.8,0>
		matrix <1,0,0,0,1,0,0,0,1,0,-24,0>
		material { L3Color128 }
	}
	// 1 129  0 -24 0  1 0 0  0 1 0  0 0 1 3005.dat
	object {
		_3005_dot_dat
		matrix <1-L3SWT/20,0,0,0,1-L3SWT/28,0,0,0,1-L3SWT/20,0,L3SWT/2.8,0>
		matrix <1,0,0,0,1,0,0,0,1,0,-24,0>
		material { L3Color129 }
	}
	// 1 132  0 -24 0  1 0 0  0 1 0  0 0 1 3005.dat
	object {
		_3005_dot_dat
		matrix <1-L3SW/20,0,0,0,1-L3SW/28,0,0,0,1-L3SW/20,0,L3SW/2.8,0>
		matrix <1,0,0,0,1,0,0,0,1,0,-24,0>
		material { L3Color132 }
	}
	// 1 133  0 -24 0  1 0 0  0 1 0  0 0 1 3005.dat
	object {
		_3005_dot_dat
		matrix <1-L3SW/20,0,0,0,1-L3SW/28,0,0,0,1-L3SW/20,0,L3SW/2.8,0>
		matrix <1,0,0,0,1,0,0,0,1,0,-24,0>
		material { L3Color133 }
	}
	// 1 134  0 -24 0  1 0 0  0 1 0  0 0 1 3005.dat
	object {
		_3005_dot_dat
		matrix <1-L3SW/20,0,0,0,1-L3SW/28,0,0,0,1-L3SW/20,0,L3SW/2.8,0>
		matrix <1,0,0,0,1,0,0,0,1,0,-24,0>
		material { L3Color134 }
	}
	// 1 135  0 -24 0  1 0 0  0 1 0  0 0 1 3005.dat
	object {
		_3005_dot_dat
		matrix <1-L3SW/20,0,0,0,1-L3SW/28,0,0,0,1-L3SW/20,0,L3SW/2.8,0>
		matrix <1,0,0,0,1,0,0,0,1,0,-24,0>
		material { L3Color135 }
	}
	// 1 137  0 -24 0  1 0 0  0 1 0  0 0 1 3005.dat
	object {
		_3005_dot_dat
		matrix <1-L3SW/20,0,0,0,1-L3SW/28,0,0,0,1-L3SW/20,0,L3SW/2.8,0>
		matrix <1,0,0,0,1,0,0,0,1,0,-24,0>
		material { L3Color137 }
	}
	// 1 142  0 -24 0  1 0 0  0 1 0  0 0 1 3005.dat
	object {
		_3005_dot_dat
		matrix <1-L3SW/20,0,0,0,1-L3SW/28,0,0,0,1-L3SW/20,0,L3SW/2.8,0>
		matrix <1,0,0,0,1,0,0,0,1,0,-24,0>
		material { L3Color142 }
	}
	// 1 148  0 -24 0  1 0 0  0 1 0  0 0 1 3005.dat
	object {
		_3005_dot_dat
		matrix <1-L3SW/20,0,0,0,1-L3SW/28,0,0,0,1-L3SW/20,0,L3SW/2.8,0>
		matrix <1,0,0,0,1,0,0,0,1,0,-24,0>
		material { L3Color148 }
	}
	// 1 150  0 -24 0  1 0 0  0 1 0  0 0 1 3005.dat
	object {
		_3005_dot_dat
		matrix <1-L3SW/20,0,0,0,1-L3SW/28,0,0,0,1-L3SW/20,0,L3SW/2.8,0>
		matrix <1,0,0,0,1,0,0,0,1,0,-24,0>
		material { L3Color150 }
	}
	// 1 151  0 -24 0  1 0 0  0 1 0  0 0 1 3005.dat
	object {
		_3005_dot_dat
		matrix <1-L3SW/20,0,0,0,1-L3SW/28,0,0,0,1-L3SW/20,0,L3SW/2.8,0>
		matrix <1,0,0,0,1,0,0,0,1,0,-24,0>
		material { L3Color151 }
	}
	// 1 178  0 -24 0  1 0 0  0 1 0  0 0 1 3005.dat
	object {
		_3005_dot_dat
		matrix <1-L3SW/20,0,0,0,1-L3SW/28,0,0,0,1-L3SW/20,0,L3SW/2.8,0>
		matrix <1,0,0,0,1,0,0,0,1,0,-24,0>
		material { L3Color178 }
	}
	// 1 179  0 -24 0  1 0 0  0 1 0  0 0 1 3005.dat
	object {
		_3005_dot_dat
		matrix <1-L3SW/20,0,0,0,1-L3SW/28,0,0,0,1-L3SW/20,0,L3SW/2.8,0>
		matrix <1,0,0,0,1,0,0,0,1,0,-24,0>
		material { L3Color179 }
	}
	// 1 183  0 -24 0  1 0 0  0 1 0  0 0 1 3005.dat
	object {
		_3005_dot_dat
		matrix <1-L3SW/20,0,0,0,1-L3SW/28,0,0,0,1-L3SW/20,0,L3SW/2.8,0>
		matrix <1,0,0,0,1,0,0,0,1,0,-24,0>
		material { L3Color183 }
	}
	// 1 184  0 -24 0  1 0 0  0 1 0  0 0 1 3005.dat
	object {
		_3005_dot_dat
		matrix <1-L3SW/20,0,0,0,1-L3SW/28,0,0,0,1-L3SW/20,0,L3SW/2.8,0>
		matrix <1,0,0,0,1,0,0,0,1,0,-24,0>
		material { L3Color184 }
	}
	// 1 186  0 -24 0  1 0 0  0 1 0  0 0 1 3005.dat
	object {
		_3005_dot_dat
		matrix <1-L3SW/20,0,0,0,1-L3SW/28,0,0,0,1-L3SW/20,0,L3SW/2.8,0>
		matrix <1,0,0,0,1,0,0,0,1,0,-24,0>
		material { L3Color186 }
	}
	// 1 189  0 -24 0  1 0 0  0 1 0  0 0 1 3005.dat
	object {
		_3005_dot_dat
		matrix <1-L3SW/20,0,0,0,1-L3SW/28,0,0,0,1-L3SW/20,0,L3SW/2.8,0>
		matrix <1,0,0,0,1,0,0,0,1,0,-24,0>
		material { L3Color189 }
	}
	// 1 191  0 -24 0  1 0 0  0 1 0  0 0 1 3005.dat
	object {
		_3005_dot_dat
		matrix <1-L3SW/20,0,0,0,1-L3SW/28,0,0,0,1-L3SW/20,0,L3SW/2.8,0>
		matrix <1,0,0,0,1,0,0,0,1,0,-24,0>
		material { L3Color191 }
	}
	// 1 212  0 -24 0  1 0 0  0 1 0  0 0 1 3005.dat
	object {
		_3005_dot_dat
		matrix <1-L3SW/20,0,0,0,1-L3SW/28,0,0,0,1-L3SW/20,0,L3SW/2.8,0>
		matrix <1,0,0,0,1,0,0,0,1,0,-24,0>
		material { L3Color212 }
	}
	// 1 216  0 -24 0  1 0 0  0 1 0  0 0 1 3005.dat
	object {
		_3005_dot_dat
		matrix <1-L3SW/20,0,0,0,1-L3SW/28,0,0,0,1-L3SW/20,0,L3SW/2.8,0>
		matrix <1,0,0,0,1,0,0,0,1,0,-24,0>
		material { L3Color216 }
	}
	// 1 218  0 -24 0  1 0 0  0 1 0  0 0 1 3005.dat
	object {
		_3005_dot_dat
		matrix <1-L3SW/20,0,0,0,1-L3SW/28,0,0,0,1-L3SW/20,0,L3SW/2.8,0>
		matrix <1,0,0,0,1,0,0,0,1,0,-24,0>
		material { L3Color218 }
	}
	// 1 219  0 -24 0  1 0 0  0 1 0  0 0 1 3005.dat
	object {
		_3005_dot_dat
		matrix <1-L3SW/20,0,0,0,1-L3SW/28,0,0,0,1-L3SW/20,0,L3SW/2.8,0>
		matrix <1,0,0,0,1,0,0,0,1,0,-24,0>
		material { L3Color219 }
	}
	// 1 226  0 -24 0  1 0 0  0 1 0  0 0 1 3005.dat
	object {
		_3005_dot_dat
		matrix <1-L3SW/20,0,0,0,1-L3SW/28,0,0,0,1-L3SW/20,0,L3SW/2.8,0>
		matrix <1,0,0,0,1,0,0,0,1,0,-24,0>
		material { L3Color226 }
	}
	// 1 231  0 -24 0  1 0 0  0 1 0  0 0 1 3005.dat
	object {
		_3005_dot_dat
		matrix <1-L3SWT/20,0,0,0,1-L3SWT/28,0,0,0,1-L3SWT/20,0,L3SWT/2.8,0>
		matrix <1,0,0,0,1,0,0,0,1,0,-24,0>
		material { L3Color231 }
	}
	// 1 232  0 -24 0  1 0 0  0 1 0  0 0 1 3005.dat
	object {
		_3005_dot_dat
		matrix <1-L3SW/20,0,0,0,1-L3SW/28,0,0,0,1-L3SW/20,0,L3SW/2.8,0>
		matrix <1,0,0,0,1,0,0,0,1,0,-24,0>
		material { L3Color232 }
	}
	// 1 234  0 -24 0  1 0 0  0 1 0  0 0 1 3005.dat
	object {
		_3005_dot_dat
		matrix <1-L3SWT/20,0,0,0,1-L3SWT/28,0,0,0,1-L3SWT/20,0,L3SWT/2.8,0>
		matrix <1,0,0,0,1,0,0,0,1,0,-24,0>
		material { L3Color234 }
	}
	// 1 256  0 -24 0  1 0 0  0 1 0  0 0 1 3005.dat
	object {
		_3005_dot_dat
		matrix <1-L3SW/20,0,0,0,1-L3SW/28,0,0,0,1-L3SW/20,0,L3SW/2.8,0>
		matrix <1,0,0,0,1,0,0,0,1,0,-24,0>
		material { L3Color256 }
	}
	// 1 272  0 -24 0  1 0 0  0 1 0  0 0 1 3005.dat
	object {
		_3005_dot_dat
		matrix <1-L3SW/20,0,0,0,1-L3SW/28,0,0,0,1-L3SW/20,0,L3SW/2.8,0>
		matrix <1,0,0,0,1,0,0,0,1,0,-24,0>
		material { L3Color272 }
	}
	// 1 273  0 -24 0  1 0 0  0 1 0  0 0 1 3005.dat
	object {
		_3005_dot_dat
		matrix <1-L3SW/20,0,0,0,1-L3SW/28,0,0,0,1-L3SW/20,0,L3SW/2.8,0>
		matrix <1,0,0,0,1,0,0,0,1,0,-24,0>
		material { L3Color273 }
	}
	// 1 284  0 -24 0  1 0 0  0 1 0  0 0 1 3005.dat
	object {
		_3005_dot_dat
		matrix <1-L3SWT/20,0,0,0,1-L3SWT/28,0,0,0,1-L3SWT/20,0,L3SWT/2.8,0>
		matrix <1,0,0,0,1,0,0,0,1,0,-24,0>
		material { L3Color284 }
	}
	// 1 285  0 -24 0  1 0 0  0 1 0  0 0 1 3005.dat
	object {
		_3005_dot_dat
		matrix <1-L3SWT/20,0,0,0,1-L3SWT/28,0,0,0,1-L3SWT/20,0,L3SWT/2.8,0>
		matrix <1,0,0,0,1,0,0,0,1,0,-24,0>
		material { L3Color285 }
	}
	// 1 288  0 -24 0  1 0 0  0 1 0  0 0 1 3005.dat
	object {
		_3005_dot_dat
		matrix <1-L3SW/20,0,0,0,1-L3SW/28,0,0,0,1-L3SW/20,0,L3SW/2.8,0>
		matrix <1,0,0,0,1,0,0,0,1,0,-24,0>
		material { L3Color288 }
	}
	// 1 293  0 -24 0  1 0 0  0 1 0  0 0 1 3005.dat
	object {
		_3005_dot_dat
		matrix <1-L3SWT/20,0,0,0,1-L3SWT/28,0,0,0,1-L3SWT/20,0,L3SWT/2.8,0>
		matrix <1,0,0,0,1,0,0,0,1,0,-24,0>
		material { L3Color293 }
	}
	// 1 294  0 -24 0  1 0 0  0 1 0  0 0 1 3005.dat
	object {
		_3005_dot_dat
		matrix <1-L3SWT/20,0,0,0,1-L3SWT/28,0,0,0,1-L3SWT/20,0,L3SWT/2.8,0>
		matrix <1,0,0,0,1,0,0,0,1,0,-24,0>
		material { L3Color294 }
	}
	// 1 295  0 -24 0  1 0 0  0 1 0  0 0 1 3005.dat
	object {
		_3005_dot_dat
		matrix <1-L3SW/20,0,0,0,1-L3SW/28,0,0,0,1-L3SW/20,0,L3SW/2.8,0>
		matrix <1,0,0,0,1,0,0,0,1,0,-24,0>
		material { L3Color295 }
	}
	// 1 297  0 -24 0  1 0 0  0 1 0  0 0 1 3005.dat
	object {
		_3005_dot_dat
		matrix <1-L3SW/20,0,0,0,1-L3SW/28,0,0,0,1-L3SW/20,0,L3SW/2.8,0>
		matrix <1,0,0,0,1,0,0,0,1,0,-24,0>
		material { L3Color297 }
	}
	// 1 300  0 -24 0  1 0 0  0 1 0  0 0 1 3005.dat
	object {
		_3005_dot_dat
		matrix <1-L3SW/20,0,0,0,1-L3SW/28,0,0,0,1-L3SW/20,0,L3SW/2.8,0>
		matrix <1,0,0,0,1,0,0,0,1,0,-24,0>
		material { L3Color300 }
	}
	// 1 302  0 -24 0  1 0 0  0 1 0  0 0 1 3005.dat
	object {
		_3005_dot_dat
		matrix <1-L3SWT/20,0,0,0,1-L3SWT/28,0,0,0,1-L3SWT/20,0,L3SWT/2.8,0>
		matrix <1,0,0,0,1,0,0,0,1,0,-24,0>
		material { L3Color302 }
	}
	// 1 308  0 -24 0  1 0 0  0 1 0  0 0 1 3005.dat
	object {
		_3005_dot_dat
		matrix <1-L3SW/20,0,0,0,1-L3SW/28,0,0,0,1-L3SW/20,0,L3SW/2.8,0>
		matrix <1,0,0,0,1,0,0,0,1,0,-24,0>
		material { L3Color308 }
	}
	// 1 313  0 -24 0  1 0 0  0 1 0  0 0 1 3005.dat
	object {
		_3005_dot_dat
		matrix <1-L3SW/20,0,0,0,1-L3SW/28,0,0,0,1-L3SW/20,0,L3SW/2.8,0>
		matrix <1,0,0,0,1,0,0,0,1,0,-24,0>
		material { L3Color313 }
	}
	// 1 320  0 -24 0  1 0 0  0 1 0  0 0 1 3005.dat
	object {
		_3005_dot_dat
		matrix <1-L3SW/20,0,0,0,1-L3SW/28,0,0,0,1-L3SW/20,0,L3SW/2.8,0>
		matrix <1,0,0,0,1,0,0,0,1,0,-24,0>
		material { L3Color320 }
	}
	// 1 321  0 -24 0  1 0 0  0 1 0  0 0 1 3005.dat
	object {
		_3005_dot_dat
		matrix <1-L3SW/20,0,0,0,1-L3SW/28,0,0,0,1-L3SW/20,0,L3SW/2.8,0>
		matrix <1,0,0,0,1,0,0,0,1,0,-24,0>
		material { L3Color321 }
	}
	// 1 322  0 -24 0  1 0 0  0 1 0  0 0 1 3005.dat
	object {
		_3005_dot_dat
		matrix <1-L3SW/20,0,0,0,1-L3SW/28,0,0,0,1-L3SW/20,0,L3SW/2.8,0>
		matrix <1,0,0,0,1,0,0,0,1,0,-24,0>
		material { L3Color322 }
	}
	// 1 323  0 -24 0  1 0 0  0 1 0  0 0 1 3005.dat
	object {
		_3005_dot_dat
		matrix <1-L3SW/20,0,0,0,1-L3SW/28,0,0,0,1-L3SW/20,0,L3SW/2.8,0>
		matrix <1,0,0,0,1,0,0,0,1,0,-24,0>
		material { L3Color323 }
	}
	// 1 324  0 -24 0  1 0 0  0 1 0  0 0 1 3005.dat
	object {
		_3005_dot_dat
		matrix <1-L3SW/20,0,0,0,1-L3SW/28,0,0,0,1-L3SW/20,0,L3SW/2.8,0>
		matrix <1,0,0,0,1,0,0,0,1,0,-24,0>
		material { L3Color324 }
	}
	// 1 326  0 -24 0  1 0 0  0 1 0  0 0 1 3005.dat
	object {
		_3005_dot_dat
		matrix <1-L3SW/20,0,0,0,1-L3SW/28,0,0,0,1-L3SW/20,0,L3SW/2.8,0>
		matrix <1,0,0,0,1,0,0,0,1,0,-24,0>
		material { L3Color326 }
	}
	// 1 329  0 -24 0  1 0 0  0 1 0  0 0 1 3005.dat
	object {
		_3005_dot_dat
		matrix <1-L3SWT/20,0,0,0,1-L3SWT/28,0,0,0,1-L3SWT/20,0,L3SWT/2.8,0>
		matrix <1,0,0,0,1,0,0,0,1,0,-24,0>
		material { L3Color329 }
	}
	// 1 330  0 -24 0  1 0 0  0 1 0  0 0 1 3005.dat
	object {
		_3005_dot_dat
		matrix <1-L3SW/20,0,0,0,1-L3SW/28,0,0,0,1-L3SW/20,0,L3SW/2.8,0>
		matrix <1,0,0,0,1,0,0,0,1,0,-24,0>
		material { L3Color330 }
	}
	// 1 334  0 -24 0  1 0 0  0 1 0  0 0 1 3005.dat
	object {
		_3005_dot_dat
		matrix <1-L3SW/20,0,0,0,1-L3SW/28,0,0,0,1-L3SW/20,0,L3SW/2.8,0>
		matrix <1,0,0,0,1,0,0,0,1,0,-24,0>
		material { L3Color334 }
	}
	// 1 335  0 -24 0  1 0 0  0 1 0  0 0 1 3005.dat
	object {
		_3005_dot_dat
		matrix <1-L3SW/20,0,0,0,1-L3SW/28,0,0,0,1-L3SW/20,0,L3SW/2.8,0>
		matrix <1,0,0,0,1,0,0,0,1,0,-24,0>
		material { L3Color335 }
	}
	// 1 339  0 -24 0  1 0 0  0 1 0  0 0 1 3005.dat
	object {
		_3005_dot_dat
		matrix <1-L3SWT/20,0,0,0,1-L3SWT/28,0,0,0,1-L3SWT/20,0,L3SWT/2.8,0>
		matrix <1,0,0,0,1,0,0,0,1,0,-24,0>
		material { L3Color339 }
	}
	// 1 350  0 -24 0  1 0 0  0 1 0  0 0 1 3005.dat
	object {
		_3005_dot_dat
		matrix <1-L3SW/20,0,0,0,1-L3SW/28,0,0,0,1-L3SW/20,0,L3SW/2.8,0>
		matrix <1,0,0,0,1,0,0,0,1,0,-24,0>
		material { L3Color350 }
	}
	// 1 351  0 -24 0  1 0 0  0 1 0  0 0 1 3005.dat
	object {
		_3005_dot_dat
		matrix <1-L3SW/20,0,0,0,1-L3SW/28,0,0,0,1-L3SW/20,0,L3SW/2.8,0>
		matrix <1,0,0,0,1,0,0,0,1,0,-24,0>
		material { L3Color351 }
	}
	// 1 366  0 -24 0  1 0 0  0 1 0  0 0 1 3005.dat
	object {
		_3005_dot_dat
		matrix <1-L3SW/20,0,0,0,1-L3SW/28,0,0,0,1-L3SW/20,0,L3SW/2.8,0>
		matrix <1,0,0,0,1,0,0,0,1,0,-24,0>
		material { L3Color366 }
	}
	// 1 373  0 -24 0  1 0 0  0 1 0  0 0 1 3005.dat
	object {
		_3005_dot_dat
		matrix <1-L3SW/20,0,0,0,1-L3SW/28,0,0,0,1-L3SW/20,0,L3SW/2.8,0>
		matrix <1,0,0,0,1,0,0,0,1,0,-24,0>
		material { L3Color373 }
	}
	// 1 375  0 -24 0  1 0 0  0 1 0  0 0 1 3005.dat
	object {
		_3005_dot_dat
		matrix <1-L3SW/20,0,0,0,1-L3SW/28,0,0,0,1-L3SW/20,0,L3SW/2.8,0>
		matrix <1,0,0,0,1,0,0,0,1,0,-24,0>
		material { L3Color375 }
	}
	// 1 378  0 -24 0  1 0 0  0 1 0  0 0 1 3005.dat
	object {
		_3005_dot_dat
		matrix <1-L3SW/20,0,0,0,1-L3SW/28,0,0,0,1-L3SW/20,0,L3SW/2.8,0>
		matrix <1,0,0,0,1,0,0,0,1,0,-24,0>
		material { L3Color378 }
	}
	// 1 379  0 -24 0  1 0 0  0 1 0  0 0 1 3005.dat
	object {
		_3005_dot_dat
		matrix <1-L3SW/20,0,0,0,1-L3SW/28,0,0,0,1-L3SW/20,0,L3SW/2.8,0>
		matrix <1,0,0,0,1,0,0,0,1,0,-24,0>
		material { L3Color379 }
	}
	// 1 383  0 -24 0  1 0 0  0 1 0  0 0 1 3005.dat
	object {
		_3005_dot_dat
		matrix <1-L3SW/20,0,0,0,1-L3SW/28,0,0,0,1-L3SW/20,0,L3SW/2.8,0>
		matrix <1,0,0,0,1,0,0,0,1,0,-24,0>
		material { L3Color383 }
	}
	// 1 406  0 -24 0  1 0 0  0 1 0  0 0 1 3005.dat
	object {
		_3005_dot_dat
		matrix <1-L3SW/20,0,0,0,1-L3SW/28,0,0,0,1-L3SW/20,0,L3SW/2.8,0>
		matrix <1,0,0,0,1,0,0,0,1,0,-24,0>
		material { L3Color406 }
	}
	// 1 449  0 -24 0  1 0 0  0 1 0  0 0 1 3005.dat
	object {
		_3005_dot_dat
		matrix <1-L3SW/20,0,0,0,1-L3SW/28,0,0,0,1-L3SW/20,0,L3SW/2.8,0>
		matrix <1,0,0,0,1,0,0,0,1,0,-24,0>
		material { L3Color449 }
	}
	// 1 450  0 -24 0  1 0 0  0 1 0  0 0 1 3005.dat
	object {
		_3005_dot_dat
		matrix <1-L3SW/20,0,0,0,1-L3SW/28,0,0,0,1-L3SW/20,0,L3SW/2.8,0>
		matrix <1,0,0,0,1,0,0,0,1,0,-24,0>
		material { L3Color450 }
	}
	// 1 462  0 -24 0  1 0 0  0 1 0  0 0 1 3005.dat
	object {
		_3005_dot_dat
		matrix <1-L3SW/20,0,0,0,1-L3SW/28,0,0,0,1-L3SW/20,0,L3SW/2.8,0>
		matrix <1,0,0,0,1,0,0,0,1,0,-24,0>
		material { L3Color462 }
	}
	// 1 484  0 -24 0  1 0 0  0 1 0  0 0 1 3005.dat
	object {
		_3005_dot_dat
		matrix <1-L3SW/20,0,0,0,1-L3SW/28,0,0,0,1-L3SW/20,0,L3SW/2.8,0>
		matrix <1,0,0,0,1,0,0,0,1,0,-24,0>
		material { L3Color484 }
	}
	// 1 490  0 -24 0  1 0 0  0 1 0  0 0 1 3005.dat
	object {
		_3005_dot_dat
		matrix <1-L3SW/20,0,0,0,1-L3SW/28,0,0,0,1-L3SW/20,0,L3SW/2.8,0>
		matrix <1,0,0,0,1,0,0,0,1,0,-24,0>
		material { L3Color490 }
	}
	// 1 493  0 -24 0  1 0 0  0 1 0  0 0 1 3005.dat
	object {
		_3005_dot_dat
		matrix <1-L3SW/20,0,0,0,1-L3SW/28,0,0,0,1-L3SW/20,0,L3SW/2.8,0>
		matrix <1,0,0,0,1,0,0,0,1,0,-24,0>
		material { L3Color493 }
	}
	// 1 494  0 -24 0  1 0 0  0 1 0  0 0 1 3005.dat
	object {
		_3005_dot_dat
		matrix <1-L3SW/20,0,0,0,1-L3SW/28,0,0,0,1-L3SW/20,0,L3SW/2.8,0>
		matrix <1,0,0,0,1,0,0,0,1,0,-24,0>
		material { L3Color494 }
	}
	// 1 495  0 -24 0  1 0 0  0 1 0  0 0 1 3005.dat
	object {
		_3005_dot_dat
		matrix <1-L3SW/20,0,0,0,1-L3SW/28,0,0,0,1-L3SW/20,0,L3SW/2.8,0>
		matrix <1,0,0,0,1,0,0,0,1,0,-24,0>
		material { L3Color495 }
	}
	// 1 496  0 -24 0  1 0 0  0 1 0  0 0 1 3005.dat
	object {
		_3005_dot_dat
		matrix <1-L3SW/20,0,0,0,1-L3SW/28,0,0,0,1-L3SW/20,0,L3SW/2.8,0>
		matrix <1,0,0,0,1,0,0,0,1,0,-24,0>
		material { L3Color496 }
	}
	// 1 503  0 -24 0  1 0 0  0 1 0  0 0 1 3005.dat
	object {
		_3005_dot_dat
		matrix <1-L3SW/20,0,0,0,1-L3SW/28,0,0,0,1-L3SW/20,0,L3SW/2.8,0>
		matrix <1,0,0,0,1,0,0,0,1,0,-24,0>
		material { L3Color503 }
	}
	// 1 504  0 -24 0  1 0 0  0 1 0  0 0 1 3005.dat
	object {
		_3005_dot_dat
		matrix <1-L3SW/20,0,0,0,1-L3SW/28,0,0,0,1-L3SW/20,0,L3SW/2.8,0>
		matrix <1,0,0,0,1,0,0,0,1,0,-24,0>
		material { L3Color504 }
	}
	// 1 511  0 -24 0  1 0 0  0 1 0  0 0 1 3005.dat
	object {
		_3005_dot_dat
		matrix <1-L3SW/20,0,0,0,1-L3SW/28,0,0,0,1-L3SW/20,0,L3SW/2.8,0>
		matrix <1,0,0,0,1,0,0,0,1,0,-24,0>
		material { L3Color511 }
	}
}
#end // ifndef (every__color_dot_ldr)


//// ModelData
#declare L3ModelBBoxMin = <-10,-28,-10>;
#declare L3ModelBBoxMax = <10,0,10>;
#declare L3ModelBBoxCenter = (L3ModelBBoxMin+L3ModelBBoxMax)/2; // <0,-14,0>
#declare L3ModelBBoxSize = L3ModelBBoxMax-L3ModelBBoxMin; // <20,28,20>
#declare L3FloorY = L3ModelBBoxMax.y;

//// Camera
// L3P's automatic camera positioning was based on the following:
// L3Latitude=30
// L3Longitude=45
// L3Radius=38.3908
// L3PercentageBack=0
// L3ViewingAngle=67.3801
// L3RollAngle=0
// L3AspectRatio=4/3
// If changed below, objects may no longer fit into the view.
camera {
	#declare L3PercentageBack = 0; // Percentage of radius
	#declare L3Orthographic = 0; // Set to 1 for orthographic view
	#declare L3ViewingAngle = 67.3801; // degrees
	#declare L3RollAngle = 0; // degrees
	#declare L3AspectRatio = 4/3;
	#declare L3Sky = -y;
	#declare L3StereoAngle = 5; // degrees
	//5 degrees corresponds to a distance between eyes (stereo cameras)
	//of 1/12 of distance to model.
	#declare L3StereoView = 0; // Normal view
	//Uncomment either two lines below to make stereo images:
	//#declare L3StereoView = -L3StereoAngle/2; // Left view
	//#declare L3StereoView =  L3StereoAngle/2; // Right view

	#if (version >= 3.5)
		#if (abs(L3AspectRatio-image_width/image_height) > 0.01)
			#error "L3AspectRatio does not match image size. Select a correct image size or use option -car<ar>."
		#end
	#end

	sky      L3Sky
	right    -L3AspectRatio*x
	#if (L3Orthographic)

		#error "* * doesn't work yet..."

		orthographic
		#declare L3LookAt = <0,-14,0>; // BBox center (not -cla)
		#declare L3OrthoScale = (1+L3PercentageBack/100.0)*38.3908;
		#declare L3Location = L3LookAt - 2000*<-0.612372,0.5,0.612372>;
		location L3Location
		scale    L3OrthoScale
	#else
		#declare L3LookAt = <0.927627,-11.7278,-0.927623>; // Calculated (not -cla)
		#declare L3Location = <24.4371,-30.9232,-24.4371>;
		#declare L3Location = L3Location + L3PercentageBack/100.0*(L3Location-L3LookAt);
		//#if (L3StereoView)
		//	#declare L3Location = L3LookAt + vaxis_rotate(L3Location-L3LookAt, <-0.353553,-0.866025,0.353553>, L3StereoView);
		//#end
		angle    L3ViewingAngle
		location L3Location
	#end
	look_at  L3LookAt
	rotate   <0,1e-5,0> // Prevent gap between adjacent quads

#declare Closer = L3LookAt+0.1*(L3Location-L3LookAt);

	translate -L3Location
	#declare vx=vaxis_rotate(x,L3LookAt-L3Location,L3RollAngle);
	#declare vy=vaxis_rotate(y,L3LookAt-L3Location,L3RollAngle);
	#declare vz=vaxis_rotate(z,L3LookAt-L3Location,L3RollAngle);
	matrix <vx.x,vx.y,vx.z, vy.x,vy.y,vy.z, vz.x,vz.y,vz.z, 0,0,0>
	translate L3Location

#if (L3StereoView)
	translate -L3Location
	#declare Ver=<-0.353553,-0.866025,0.353553>;
	#declare vx=vaxis_rotate(x,Ver,L3StereoView);
	#declare vy=vaxis_rotate(y,Ver,L3StereoView);
	#declare vz=vaxis_rotate(z,Ver,L3StereoView);
	matrix <vx.x,vx.y,vx.z, vy.x,vy.y,vy.z, vz.x,vz.y,vz.z, 0,0,0>
	#declare L3Location = L3LookAt + vaxis_rotate(L3Location-L3LookAt, Ver, L3StereoView);
	translate L3Location
#end


//////////////////////////////////////////////////
// What about L3RollAngle... before/after stereo ?
//////////////////////////////////////////////////

	//Rotate model around its center:
	//translate -L3ModelBBoxCenter
	//rotate    <0,360*clock,0>
	//translate L3ModelBBoxCenter
}

//// Lights
light_source {
	<0,-41.1464,-27.1464>  // Latitude,Longitude,Radius: 45,0,38.3908
	color rgb <1,1,1>
}
light_source {
	<28.7931,-33.1954,16.6237>  // Latitude,Longitude,Radius: 30,120,38.3908
	color rgb <1,1,1>
}
light_source {
	<-16.6237,-47.2474,9.59771>  // Latitude,Longitude,Radius: 60,-120,38.3908
	color rgb <1,1,1>
}

//// ModelObject every_color.ldr
object { every__color_dot_ldr material { L3Color7 } }



//// Statistics
//               PARTS             P         Total
// DAT files:        1             5             7
// LGEO:             0 (0%)        0 (0%)
// Model has 162 parts (162 studs)

//// End
